// adds elif in and not in
// Not yet in the traverser

//if and else on different lines from level 6


//Next step: remove adding of x_x_x_x_ from levle 6

ifelse: _if_clause (_SPACE+ _EOL* | _SPACE* _EOL+) _else_clause
ifs: _if_clause // 'if' is a reserved word in Python, hence the name of the rule is 'ifs'
elifs: _ELIF (condition | condition_spaces | error_condition) _EOL+ _if_less_command
ifelifelse: _if_clause (_SPACE+ _EOL* | _SPACE* _EOL+) (elifs)*  (_SPACE+ _EOL* | _SPACE* _EOL+) _else_clause

// FH June 2025: New to allow decimals in the grammar
?atom: NUMBER | _MINUS NUMBER | var_access | textwithoutspaces // we now allow floats with NUMBER

condition: equality_check | in_list_check | not_in_list_check
in_list_check: textwithoutspaces _IN var_access
not_in_list_check: textwithoutspaces _NOT_IN var_access

// More advances ins migt be needed lateron?
// in_list_check: (list_access | var_access | text_in_quotes | NUMBER) _IN var_access
// not_in_list_check: (list_access | var_access | text_in_quotes | NUMBER) _NOT_IN var_access

command:+=ifelifelse

