levels:
    1:
        1:
            question_text: Wie heißt diese Programmiersprache?
            mp_choice_options:
            -   option: Hedy
                feedback: Gut gemacht!
            -   option: Heddy
                feedback: Nicht dieses!
            -   option: Haydie
                feedback: Dieses nicht!
            -   option: Heidi
                feedback: Nicht dieses!
            hint: Es ist nach Hedy Lamarr benannt.
        2:
            question_text: Welche müssen in die Lücken gefüllt werden, um den Text Hello! erscheinen zu lassen?
            code: _ Hallo!
            mp_choice_options:
            -   option: '`{echo}`'
                feedback: '`{echo}` wiederholt eine gegebene Antwort.'
            -   option: '`{print}`'
                feedback: Richtig!
            -   option: '`hello`'
                feedback: Hallo ist kein Befehl.
            -   option: '`{ask}`'
                feedback: Mit `{ask}` kannst du eine Frage stellen.
            hint: _ Hallo Welt!
        3:
            question_text: Wie fragst du, was jemandes Lieblingsfarbe ist?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Was ist deine Lieblingsfarbe?
                    ```
                feedback: '`{print}` gibt Text aus, aber es stellt keine Fragen.'
            -   option: |-
                    ```
                    {ask} {print} Was ist deine Lieblingsfarbe?
                    ```
                feedback: Du brauchst nur einen Befehl, nicht zwei.
            -   option: |-
                    ```
                    {ask} Was ist deine Lieblingsfarbe?
                    ```
                feedback: Großartig!
            -   option: |-
                    ```
                    {echo} Was ist deine Lieblingsfarbe?
                    ```
                feedback: '`{echo}` gibt deine Antwort aus.'
            hint: Mit dem `{ask}`-Befehl kannst du etwas fragen
        4:
            question_text: Was ist falsch an diesem Code?
            code: |-
                Hallo, ich bin Hedy!
                {ask} Wer bist du?
                {echo} Hallo…
            mp_choice_options:
            -   option: '`{print}` fehlt in Zeile 1.'
                feedback: Richtig!
            -   option: Der Befehl in Zeile 2 ist falsch geschrieben.
                feedback: Der Befehl ist richtig geschrieben.
            -   option: '`{echo}` ist kein Befehl.'
                feedback: '`{echo}` ist ein Befehl, es gibt noch einen weiteren Fehler.'
            -   option: Nichts! Der Code ist perfekt!
                feedback: Falsch, schau nochmal genau hin!
            hint: Zeile 1 sieht nicht ganz richtig aus
        5:
            question_text: Welcher Befehl fehlt in Zeile 2?
            code: |-
                {ask} Was ist dein Lieblingstier?
                _ Also ist dein Lieblingstier...
            mp_choice_options:
            -   option: '`{print}`'
                feedback: Nein, du möchtest, dass dir die Antwort laut zurückgegeben wird.
            -   option: '`Hedy`'
                feedback: Hedy ist kein Befehl.
            -   option: '`{ask}`'
                feedback: Mit `{ask}` kannst du fragen stellen.
            -   option: '`{echo}`'
                feedback: Richtig!
            hint: Du möchtest die Antwort am Ende von Zeile 2 sehen...
        6:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                {print} Hi ich bin Hedy!
                {print} Welches Fußball-Team unterstützt du?
                {echo} Du unterstützt...
                {print} Cool! Ich auch!
            mp_choice_options:
            -   option: In Zeile 1 sollte `{print}` mit `{ask}` ersetzt werden.
                feedback: '`{print}` in Zeile 1 ist richtig.'
            -   option: In Zeile 2 sollte `{print}` mit `{ask}` ersetzt werden.
                feedback: Großartig! Du hast aufgepasst!
            -   option: Zeile 3 muss mit `{print}` anstelle von `{echo}` beginnen.
                feedback: '`{echo}` ist richtig.'
            -   option: In Zeile 4, `{print}` ist falsch geschrieben.
                feedback: Nein, der Fehler liegt woanders
            hint: Prüfe die `{print}` Befehle.
        7:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                {print} Willkommen bei Hedys Restaurant!
                {ask} Was würdest du gerne essen?
                {echo}  Deine Bestellung lautet ...
                {print} Kommt sofort! Guten Appetit!
            mp_choice_options:
            -   option: In Zeile 1 sollte `{print}` mit `{ask}` ersetzt werden
                feedback: Bist du sicher, dass etwas nicht stimmt?
            -   option: In Zeile 1 sollte `{print}` mit `{echo}` ersetzt werden
                feedback: Bist du sicher, dass etwas nicht stimmt?
            -   option: In Zeile 3 sollte `{echo}` mit `{print}` ersetzt werden
                feedback: Bist du sicher, dass etwas nicht stimmt?
            -   option: Nichts! Dies ist ein perfekter Code!
                feedback: Richtig!
            hint: Prüfe den Code Zeile für Zeile
        8:
            question_text: Wie wird der Befehl `{echo}` verwendet?
            mp_choice_options:
            -   option: Du kannst `{ask}` verwenden um eine Frage zu stellen.
                feedback: Dafür ist `{ask}` da!
            -   option: Du kannst es genauso benutzen wie `{print}`.
                feedback: Dafür ist `{print}` da!
            -   option: Du kannst es verwenden, um eine Antwort zu wiederholen.
                feedback: Gut gemacht!
            -   option: Du kannst es verwenden, um Text verschwinden zu lassen.
                feedback: Das ist nicht richtig...
            hint: '`{echo}` wird nach einem `{ask}` Befehl benutzt.'
        9:
            question_text: Was ist an diesem Code falsch?
            code: |-
                {print} Hallo!
                {print} Wie geht es dir?
                {echo} Also geht es dir...
            mp_choice_options:
            -   option: '`{print}` in line 1 should be `{ask}`'
                feedback: Nein, `{print}` ist richtig. Wo wird die Frage gestellt?
            -   option: '`{print}` in line 2 should be `{ask}`'
                feedback: Super!
            -   option: '`{echo}` in Zeile 3 sollte `{ask}` sein'
                feedback: Nein, `{echo}` ist richtig. Wo wird die Frage gestellt?
            -   option: Nichts. Dies ist einwandfreier Code!
                feedback: Suche sorgfältig nach dem Fehler...
            hint: '`{ask}` erlaubt es dir, eine Frage zu stellen'
        10:
            question_text: Welche Ausgabe wird im Ausgabebereich erscheinen, wenn du diesen Code ausführst?
            mp_choice_options:
            -   option: Are you ready to go to level 2?
                feedback: Es gibt zwei `{echo}` Befehle
            -   option: |-
                    Yes!
                    Yes!
                feedback: Great job!
            -   option: Yes!
                feedback: Es gibt zwei `{echo}` -Befehle
            -   option: |-
                    Are you ready to go to level 2?
                    Yes!
                feedback: Es gibt zwei `{echo}` -Befehle
    2:
        1:
            question_text: Welche Aussage ist wahr?
            mp_choice_options:
            -   option: Du kannst den `{print}` Befehl benutzen, um Fragen zu stellen.
                feedback: Dazu ist der `{ask}` Befehl da
            -   option: Du kannst den `{ask}` Befehl benutzen um eine Antwort auszugeben.
                feedback: Das ist nicht richtig
            -   option: Mit dem `{print}` Befehl kannst du Text erscheinen lassen
                feedback: Gut
            -   option: Mit dem `{sleep}` Befehl kannst du Text vom Bildschirm entfernen.
                feedback: So funktioniert `{sleep}` nicht.
            hint: '`{print}` funktioniert genauso wie in Level 1'
        2:
            question_text: Welcher Code ist korrekt?
            mp_choice_options:
            -   option: |-
                    ```
                    name {is} {ask} Wie ist dein Name?
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    {ask} {is} name Wie ist dein Name?
                    ```
                feedback: Die Worte sind richtig, die Reihenfolge nicht!
            -   option: |-
                    ```
                    {ask} Wie lautet dein Name?
                    ```
                feedback: Das funktionierte in Level 1, aber in Level 2 und höhere funktioniert es anders.
            -   option: |-
                    ```
                    {ask} Wie lautet dein Name? {is} name
                    ```
                feedback: Die Worte sind richtig, die Reihenfolge nicht!
            hint: '`{ask}` funktioniert nicht wie in Level 1'
        3:
            question_text: Was erscheint in der Ausgabe, wenn du diesen Code ausführst?
            code: |-
                name {is} Marleen
                {print} name geht auf den Markt und kauft einen Apfel.
            mp_choice_options:
            -   option: name geht auf den Markt und kauft einen Apfel.
                feedback: Das Wort name wird durch Marleen ersetzt
            -   option: Marleen geht auf den Markt.
                feedback: Der zweite Teil des Satzes wird nicht ausgelassen!
            -   option: Marleen geht auf den Markt und kauft einen Apfel.
                feedback: Richtig!
            -   option: Marleen geht auf den Markt und Marleen kauft einen Apfel.
                feedback: Sie wird nicht durch name ersetzt
            hint: Das Wort name wird durch Marleen ersetzt
        4:
            question_text: Was wird auf dem Ausgabebildschirm angezeigt, wenn du diesen Code ausführst?
            code: |-
                Name {is} Hedy
                {print} Hi mein Name ist Name
            mp_choice_options:
            -   option: Hi my name is name
                feedback: Der Variablenname wird durch Hedy ersetzt
            -   option: Hi my name is Hedy
                feedback: Der Variablenname wird durch Hedy ersetzt
            -   option: Hi my Hedy is name
                feedback: Der Variablenname wird durch Hedy ersetzt
            -   option: Hi my Hedy is Hedy
                feedback: Richtig, dieser Fehler wird in Level 4 behoben!
            hint: '''name'' wird an beiden Stellen durch ''Hedy'' ersetzt'
        5:
            question_text: Was passiert wenn du den `{sleep}` Befehl verwendest?
            mp_choice_options:
            -   option: Es verlangsamt deinen Computer
                feedback: glücklicherweise nicht!
            -   option: Es schließt Hedy
                feedback: glücklicherweise nicht!
            -   option: Dein Programm pausiert für eine Sekunde und fährt dann fort
                feedback: Das ist korrekt!
            -   option: Du fügst es am Ende ein, damit Hedy weiß, dass dein Programm fertig ist
                feedback: Nein, es wäre am Ende deines Codes nutzlos
            hint: Der Computer wartet eine Sekunde lang beim Befehl `{sleep}`
        6:
            question_text: Was sollte in den Zeilen stehen?
            code: |-
                {print} Und der Preis für die beste Programmiersprache geht an...
                _
                {print} Hedy!
            mp_choice_options:
            -   option: '`{sleep}`'
                feedback: Perfekt!
            -   option: '`{echo}`'
                feedback: Hier gibt es nichts zu wiederholen
            -   option: '`{print}`'
                feedback: Es gibt hier keinen Text für `{print}`
            -   option: '`{ask}`'
                feedback: Es gibt keine Frage, die gestellt wird
            hint: Pause für dramatischen Effekt...
        7:
            question_text: Welcher Befehl sollte in Zeile 2 verwendet werden?
            code: |-
                {print} Ich werde in 3 Sekunden explodieren!
                _
                {print} BOOM!
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 3
                    ```
                feedback: Du brauchst `{print}` nicht
            -   option: |-
                    ```
                    {sleep} 3
                    ```
                feedback: Perfekt!
            -   option: |-
                    ```
                    {sleep}
                    ```
                feedback: Auf diese Weise wird die Bombe in 1 Sekunde explodieren
            -   option: |-
                    ```
                    {sleep} {sleep} {sleep}
                    ```
                feedback: Mach es dir leichter, indem du die Zahl 3 verwendest
            hint: Du willst, dass der Computer 3 Sekunden lang wartet
        8:
            question_text: Wie würdest du die erste Zeile des Codes korrigieren?
            code: |-
                {ask} {is} Wie alt bist du?
                {print} age
            mp_choice_options:
            -   option: |-
                    ```
                    age {ask} {is} Wie alt bist du?
                    ```
                feedback: Das ist die falsche Reihenfolge
            -   option: |-
                    ```
                    {ask} {is} age Wie alt bist du?
                    ```
                feedback: Das ist die falsche Reihenfolge
            -   option: |-
                    ```
                    age {is} {ask} Wie alt bist du?
                    ```
                feedback: Du hast es verstanden!
            -   option: |-
                    ```
                    age {is} Wie alt bist du?
                    ```
                feedback: Wo ist der `{ask}` Befehl?
            hint: Der Variablenname sollte an erster Stelle stehen
        9:
            question_text: Was läuft in diesem Code schief?
            mp_choice_options:
            -   option: 'Zeile 1 sollte lauten: dogs `{is}` animals'
                feedback: Der Variablenname ist animal
            -   option: 'Zeile 1 sollte lauten: animal `{is}` dogs'
                feedback: Großartig!
            -   option: 'Zeile 2 sollte lauten: `{print}` I love animals'
                feedback: Der Variablenname ist animal
            -   option: 'Zeile 2 sollte lauten: `{sleep}` I love animals'
                feedback: Schlafe wird nicht benutzt, um Text zu `{print}`
            hint: Du willst mit  `{print}`  'I love dogs' ausgeben
        10:
            question_text: Welcher Befehl muss in Zeile 1 verwendet werden?
            code: |-
                sorte {is} _
                {print} Dein Lieblingseis ist...
                {sleep}
                {print} sorte
            mp_choice_options:
            -   option: |-
                    ```
                    {sleep} 3
                    ```
                feedback: Du willst die Lieblingssorte wissen!
            -   option: |-
                    ```
                    {print} Erdbeere
                    ```
                feedback: Du willst keinen  `{print}` Befehl in der Mitte der Zeile...
            -   option: |-
                    ```
                    Erdbeere, Schokolade, Vanille
                    ```
                feedback: So machst du eine Liste. Das willst du jetzt gerade nicht.
            -   option: |-
                    ```
                    {ask} Was ist dein Lieblingseis?
                    ```
                feedback: Das ist richtig!
            hint: Du willst mit `{ask}` eine Frage stellen
    3:
        1:
            question_text: Mit welchen Befehlen kann Hedy etwas Zufälliges auswählen?
            mp_choice_options:
            -   option: '`{print}`'
                feedback: '`{print}` wird verwendet, um Texte auszugeben'
            -   option: '`{ask}`'
                feedback: '`{ask}` wird verwendet, um Fragen zu stellen'
            -   option: '`{is}`'
                feedback: '`{is}` wird verwendet, um eine Liste zu erstellen'
            -   option: '`{at} {random}`'
                feedback: Korrekt!
            hint: Zufällig bedeutet ohne Plan.
        2:
            question_text: Welcher Fehler versteckt sich in diesem Code?
            code: |-
                tiere {is} Hund Katze Kuh
                {print} tiere {at} {random}
            mp_choice_options:
            -   option: 'Du brauchst Beistriche in Zeile 1: Hund, Katze, Kuh.'
                feedback: Gut gemacht!
            -   option: Zeile 1 muss mit  `{print}` beginnen.
                feedback: Nein, `{print}` brauchst du nicht
            -   option: Zeile 2 muss sein 'tier' anstatt 'tiere'
                feedback: tiere ist korrekt.
            -   option: '`{at} {random}` ist nicht richtig geschrieben'
                feedback: '`{at} {random}` ist die richtige Schreibweise'
            hint: In Zeile 1 hat sich ein Fehler eingeschlichen
        3:
            question_text: Wie beseitigt man den Fehler in Zeile 2?
            code: |-
                optionen {is} Schere, Stein, Papier
                {print} Schere, Stein, Papier {at} {random}
            mp_choice_options:
            -   option: |-
                    ```
                    {at} {random} {print} options
                    ```
                feedback: Fast richtig. Die Reihenfolge der Wörter ist noch nicht korrekt.
            -   option: |-
                    ```
                    {print} Stein {at} {random}
                    ```
                feedback: Du willst, dass Hedy nicht immer Stein mit {print} ausgibt, manchmal möchtest du auch Schere oder Papier.
            -   option: |-
                    ```
                    {print} options {at} {random}
                    ```
                feedback: Sehr gut!
            -   option: Nichts, der Code ist korrekt!
                feedback: Such genau nach dem Fehler
            hint: Die Variable (die Liste) heißt optionen.
        4:
            question_text: Was muss in Zeile 2 geändert werden, um einen Zufallspreis auszugeben?
            code: |-
                preise {is} 1 Euro, 100 Euro, 1 million Euro
                {print} preis {at} {random}
            mp_choice_options:
            -   option: |-
                    ```
                    {print} preis
                    ```
                feedback: Du möchtest nicht das Wort `{print}` ausgeben, aber du möchtest einen Preis `{print}` aus deiner Liste `{at} {random}`
            -   option: |-
                    ```
                    {print} preise {at} {random}
                    ```
                feedback: Großartig! Du hast wirklich aufgepasst.
            -   option: |-
                    ```
                    {print} {at} {random} preise
                    ```
                feedback: '`{at} {random}` wird hinter der Variablen platziert.'
            -   option: Nichts, dieser Code ist in Ordnung.
                feedback: Such aufmerksam nach dem Fehler den du übersehen hast!
            hint: Der Variablenname ist prices
        5:
            question_text: Wo ist der Fehler in diesem Code?
            code: |-
                problemstellung {is} {ask} Was möchtest du wissen?
                {print} problemstellung
                antworten {is} ja, nein, vielleicht
                {print} antworten {at} {random}
            mp_choice_options:
            -   option: Zeile 1 sollte `{print}` anstelle von `{ask}` enthalten
                feedback: Nein, das ist nicht falsch.
            -   option: Zeile 2 soll `{ask}` anstelle von `{print}` enthalten
                feedback: Nein das ist nicht falsch.
            -   option: Zeile 2 sollte antworten `{at} {random}` `{is}` ja, nein, vielleicht
                feedback: Nein, das ist nicht falsch.
            -   option: Nichts, dieser Code ist perfekt
                feedback: Das ist richtig!
            hint: Hat dieser Code überhaupt einen Fehler?
        6:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                problemstellung {is} {ask} Was möchtest du wissen?
                antworten ja, nein, vielleicht
                {print} antworten {at} {random}
            mp_choice_options:
            -   option: Zeile 2 soll problemstellung anstelle von antworten enthalten
                feedback: Nein das stimmt nicht
            -   option: Zeile 2 braucht den `{is}` Befehl
                feedback: Richtig
            -   option: Zeile 3 soll antwort anstelle von antworten enthalten
                feedback: Nein die Variable heißt antworten
            -   option: Nichts! Dieser Code ist großartig!
                feedback: Tatsächlich hat Zeile 2 einen Fehler.
            hint: Da stimmt etwas nicht mit Zeile 2.
        7:
            question_text: Was macht der `{add}` Befehl?
            code: |-
                bücher {is} Harry Potter, The Hobbit, Green Eggs and Ham
                dein_buch {is} {ask} Was ist dein Lieblingsbuch?
                {add} dein_buch {to} bücher
                {print} bücher {at} {random}
            mp_choice_options:
            -   option: Der `{add}` Befehl entfernt ein zufälliges Buch aus der Liste
                feedback: Der entferne-Befehl entfernt, der addiere-Befehl fügt hinzu
            -   option: Der `{add}` Befehl fügt ein zufälliges Buch zur Liste hinzu
                feedback: Tut es nicht. Es fügt eine Antwort zur Liste hinzu!
            -   option: Der `{add}` Befehl fügt dein Lieblingsbuch zur Liste hinzu
                feedback: Richtig!
            -   option: Der `{add}` Befehl gibt dein Lieblingsbuch aus.
                feedback: Nein, es fügt dein Lieblingsbuch zur Liste hinzu
            hint: Der `{add}` Befehl fügt ein Buch hinzu, aber welches?
        8:
            question_text: Was ist die Ausgabe dieses Code?
            code: |-
                chips {is} Meersalz, Paprika, Saure Sahne
                {remove} Meersalz {from} chips
                {remove} Paprika {from} chips
                {print} chips {at} {random}
            mp_choice_options:
            -   option: Das kannst du nicht sagen, weil Hedy mit `{print}` in Verbindung mit `{at} {random}` eine der 3 Geschmacksrichtungen ausgibt
                feedback: Schau dir den `{remove}` Befehl an
            -   option: sea salt
                feedback: Meersalz wird von der Liste entfernt
            -   option: Paprika
                feedback: Paprika wird von der Liste entfernt
            -   option: Saure Sahne
                feedback: Das ist richtig!
            hint: Es gibt 3 Geschmacksrichtungen, aber 2 werden entfernt. Welche bleibt übrig?
        9:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                farben {is} Blau, Lila, Grün
                gewählte_farbe {is} {ask} Welche Haarfarbe würdest du nicht haben wollen?
                {remove} gewählte_farbe {from} farben
                {print} Ich werde meine Haare farbe {at} {random} färben
            mp_choice_options:
            -   option: 'Zeile 3 sollte sein: `{remove}` Blau `{from}` farben'
                feedback: Aber vielleicht möchtest du blaues Haar!
            -   option: Zeile 3 sollte einen `{add}` Befehl anstelle eines `{remove}` Befehls haben
                feedback: Du möchtest die gewählte Farbe entfernen, also ist `{remove}` richtig.
            -   option: In Zeile 4 sollte die Variable farben sein anstelle von farbe
                feedback: Großartig gemacht!
            -   option: Nichts, dies ist korrekter Code!
                feedback: Finde den Fehler!
            hint: Schau in Zeile 3
        10:
            question_text: Was sollte in den Lücken sein _?
            code: |-
                gassigeher {is} Papa, Mama, Sam, Petra
                gestern_gegangen {is} {ask} Wer ging gestern Gassi?
                {print} gestern_gegangen sollte heute nicht erneut mit dem Hund Gassi gehen
                _
                {print} gassigeher {at} {random} , du bist dran mit Gassi gehen!
            mp_choice_options:
            -   option: |-
                    ```
                    {remove} gestern_gegangen {from} gassigeher
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    {remove} gestern gegangen {to} gassigeher
                    ```
                feedback: '`{remove} {from}` oder `{add} {to}`, nicht `{remove} {to}`'
            -   option: |-
                    ```
                    {remove} gassigeher {from} gestern
                    ```
                feedback: gestern ist keine Variable
            -   option: |-
                    ```
                    {add} gestern_gegangen {to} gassigeher
                    ```
                feedback: Dies hat die Wahrscheinlichkeit erhöht, dass die Person die gestern ging jetzt schon wieder gehen muss. Das ist gemein.
            hint: Die Person, die gestern ging, sollte von der Liste entfernt werden.
    4:
        1:
            question_text: Welches dieser Programme ist korrekt?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Ich bin sehr aufgeregt dieses Quiz zu machen!'
                    ```
                feedback: Das ist richtig
            -   option: |-
                    ```
                    {print} Ich bin sehr aufgeregt dieses Quiz zu machen!
                    ```
                feedback: '`{print}` benötigt ebenfalls Anführungszeichen!'
            -   option: |-
                    ```
                    {print} 'I'ch bin sehr aufgeregt dieses Quiz zu machen!'
                    ```
                feedback: Nutze keine Apostrophen, nutze statt dessen einen Grave-Akzent
            -   option: |-
                    ```
                    {print} 'I'ch bin sehr aufgeregt dieses Quiz zu machen!
                    ```
                feedback: Vorsicht bei der Nutzung von Anführungszeichen und Apostrophen
            hint: In Level 4 benötigst du für 2 Befehle Anführungszeichen.
        2:
            question_text: Welcher Code benutzt die richtigen Anführungszeichen?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} `hello`
                    ```
                feedback: Dieses Anführungszeichen ist schräg, du brauchst ein gerades.
            -   option: |-
                    ```
                    {print} 'hallo'
                    ```
                feedback: Richtig
            -   option: |-
                    ```
                    {print} hallo
                    ```
                feedback: Hier gibt es keine Anführungszeichen!
            -   option: |-
                    ```
                    {print} ,hallo,
                    ```
                feedback: Dies ist ein Komma, du brauchst Anführungszeichen.
            hint: Wähle die richtigen Anführungszeichen.
        3:
            question_text: Wo werden die Anführungszeichen richtig benutzt?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Hi Im Hedy
                    ```
                feedback: Bitte füge Anführungszeichen hinzu!
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy
                    ```
                feedback: Wörter, die du ausgeben möchtest, benötigen davor und dahinter Anführungszeichen.
            -   option: |-
                    ```
                    '{print} Hi Im Hedy'
                    ```
                feedback: Das erste Anführungszeichen sollte hinter `{print}` stehen
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy'
                    ```
                feedback: Perfekt!
            hint: Sowohl vor als auch hinter Wörtern, die du ausgeben möchtest, sollten Anführungszeichen stehen.
        4:
            question_text: Welche Aussage ist wahr?
            mp_choice_options:
            -   option: 'Du brauchst um `{print}` herum Anführungszeichen, wie hier: `''{print}''`.'
                feedback: Die Anführungszeichen sollten nicht um den Befehl selbst herum stehen.
            -   option: Du benötigst Anführungszeichen um die Wörter herum, die du ausgeben möchtest.
                feedback: Super!
            -   option: Du brauchst keine Anführungszeichen, wenn du den `{ask}` Befehl benutzt
                feedback: Beide, `{print}` und `{ask}` benötigen Anführungszeichen
            -   option: Du kannst selbst wählen, ob du Anführungszeichen benutzt oder nicht.
                feedback: Leider ist Hedy strenger.
            hint: Ab Level 4 musst du Anführungszeichen benutzen.
        5:
            question_text: Was muss geändert werden, um das Spiel zum Laufen zu bringen?
            code: |-
                auswahlmöglichkeiten {is} Stein, Schere, Papier
                {print} 'auswahlmöglichkeiten {at} {random}'
            mp_choice_options:
            -   option: |-
                    ```
                    '{print} options {at} {random}'
                    ```
                feedback: Schreibe nie Anführungszeichen vor den `{print}`-Befehl.
            -   option: |-
                    ```
                    {print} 'options' {at} {random}
                    ```
                feedback: auswahlmöglichkeiten ist eine Variable. Du möchtest nicht wortwörtlich 'auswahlmöglichkeiten {at} {random}' ausgeben.
            -   option: |-
                    ```
                    {print} options {at} {random}
                    ```
                feedback: Das ist richtig
            -   option: Nichts, das Spiel funktioniert bereits!
                feedback: Schau genau hin. Dort ist ein Fehler.
            hint: Du möchtest nicht das Hedy wortwörtlich 'auswahlmöglichkeiten {at} {random}' ausgibt, du möchtest 'Stein' oder 'Papier' oder 'Schere' ausgeben.
        6:
            question_text: Was wäre eine gute nächste Zeile in diesem Code?
            code: preise {is} 1 Euro, 100 Euro, 1 Million Euro
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Du gewinnst...' preise {at} {random}
                    ```
                feedback: Großartig! Du kapierst es!
            -   option: |-
                    ```
                    {print} Du gewinnst... 'preise {at} {random}'
                    ```
                feedback: Hedy wird wortwörtlich 'preise {at} {random}' ausgeben
            -   option: |-
                    ```
                    {print} Du gewinnst... preise {at} {random}
                    ```
                feedback: Du brauchst einige Anführungszeichen!
            -   option: |-
                    ```
                    {print} 'Du gewinnst... preise {at} {random}'
                    ```
                feedback: Hedy wird wortwörtlich 'preise {at} {random}'' ausgeben
            hint: 'Denk scharf nach: was ist eine Variable und sollte außerhalb von Anführungszeichen stehen? Und was sind normale Wörter, die innerhalb stehen sollten?'
        7:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                problemstellung {is} {ask} Was möchtest du wissen?
                antworten {is} ja, nein, vielleicht
                {print} antworten {at} {random}
            mp_choice_options:
            -   option: Anführungszeichen fehlen in Zeile 1
                feedback: Richtig!
            -   option: Anführungszeichen fehlen in Zeile 2
                feedback: Eine Variable braucht keine Anführungszeichen
            -   option: Anführungszeichen fehlen in Zeile 3
                feedback: Du möchtest nicht, dass Hedy wortwörtlich 'antworten {at} {random}' ausgibt, also werden hier keine Anführungszeichen gebraucht!
            -   option: Nichts, dieser Code ist gut so wie er ist!
                feedback: Schau genau hin. Du hast einen Fehler übersehen!
            hint: Prüfe jede Zeile, ob sie Anführungszeichen benötigen könnte oder nicht.
        8:
            question_text: Was wäre eine gute nächste Zeile in diesem Code?
            code: |-
                {print} 'Willkommen bei der Geld-Show!'
                {print} 'Vor dir sind 3 Türen'
                Tür {is} {ask} 'Welche Tür wählst du?'
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Also wählst du Tür Tür
                    ```
                feedback: Wir brauchen Anführungszeichen
            -   option: |-
                    ```
                    {print} 'Also wählst du ' Tür Tür
                    ```
                feedback: Wenn der Spieler Tür 3 wählt, wird Hedy 'Also wählst du 3 3 ausgeben
            -   option: |-
                    ```
                    {print} 'Also wählst du Tür ' Tür
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    {print} 'Also wählst du Tür Tür'
                    ```
                feedback: Hedy wird wortwörtlich 'Also wählst du Tür Tür ausgeben
            hint: Das zweite Wort Tür sollte mit der Nummer ersetzt werden, das erste sollte weiterhin das Wort Tür sein...
        9:
            question_text: Was wird nie im Ausgabebereich erscheinen?
            code: |-
                clubs {is} Real Madrid, Bayern München, Manchester United, Ajax
                {print} clubs {at} {random} ' wird die Champions League gewinnen'
            mp_choice_options:
            -   option: Ajax wird die Champions League gewinnen
                feedback: Hedy könnte es `{print}`
            -   option: Real Madrid wird die Champions League gewinnen
                feedback: Hedy könnte es `{print}`
            -   option: Bayern München wird die Champions League gewinnen
                feedback: Hedy könnte es `{print}`
            -   option: FC Barcelona wird die Champions League gewinnen
                feedback: Das ist richtig. Es ist nicht in der Liste
            hint: Was sind Hedys Auswahlmöglichkeiten von denen zufällig gewählt wird?
        10:
            question_text: Welche Aussage ist wahr?
            code: |-
                leute {is} Mama, Papa, Emma, Sophie
                {print} Abgewaschen wird von...
                {print} leute {at} {random}
            mp_choice_options:
            -   option: Anführungszeichen fehlen in Zeile 1
                feedback: Eine Liste benötigt keine Anführungszeichen
            -   option: Anführungszeichen fehlen in Zeile 2
                feedback: Richtig
            -   option: Anführungszeichen fehlen in Zeile 2 und 3
                feedback: Zeile 3 benötigt keine Anführungszeichen, weil es nicht wortwörtlich ausgegeben wird
            -   option: Nichts, dieser Code hat keine Fehler
                feedback: Du hast einen übersehen!
            hint: Eine Zeile benötigt Anführungszeichen, weil du sie wortwörtlich ausgeben möchtest.
    5:
        1:
            question_text: Welcher Befehl sollte in die Lücken _?
            code: |-
                zahl {is} {ask} 'Was ist deine Glückszahl?'
                {if} zahl {is} 5 {print} 'Meine auch!'
                _ {print} 'Meine Glückszahl ist 5!'
            mp_choice_options:
            -   option: '`{print}`'
                feedback: Es gibt schon einen `{print}` Befehl.
            -   option: '`{if}`'
                feedback: Der `{if}` Befehl wird in der Zeile darüber benutzt.
            -   option: '`{sleep}`'
                feedback: Das ist es nicht!
            -   option: '`{else}`'
                feedback: Das ist richtig!
            hint: Welches passt zum `{if}` Befehl?
        2:
            question_text: Was erscheint im Ausgabebereich, wenn du den Namen Hedy eintippst?
            code: |-
                name {is} {ask} 'Was ist dein Name?'
                {if} name {is} Hedy {print} 'Spaß' {else} {print} 'weniger Spaß'
            mp_choice_options:
            -   option: Spaß
                feedback: Das ist richtig!
            -   option: weniger Spaß
                feedback: Wenn der Name Hedy ist, wird 'Spaß'' ausgegeben
            -   option: Hedy
                feedback: Nein, es gibt den Namen nicht aus
            -   option: Error
                feedback: Glücklicherweise nicht!
        3:
            question_text: Was ist das richtige Passwort?
            code: |-
                passwort {is} {ask} 'Was ist das Passwort?'
                {if} passwort {is} GEHEIMNIS {print} 'Richtig!'
                {else} {print} 'ALARM! EINDRINGLING!'
            mp_choice_options:
            -   option: Richtig!
                feedback: Dies wird ausgegeben, wenn du das richtige Passwort eintippst
            -   option: SECRET
                feedback: Das ist richtig!'
            -   option: password
                feedback: Das Passwort ist nicht Passwort...
            -   option: ALARM INTRUDER
                feedback: Dies wird ausgegeben, wenn du das falsche Passwort eintippst!
            hint: '`{if}` passwort `{is}` ... `{print}` ''Richtig!'''
        4:
            question_text: Was gibt Hedy aus, wenn du das falsche Passwort eintippst?
            code: |-
                passwort {is} {ask} 'Was ist das Passwort?'
                {if} passwort {is} GEHEIMNIS {print} 'Richtig!'
                {else} {print} 'ALARM! EINDRINGLING!'
            mp_choice_options:
            -   option: Richtig
                feedback: Das wird ausgegeben, wenn die richtige Antwort eingegeben wurde, nicht die falsche...
            -   option: SECRET
                feedback: Das ist nicht die richtige Antwort
            -   option: Falsch!
                feedback: Nein, dies ist nicht, was Hedy ausgeben wird
            -   option: ALARM! INTRUDER!
                feedback: Großartig gemacht!
            hint: Dein Computer wird bei Eindringlingen Alarm schlagen!
        5:
            question_text: Warum wird Hedy 'ALARM! EINDINGLING' ausgeben, wenn du 'geheimnis' eintippst?
            code: |-
                passwort {is} {ask} 'Was ist das Passwort?'
                {if} passwort {is} GEHEIMNIS {print} 'Richtig!'
                {else} {print} 'ALARM! EINDRINGLING!'
            mp_choice_options:
            -   option: Weil es in Großbuchstaben sein muss, also GEHEIMNIS
                feedback: In der Tat!
            -   option: Weil das Passwort Alarm ist
                feedback: Nein, dies ist nicht das Passwort.
            -   option: Weil es falsch geschrieben ist.
                feedback: Das ist nicht wie man geheimnis schreibt
            -   option: Weil Hedy Fehler macht
                feedback: Nein, Hedy hat recht
            hint: Die Rechtschreibung des Wortes muss genau gleich sein.
        6:
            question_text: Welches Wort sollte anstelle des Leerzeichens in der letzten Zeile stehen?
            code: |-
                {print} 'Ich bin Hedy die Fußballwahrsagerin!'
                {print} 'Ich werde vorhersagen, welchen Platz dein Team am Ende belegen wird!'
                club is {ask} 'Welcher Club ist dein Favorit?'
                {if} club {is} ajax {print} 'Ajax wird natürlich gewinnen!'
                _ {print} 'Sorry, dein Club wird auf dem letzten Platz landen...'
            mp_choice_options:
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: '`{if}` ist bereits in der obigen Zeile'
            -   option: |-
                    ```
                    {at} {random}
                    ```
                feedback: Nein, du brauchst `{else}`.
            -   option: |-
                    ```
                    {else}
                    ```
                feedback: Großartig!
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: '`{print}` ist bereits dort, wir brauchen ein Wort davor!'
            hint: '`{if}` geht zusammen mit...?'
        7:
            question_text: Welches Wort sollte anstelle des Leerzeichens stehen?
            code: |-
                {print} 'Ich kann vorhersagen, ob du ein Millionär sein wirst oder nicht!'
                name {is} {ask} 'Was ist dein Name?'
                {if} name {is} Hedy {print} 'Du wirst ein Millionär sein!'
                {else} _ 'Unglücklicherweise... Kein großes Geld für dich.'
            mp_choice_options:
            -   option: '`{if}`'
                feedback: '`{if}` ist in der Zeile darüber.'
            -   option: '`{at}` `{random}`'
                feedback: Nein, du brauchst kein `{at} {random}`.
            -   option: '`{else}`'
                feedback: Dort ist bereits ein `{else}` Befehl
            -   option: '`{print}`'
                feedback: Toll!
            hint: Nach `{else}` folgt ein `{print}` Befehl
        8:
            question_text: Welches Wort sollte anstelle des Leerzeichens stehen?
            code: |-
                Tier {is} {ask} 'Was ist dein Lieblingstier?'
                {if} _ {is} Pinguin {print} 'Das ist auch mein Lieblingstier!'
                {else} {print} 'Cool! Ich mag Pinguine.'
            mp_choice_options:
            -   option: |-
                    ```
                    Lieblingstier
                    ```
                feedback: Dies ist nicht der Variablenname.
            -   option: |-
                    ```
                    Tier
                    ```
                feedback: Großartig gemacht!
            -   option: '`{if}`'
                feedback: '`{if}` ist bereits dort'
            -   option: '`{print}`'
                feedback: Nein, das ist es nicht.
            hint: Was ist der Variablenname?
        9:
            question_text: Welche Tür solltest du wählen um zu entkommen??
            code: |-
                {print} 'Entkomme vom Spukhaus!'
                {print} 'Vor dir sind 3 Türen'
                tür {is} {ask} 'Welche Tür wählst du?'
                monster {is} Vampir, Werwolf, Riesenspinne
                {if} tür {is} 2 {print} 'Juchuu, du entkommst!'
                {else} {print} 'Du wirst verschlungen von einem/r... ' monster {at} {random}
            mp_choice_options:
            -   option: '1'
                feedback: Schlechte Wahl! Du wirst gegessen
            -   option: '2'
                feedback: Super! Du bist entkommen!
            -   option: '3'
                feedback: Schlechte Wahl! Du wirst gegessen.
            -   option: Es ist eine Falle, du wirst immer gegessen werden!
                feedback: Glücklicherweise nicht!
            hint: Eine der Türen wird dich in Sicherheit bringen..
        10:
            question_text: Welches Monster steht hinter Tür 1?
            code: |-
                {print} 'Entkomme vom Spukhaus!'
                {print} 'Vor dir sind 3 Türen'
                tür {is} {ask} 'Welche Tür wählst du?'
                monster {is} Vampir, Werwolf, Riesenspinne
                {if} tür {is} 2 {print} 'Juchuu, du entkommst!'
                {else} {print} 'Du wirst verschlungen von einem/r... ' monster {at} {random}
            mp_choice_options:
            -   option: Hedy wählt jedes Mal ein zufälliges Monster.
                feedback: Toll!
            -   option: Vampir
                feedback: Nicht immer...
            -   option: Werwolf
                feedback: Nicht immer...
            -   option: Riesenspinne
                feedback: Nicht immer...
            hint: Beachte die letzten 3 Wörter... Monster `{at} {random}`...
    6:
        1:
            question_text: Was gibt Hedy aus, wenn du diesen Code laufen lässt?
            mp_choice_options:
            -   option: '20'
                feedback: Richtig!
            -   option: '12'
                feedback: Nein, das Plus-Zeichen wird für die Addition benutzt
            -   option: 2*10
                feedback: Nein, Hedy wird die Antwort berechnen
            -   option: '210'
                feedback: Beachte, dass es eine Berechnung ist.
            hint: Das `*` wird als Multiplikationszeichen benutzt
        2:
            question_text: Was benutzt du wenn du zwei Zahlen addieren möchtest?
            mp_choice_options:
            -   option: '`-`'
                feedback: Das ist es nicht
            -   option: plus
                feedback: Das ist es nicht
            -   option: '`*`'
                feedback: Das ist es nicht
            -   option: '`+`'
                feedback: Richtig!
            hint: Es ist das Pluszeichen.
        3:
            question_text: Was ist Hedys Ausgabe, wenn du diesen Code ausführst?
            mp_choice_options:
            -   option: '30'
                feedback: Dies wäre die richtige Antwort, wenn es keine Anführungszeichen geben würde.
            -   option: '13'
                feedback: Versuche es nochmal..
            -   option: 3*10
                feedback: Richtig! Dort sind Anführungszeichen, daher wird Hedy es wortwörtlich ausgeben.
            -   option: Nichts, Hedy wird eine Fehlermeldung ausgeben.
                feedback: Nein, Hedy wird es wortwörtlich ausgeben.
            hint: Beachte die Anführungszeichen!!
        4:
            question_text: Kim ist 10 Jahre alt. Was wird Hedy für sie ausgeben?
            code: |-
                name = {ask} 'Wie viele Buchstaben hat dein Name?'
                alter = {ask} 'Wie alt bist du?'
                glückszahl = name*alter
                {print} 'Deine Glückszahl ist...' glückszahl
            mp_choice_options:
            -   option: '30'
                feedback: Beachte, dass Hedy ebenfalls 'Deine Glückszahl ist...' ausgeben wird
            -   option: '10'
                feedback: Bitte versuche es nochmal.
            -   option: Deine Glückszahl ist... 30
                feedback: Das ist richtig!
            -   option: Deine Glückszahl ist... 10
                feedback: Ihre Glückszahl ist Name mal Alter...
            hint: 'Kim hat 3 Buchstaben, sie ist 10 Jahre alt, also: Buchstaben mal Alter = 3*10 = 30.'
        5:
            question_text: Wenn 5 Leute im Restaurant essen, wie viel müssen sie insgesamt bezahlen?
            code: |-
                {print} 'Willkommen bei Hedys!'
                leute = {ask} 'Wie viele Leute essen heute Abend mit uns?'
                preis = leute * 10
                {print} 'Das macht ' preis 'Euro biite'
            mp_choice_options:
            -   option: 5 Euro
                feedback: Unglücklicherweise ist es nicht so billig.
            -   option: 10 Euro
                feedback: Nein, es sind 10 Euro für jeden.
            -   option: 15 Euro
                feedback: Das * bedeutet Multiplikation.
            -   option: 50 Euro
                feedback: Großartig!
            hint: preis ist leute mal 10
        6:
            question_text: Wie viel kostet ein Hamburger in diesem virtuellen Restaurant?
            code: |-
                {print} 'Willkommen in Hedys Diner'
                essen = {ask} 'Was möchten Sie essen?'
                preis = 0
                {if} essen {is} Hamburger preis = 15
                {if} essen {is} Pommes preis = 6
            mp_choice_options:
            -   option: 15 Euro
                feedback: Super!
            -   option: 6 Euro
                feedback: Die Pommes kosten 6 Euro
            -   option: 0 Euro
                feedback: Der Hamburger ist nicht kostenlos!
            -   option: 21 Euro
                feedback: Das ist der Preis für einen Hamburger und Pommes!
            hint: Beachte die vierte Zeile.
        7:
            question_text: Warum sagt Zeile 7 'preis ist preis + 3' anstelle von 'preis ist 3'?
            code: |-
                {print} 'Willkommen in Hedys Diner'
                essen = {ask} 'Was möchten Sie essen?'
                preis = 0
                {if} essen {is} Hamburger preis = preis + 15
                {if} essen {is} Pommes preis = preis + 6
                getränke ist {ask} 'Was möchten Sie trinken?'
                {if} getränke {is} Cola preis = preis + 3
                {if} getränke {is} Wasser preis = preis + 1
                {print} preis ' Euro bitte'
            mp_choice_options:
            -   option: Es könnte genauso gut `preis = 3` gewesen sein.
                feedback: Nein, das ist nicht wahr. Hedy muss 3 Euro zum Gesamtbetrag addieren.
            -   option: Weil Hedy `preis = 3` nicht versteht.
                feedback: Hedy würde es verstehen, aber es würde nicht richtig sein.
            -   option: Weil Hedy sonst die vorige Bestellung vergessen würde. Der Preis würde insgesamt 3 Euro betragen.
                feedback: Das ist richtig!
            -   option: Weil der Preis 0 Euro ist.
                feedback: Das ist wahr, jedoch nicht der Grund
            hint: Der Preis sollte nicht 3 sein, aber 3 Euro mehr als es bereits war
        8:
            question_text: Warum ist dieser Code inkorrekt?
            code: |-
                richtige antwort = 3*12
                antwort = {ask} 'Was ist 3 mal 12?'
                {if} antwort {is} richtige antwort {print} 'Gut gemacht!'
                {else} {print} 'Nein... es war ' richtige antwort
            mp_choice_options:
            -   option: Es sollten in Zeile 2 keine Anführungszeichen stehen
                feedback: Nein, dort sollten welche sein!
            -   option: Die Variable heißt correct answer, aber der Name einer Variablen kann nur aus einem Wort bestehen. Sie sollte also correct_answer heißen
                feedback: Richtig!
            -   option: Die `{if}` und `{else}` Befehle sollten in der gleichen Zeile stehen.
                feedback: Nein, das ist nicht wahr.
            -   option: Die Variable in Zeile 2 kann nicht antwort heißen, weil sie zu ähnlich zur Variable richtige antwort ist.
                feedback: Variablennamen können ähnlich sein, aber sie dürfen nicht aus 2 Wörtern bestehen...
            hint: Untersuche die Namen der Variablen.
        9:
            question_text: Stell dir vor, du liebst Fußball eine 10, du hast 2 Bananen gegessen und hast heute 3 Mal deine Hände gewaschen. Wie schlau denkt die alberne Wahrsagerin, dass du bist?
            code: |-
                {print} 'Ich bin Hedy die alberne Wahrsagerin'
                {print} 'Ich werde vorhersagen wie schlau du bist!'
                fußball = {ask} 'Auf einer Skala von 0 bis 10, wie sehr liebst du Fußball?'
                bananen = {ask} 'Wie viele Bananen hast du diese Woche gegessen?'
                hygiene = {ask} 'Wie viele Male hast du heute deine Hände gewaschen??'
                ergebnis = bananen + hygiene
                ergebnis = ergebnis * fußball
                {print} 'Du bist ' ergebnis 'Prozent schlau.'
            mp_choice_options:
            -   option: 10%
                feedback: (2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?
            -   option: 32%
                feedback: (2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?
            -   option: 50%
                feedback: Super! Du bist 100 Prozent schlau!
            -   option: 100%
                feedback: (2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?
            hint: (2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?
        10:
            question_text: Welche Aussage ist wahr?
            code: |-
                name _ Hedy
                {print} name 'geht durch den Wald'
            mp_choice_options:
            -   option: Du kannst nur das Wort ist in die Lücken `_` füllen
                feedback: Du darfst auch das `=` Zeichen nutzen
            -   option: Du kannst entweder das Wort ist oder das `=` Zeichen in die Lücken `_` füllen
                feedback: Toll!
            -   option: Du musst =ist= in Lücken `_` füllen
                feedback: Nein, ein `=` Zeichen ist genug
            -   option: Du kannst nur das `=` Zeichen verwenden, wenn du mit Zahlen arbeitest, nicht mit Wörtern.
                feedback: Du kannst das `=` auch mit Wörtern benutzen.
            hint: '`{is}` und `=` sind beide erlaubt'
    7:
        1:
            question_text: Wie viele Zeilen Code kannst du mit einem Mal mit dem wiederhole-Befehl in diesem Level wiederholen?
            mp_choice_options:
            -   option: '0'
                feedback: Nein, du kannst eine Zeile wiederholen.
            -   option: '1'
                feedback: Richtig, eine Zeile mit einem Mal
            -   option: '3'
                feedback: In diesem Level nur eine Zeile mit einem Mal
            -   option: unendlich
                feedback: In diesem Level kannst du nur eine Zeile wiederholen
            hint: Du kannst nur eine Zeile mit einem Mal wiederholen
        2:
            question_text: Welcher Code ist richtig?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 100 {times} 'hallo'
                    ```
                feedback: '`{repeat}` 100 `{times}` `{print}` ''hallo'''
            -   option: |-
                    ```
                    {print} {repeat} 100 {times} 'hallo'
                    ```
                feedback: '{repeat} 100 {times} {print} ''hallo'''
            -   option: |-
                    ```
                    {repeat} 'hallo' 100 {times}
                    ```
                feedback: '{repeat} 100 {times} {print} ''hallo'''
            -   option: |-
                    ```
                    {repeat} 100 {times} {print} 'hallo'
                    ```
                feedback: Das ist richtig!
            hint: Erst der `{repeat}` -Befehl, dann der `{print}` Befehl
        3:
            question_text: Ist dieser Code richtig oder falsch?
            code: '{repeat} 100 {times} ''Hallo!'''
            mp_choice_options:
            -   option: Right
                feedback: Nein, ein Wort fehlt
            -   option: Falsch, das Wort `{repeat}` fehlt
                feedback: Das Wort `{repeat}` ist da, ein anderes Wort fehlt
            -   option: Falsch, das Wort `{times}` fehlt
                feedback: Das Wort `{times}` ist da, ein anderes Wort fehlt.
            -   option: Falsch, das Wort `{print}` fehlt
                feedback: Richtig
            hint: 'Es sollte so sein: `{repeat}` 100 `{times}` `{print}` ''Hallo'''
        4:
            question_text: Welches Wort ist falsch im Code?
            mp_choice_options:
            -   option: |-
                    `I'm`
                feedback: Das ist richtig!
            -   option: '`{print}`'
                feedback: '`{print}` ist richtig geschrieben'
            -   option: '`{repeat}`'
                feedback: '`{repeat}` ist richtig geschrieben'
            -   option: '`{times}`'
                feedback: '`{times}` ist richtig geschrieben'
            hint: I'm ist falsch, du kannst keine Apostrophe in einem Satz verwenden
        5:
            question_text: Ist dieser Code richtig oder falsch?
            code: '{repeat} 100 {times} {print} ''Hedy ist toll!'''
            mp_choice_options:
            -   option: Richtig
                feedback: Das ist richtig!
            -   option: Falsch
                feedback: Das ist es nicht
            hint: Der Code ist richtig!
        6:
            question_text: Was wird die Ausgabe dieses Code sein?
            mp_choice_options:
            -   option: |-
                    the wheels on the bus go
                    round and round
                feedback: Nur die zweite Zeile wird 3 mal wiederholt
            -   option: |-
                    the wheels on the bus go
                    the wheels on the bus go
                    the wheels on the bus go
                    round and round
                feedback: Nur die zweite Zeile wird 3 Mal wiederholt
            -   option: |-
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
                feedback: Nur die zweite Zeile wird 3 Mal wiederholt
            -   option: |-
                    the wheels on the bus go
                    round and round
                    round and round
                    round and round
                feedback: All through the town! Perfekt!
            hint: Nur 'round and round' wird 3 Mal wiederholt.
        7:
            question_text: Was wird die Ausgabe dieses Code sein?
            mp_choice_options:
            -   option: |-
                    We will We will
                    ROCK YOU!
                feedback: '''We will'' wird nicht zwei Mal in einer Zeile erscheinen'
            -   option: |-
                    We will
                    We will
                    ROCK YOU!
                feedback: Großartig!
            -   option: |-
                    We will
                    ROCK YOU!
                    We will
                    ROCK YOU!
                feedback: ROCK YOU! wird nicht wiederholt
            -   option: |-
                    We will
                    ROCK YOU!
                feedback: Beachte den wiederhole-Befehl
            hint: Beachte den `{repeat}` Befehl.
        8:
            question_text: Welcher Hedy code gehört zu dieser Ausgabe?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: Toll, du kannst den `{repeat}` Befehl hier nicht verwenden.
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
                feedback: Wo hast du 'Do do do do' gelassen?
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: Dies ist nicht die richtige Reihenfolge..
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {repeat} 2 {times} {print} 'Do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: Dies ist nicht die richtige Reihenfolge..
            hint: '`{repeat}` kann nur benutzt werden, wenn du die gleiche Zeile mehrfach in Folge ausführen möchtest.'
        9:
            question_text: Welcher Hedy-Code gehört dieser Ausgabe?
            code: |-
                Batman flog durch Gotham.
                Als er plötzlich jemanden schreien hörte...
                Hilfe!
                Hilfe!
                Hilfe!
                Bitte helft mir!
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Batman flog durch Gotham. '
                    {print} 'Als er plötzlich jemanden schreien hörte!'
                    {print} 'Hilfe!'
                    {repeat} 3 {times} {print} 'Bitte hilf mir!'
                    ```
                feedback: Deine Wiederholung ist falsch.
            -   option: |-
                    ```
                    {print} 'Batman flog durch Gotham.'
                    {print} 'Als er plötzlich jemanden schreien hörte!'
                    {repeat} 3 {times} 'Hilfe!'
                    {print} 'Bitte hilf mir!'
                    ```
                feedback: Der `{print}` Befehl fehlt in Zeile 3.
            -   option: |-
                    ```
                    {print} Batman flog durch Gotham.
                    {print} Als er plötzlich jemanden schreien hörte!
                    {repeat} 3 {times} {print} Hilfe!
                    {print} Bitte hilf mir!
                    ```
                feedback: Dir fehlen die Anführungszeichen
            -   option: |-
                    ```
                    {print} 'Batman flog durch Gotham.'
                    {print} 'Als er plötzlich jemanden schreien hörte!'
                    {repeat} 3 {times} {print} 'Hilfe!'
                    {print} 'Bitte hilf mir!'
                    ```
                feedback: Perfekt
            hint: '''Help!'' wird 3 Mal wiederholt.'
        10:
            question_text: Welcher Code gehört zu dieser Ausgabe?
            mp_choice_options:
            -   option: |-
                    ```
                    {repeat} 2 {times} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: Fast! Die erste Zeile braucht ein weiteres Wort
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: Großartig!
            -   option: |-
                    ```
                    {repeat} 3 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    ```
                feedback: Dies ist nicht die richtige Reihenfolge.
            -   option: |-
                    ```
                    {repeat} 4 {times} 'if youre happy and you know it'
                    {repeat} 2 times 'clap your hands'
                    {print} 'and you really want to show it'
                    {print} 'clap your hands'
                    ```
                feedback: Dies ist nicht in der richtigen Reihenfolge.
            hint: Beachte die Reihenfolge der Sätze.
    8:
        1:
            question_text: Welche Ausgabe wird von diesem Code erzeugt?
            code: |-
                {repeat} 2 {times}
                    {print} 'Hallo'
                    {print} 'Ich bin Hedy!'
            mp_choice_options:
            -   option: |-
                    Hallo
                    Ich bin Hedy!
                feedback: Alles wird doppelt ausgegeben.
            -   option: |-
                    Hello
                    Hello
                    Ich bin Hedy
                feedback: Die zweite Zeile wird ebenfalls doppelt wiederholt.
            -   option: |-
                    Hello
                    Ich bin Hedy!
                    Hello
                    Ich bin Hedy!
                feedback: Super!
            -   option: |-
                    Hello
                    Hello
                    Ich bin Hedy!
                    Ich bin Hedy!
                feedback: Alles wird doppelt ausgegeben
            hint: Beide Zeilen werden zweimal wiederholt.
        2:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                {repeat} 5 {times}
                {print} 'Hedy ist cool!'
            mp_choice_options:
            -   option: Dies sollte nur eine Zeile sein, nicht 2.
                feedback: Nein, es sollten 2 Zeilen sein.
            -   option: Das `{print}`-Kommando muss entfernt werden.
                feedback: Nein, du brauchst es.
            -   option: Da ist ein Schreibfehler im `{repeat}` Befehl.
                feedback: Nein, `{repeat}` ist die richtige Schreibweise
            -   option: Die zweite Zeile sollte mit 4 Leerzeichen als Einrückung beginnen.
                feedback: Richtig!
            hint: Etwas fehlt in der zweiten Zeile?
        3:
            question_text: Welche Ausgabe wird erzeugt, wenn du dieses Programm ausführst?
            mp_choice_options:
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                feedback: Beachte den `{repeat}` Befehl!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                feedback: Die letzte Zeile hat keine Einrückung, daher wird sie nicht wiederholt.
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark
                feedback: Richtig!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark
                    Baby shark
                feedback: Was wird wiederholt und was nicht?
            hint: Was wird wiederholt und was nicht?
        4:
            question_text: Welche Ausgabe ist richtig?
            code: |-
                {print} 'Die Kinder riefen:'
                {repeat} 2 {times}
                    {print} 'Juchuu!'
                    {print} 'Wir fahren in den Urlaub!'
            mp_choice_options:
            -   option: |-
                    Die Kinder sagten:
                    Juchhuu!
                    Wir fahren in den Urlaub!
                feedback: Beachte den `{repeat}` Befehl!
            -   option: |-
                    Die Kinder gingen:
                    Juchhuu!
                    Wir fahren in den Urlaub!
                    Juchhuu!
                    Wir fahren in den Urlaub!
                feedback: Richtig!
            -   option: |-
                    Die Kinder gingen:
                    Juchhuu!
                    Juchhuu!
                    Wir fahren in den Urlaub!
                    Wir fahren in den Urlaub!
                feedback: Diese Reihenfolge ist falsch.
            -   option: |-
                    Die Kinder gingen:
                    Juchhuu!
                    Juchhuu!
                    Wir fahren in den Urlaub!
                feedback: Die letzte Zeile wird auch wiederholt.
            hint: Der Block unter dem `{repeat}` Befehl wird zwei Mal wiederholt.
        5:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                ende = {ask} 'Möchtest du ein glückliches oder ein trauriges Ende?'
                {if} ende {is} glücklich {print} 'Und sie lebten glücklich bis ans Ende ihrer Tage'
                {else} {print} 'Die Welt explodierte. Ende.'
            mp_choice_options:
            -   option: Die `{print}` Befehle in den letzten zwei Zeilen sollten in neuen Zeilen sowie mit 4 Leerzeichen beginnen.
                feedback: Das ist richtig!
            -   option: '`{else}` ist kein Befehl!'
                feedback: Ist es!
            -   option: Zeilen die mit `{if}` beginnen, sollten mit 4 Leerzeichen beginnen
                feedback: Das ist nicht wahr
            -   option: '`{ask}` ist kein Befehl mehr'
                feedback: Das ist nicht wahr
            hint: Etwas stimmt mit der Einrückung nicht
        6:
            question_text: Which code was used to create this output?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Welcome to restaurant Hedy'
                    food = {ask} 'What would you like to eat?'
                    {print} food
                    ```
                feedback: You need to take 2 orders.
            -   option: |-
                    ```
                    {repeat} 2 {times}
                        {print} 'Welcome to restaurant Hedy'
                        food = {ask} 'What would you like to eat?'
                        {print} food
                    ```
                feedback: The welcome line would be printed twice in this code too
            -   option: |-
                    ```
                    {print} 'Welcome to restaurant Hedy'
                    {repeat} 2 {times}
                        food = {ask} 'What would you like to eat?'
                    {print} food
                    ```
                feedback: Now only the last order is printed.
            -   option: |-
                    ```
                    {print} 'Welcome to restaurant Hedy'
                    {repeat} 2 {times}
                        food = {ask} 'What would you like to eat?'
                        {print} food
                    ```
                feedback: Gut gemacht!
            hint: Pay attention to what sould be repeated and what should only be printed once.
        7:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                essen = {ask} 'Was würdest du gerne essen?'
                {if} essen {is} Pommes
                sauce = {ask} 'Welche Sauce hättest du gerne?'
                    {print} 'Einmal Pommes mit ' sauce
                {if} essen {is} Pizza
                    belag = {ask} 'Welchen Belag möchtest du?'
                    {print} 'Eine Pizza mit ' topping
                {print} 'Vielen Dank für deine Bestellung'
            mp_choice_options:
            -   option: Nichts, dieser Code ist richtig!
                feedback: Etwas stimmt nicht!
            -   option: Du darfst keinen `{if}` Befehl nach einem `{ask}` Befehl benutzen.
                feedback: Du bist!
            -   option: Du musst nicht zwei Mal Einrückung verwenden. Nur im ersten `{if}` Befehl.
                feedback: Du musst immer Einrückung verwenden.
            -   option: Die Einrückung ist im ersten `{if}` Befehl falsch.
                feedback: Das ist richtig.
            hint: Schau dir die Einrückung genau an.
        8:
            question_text: In welchem Programm wurde die Einrückung richtig gemacht?
            mp_choice_options:
            -   option: |-
                    ```
                    {if} antwort {is} 32
                       {print} 'Du bist...'
                          {sleep}
                              {print} 'richtig!'
                          {else}
                              {print} 'Du liegst falsch!'
                    ```
                feedback: Du liegst falsch!
            -   option: |-
                    ```
                    {if} antwort {is} 32
                    {print} 'Du bist...'
                    {sleep}
                    {print} 'richtig!'
                    {else}
                    {print} 'Du liegst falsch!'
                    ```
                feedback: Du liegst falsch!
            -   option: |-
                    ```
                    {if} antwort {is} 32
                        {print} 'Du bist...'
                        {sleep}
                        {print} 'richtig!'
                    {else}
                        {print} 'Du liegst falsch!'
                    ```
                feedback: Du hast... recht!
            -   option: |-
                    ```
                    {if} antwort {is} 32
                        {print} 'Du bist...'
                        {sleep}
                    {print} 'richtig!'
                    {else}
                        {print} 'Du liegst falsch!'
                    ```
                feedback: Du liegst falsch!
            hint: Was sollte passieren, wenn die Person richtig liegt? Und was sonst?
        9:
            question_text: Welche Zeilen sollten mit 4 Leerzeichen beginnen?
            code: |-
                1 musik = {ask} 'Was ist dein Lieblingsmusikgenre?'
                2 {if} musik {is} Rock
                3 {print} '🤘'
                4 {else}
                5 {print} '👎'
            mp_choice_options:
            -   option: Zeile 2 und 4
                feedback: Die Zeilen nach dem `{if}` und `{else}` Befehl sollten mit 4 Leerzeichen beginnen
            -   option: Nur in Zeile 3
                feedback: Nicht nur 3...
            -   option: Zeile 3, 4 und 5
                feedback: Zeile 4 sollte nicht
            -   option: Zeile 3 und 5
                feedback: Gut gemacht!
            hint: Die Zeilen nach dem `{if}` oder `{else}` Befehl sollten mit 4 Leerzeichen beginnen.
        10:
            question_text: Welche Aussage ist wahr?
            code: |-
                1 level = {ask} 'In welchem Level bist du?'
                2 {if} level {is} 8
                3 {print} 'Großartig gemacht!'
            mp_choice_options:
            -   option: Alle Zeilen sollten mit 4 Leerzeichen beginnen
                feedback: Das ist nicht wahr
            -   option: Zeile 2 und 3 sollten mit 4 Leerzeichen beginnen
                feedback: Das ist nicht wahr
            -   option: Zeile 2 sollte mit 4 Leerzeichen beginnen
                feedback: Das ist nicht wahr
            -   option: Zeile 3 sollte mit 4 Leerzeichen beginnen
                feedback: Du liegst richtig!
            hint: Nur eine Zeile sollte mit 4 Leerzeichen beginnen, aber welche...?
    9:
        1:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                {repeat} 3 {times}
                    essen = {ask} 'Was würdest du gerne essen?'
                    {if} essen {is} Pommes
                        sauce = {ask} 'Welche Sauce hättest du gerne?'
                        {print} 'Einmal Pommes mit ' sauce
                    {if} essen {is} Pizza
                        belag = {ask} 'Welchen Belag möchtest du?'
                        {print} 'Eine Pizza mit ' topping
                {print} 'Vielen Dank für deine Bestellung'
            mp_choice_options:
            -   option: Nichts, der Code ist korrekt!
                feedback: Das ist richtig!
            -   option: Du darst keinen `{if}` Befehl nach einem `{ask}` Befehl verwenden.
                feedback: Du bist!
            -   option: Du musst nicht zwei Mal Einrückung verwenden.
                feedback: Du musst immer Einrückung verwenden.
            -   option: Die Einrückung im letzten `{if}` Befehl ist falsch.
                feedback: Es ist nicht die Einrückung.
            hint: Alle Einrückungen wurden richtig gemacht.
        2:
            question_text: Was wird ausgegeben nachdem man das richtige Passwort eingegeben hat?
            code: |-
                passwort = {ask} 'Was ist das Passwort?'
                richtiges_passwort = Hedy
                {if} passwort {is} richtiges_passwort
                    {repeat} 2 {times}
                        {print} 'Gut gemacht!'
                        {print} 'Du kannst den Computer benutzen!'
                {else}
                    {print} 'Der Computer explodiert in 5... 4... 3... 2... 1...'
            mp_choice_options:
            -   option: |-
                    ```
                    Gut gemacht!
                    Gut gemacht!
                    ```
                feedback: Das ist es nicht!
            -   option: |-
                    ```
                    Der Computer explodiert in 5... 4... 3... 2... 1...
                    ```
                feedback: Das ist es nicht!
            -   option: |-
                    ```
                    Gut gemacht!
                    Gut gemacht!
                    Du kannst den Computer benutzen!
                    ```
                feedback: Das ist es nicht!
            -   option: |-
                    ```
                    Gut gemacht!
                    Du kannst den Computer benutzen!
                    Gut gemacht!
                    Du kannst den Computer benutzen!
                    ```
                feedback: Richtig!
            hint: Alles unter dem `{repeat}` Befehl wird zwei Mal wiederholt.
        3:
            question_text: Welchen Fall solltest du wählen, um eine Million Euro zu gewinnen?
            code: |-
                {print} 'Wähle den richtigen Koffer und gewinne!'
                koffer = {ask} 'Welchen Koffer wählst du? 1 oder 2?'
                {if} koffer {is} 1
                     aktion = {ask} 'Öffnen oder verkaufen?'
                         {if} aktion {is} verkaufen
                             {print} 'Du verkaufst deinen Koffer für 10 Euro'
                         {if} aktion {is} öffnen
                             {print} 'Du öffnest den Koffer und gewinnst einen Apfelkuchen'
                {if} koffer {is} 2
                     aktion = {ask} 'Öffnen oder verkaufen?'
                         {if} aktion {is} verkaufen
                             {print} 'Du verkaufst deinen Koffer für 500 Euro'
                         {if} aktion {is} öffnen
                             {print} 'Du öffnest den Koffer und gewinnst eine Million Euro!'
            mp_choice_options:
            -   option: Fall 1, verkaufen
                feedback: Du gewinnst keine Million!
            -   option: Fall 1, offen
                feedback: Du gewinnst keine Million
            -   option: Fall 2, verkaufen
                feedback: Du gewinnst keine Million
            -   option: Fall 2, offen
                feedback: Großartig gemacht! Du gewinnst!
            hint: Folge dem richtigen Pfad
        4:
            question_text: Welche Aussage ist wahr?
            code: |-
                name = {ask} 'Was ist dein Name?'
                grösse = {ask} 'Was ist deine Schuhgrösse?'
                {if} grösse {is} 38
                    {if} name {is} Aschenputtel
                        {print} '❤️❤️❤️'
                    {else}
                        {print} 'Du bist nicht die Richtige!'
                {else}
                    {print} 'Ich suche weiter'
            mp_choice_options:
            -   option: Dornröschen mit Schuhgröße 38 erhält die Ausgabe "Ich suche weiter"
                feedback: Nein, sie bekommt "Du bist nicht die Richtige!"
            -   option: Aschenputtel mit Schuhgröße 40 bekommt die Ausgabe '❤️❤️❤️'
                feedback: Nein, sie bekommt "Ich suche weiter"
            -   option: Dornröschen mit Schuhgröße 40 erhält die Ausgabe "Ich suche weiter"
                feedback: Das ist richtig!
            -   option: Aschenputtel mit Schuhgröße 38 bekommt den Ausgang "Ich suche weiter"
                feedback: Nein, sie bekommt "❤️❤️❤️"
            hint: Egal wie du heißt, wenn du Schuhgröße 40 hast, bekommst du die Nachricht "Ich suche weiter".
        5:
            question_text: Welcher Code hat diese Ausgabe erzeugt?
            output: |-
                Eis ist das Beste!
                Eis ist das Beste!
                Eis ist das Beste!
            mp_choice_options:
            -   option: |-
                    ```
                    nachtisch = {ask} 'Was ist dein Lieblingsnachtisch?'
                    {if} nachtisch {is} Eis
                        {repeat} 3 {times}
                        {print} 'Eis ist das Beste!'
                    ```
                feedback: Vergiss nicht die Einrückung nach dem `{repeat}` Befehl.
            -   option: |-
                    ```
                    nachtisch = {ask} 'Was ist dein Lieblingsnachtisch?'
                    {if} nachtisch {is} Eis
                    {repeat} 3 {times}
                        {print} 'Eis ist das Beste!'
                    ```
                feedback: Benutze Einrückung nach dem `{if}` Befehl
            -   option: |-
                    ```
                    nachtisch = {ask} 'Was ist dein Lieblingsnachtisch?'
                    {if} nachtisch {is} Eis
                        {repeat} 3 {times}
                            {print} 'Eis ist das Beste!'
                    ```
                feedback: Perfekt
            -   option: |-
                    ```
                    {repeat} 3 {times}
                        nachtisch = {ask} 'Was ist dein Lieblingsnachtisch?'
                        {if} nachtisch {is} Eis
                            {repeat} 3 {times}
                            {print} 'Eis ist das Beste!'
                    ```
                feedback: Es gibt 2 `{repeat}` Befehle in diesem Code.
            hint: Beachte die Einrückung
        6:
            question_text: Nach welchen/welchem Befehl/Befehlen solltest du Einrückung verwenden (die Zeile mit 4 Leerzeichen beginnen)?
            mp_choice_options:
            -   option: '`{if}`'
                feedback: Vergiss nicht die anderen
            -   option: '`{if}` `{repeat}`'
                feedback: Vergiss nicht `{else}`!
            -   option: '`{if}` `{else}` `{repeat}`'
                feedback: Weiter so!
            -   option: '`{if}` `{else}` `{repeat}` `{print}`'
                feedback: Nicht mit drucke
            hint: Einrückung passiert in der Zeile unter manchen Befehlen
        7:
            question_text: Du bekommst 5 Euro Rabatt, wenn du eine mittlere Pizza mit Cola bestellst.<br>Aber der Code hat einen Fehler! Wie kann man ihn debuggen?
            code: |-
                {if} essen {is} Pizza
                {if} größe {is} medium
                {if} getränk {is} Cola
                preis = preis - 2
            mp_choice_options:
            -   option: |-
                    ```
                    {if} essen {is} Pizza
                        {if} größe {is} medium
                            {if} getränk {is} Cola
                                preis = preis - 5
                    ```
                feedback: Toll!
            -   option: |-
                    ```
                    {if} essen {is} Pizza
                        {if} größe {is} medium
                    {if} getränk {is} Cola
                        preis = preis - 5
                    ```
                feedback: Dem zweiten `{if}` fehlt Code!
            -   option: |-
                    ```
                    {if} essen {is} Pizza
                    {if} größe {is} medium
                    {if} getränk {is} Cola
                            preis = preis - 5
                    ```
                feedback: Zwei aufeinander folgende `{if}`s sind nie korrekt.
            -   option: |-
                    ```
                    {if} essen {is} Pizza
                        {if} größe {is} medium
                            {if} getränk {is} Cola
                            preis = preis - 5
                    ```
                feedback: Du bist sehr gut, aber du musst dich an die letzte Regel halten.
            hint: Nach jedem `{if}` Befehl sollte die Zeile darunter eingerückt sein
        8:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                alter = {ask} 'Alles Gute zum Geburtstag! Wie alt bist du?'
                singen = {ask} 'Möchtest du, dass wir singen?'
                    {if} singen {is} Ja
                        {repeat} alter {times}
                            {print} 'Hip Hip Hooray'
            mp_choice_options:
            -   option: Du kannst nicht zwei Fragen in Folge stellen
                feedback: Ja, du kannst.
            -   option: Die Variable mit der Bezeichnung "alter" wird später als "jahre" verwendet
                feedback: Gutes Auge! Gut gemacht!
            -   option: Du darfst nicht mit 8 Leerzeichen beginnen, wie Zeile 4 und 5 es tun
                feedback: Du musst tatsächlich so beginnen.
            -   option: Code muss immer mit einem `{print}` Befehl in der ersten Zeile beginnen
                feedback: Das ist nicht wahr.
            hint: Die Einrückung wurde dieses Mal richtig gemacht
        9:
            question_text: Wie viele `{if}` Befehle können in einem anderen `{if}` Befehl platziert werden?
            mp_choice_options:
            -   option: Keine, das ist nicht erlaubt
                feedback: Das darfst du
            -   option: Nur 1
                feedback: Du könntest mehr nutzen, wenn du möchtest
            -   option: '3'
                feedback: Du könntest mehr nutzen, wenn du möchtest
            -   option: Unendlich, solange du die Einrückung richtig benutzt
                feedback: Das ist wahr
            hint: Du kannst einen `{if}` Befehl in einen `{if}` Befehl schreiben.
        10:
            question_text: Welche Aussage ist wahr?
            code: |-
                1 {repeat} 2 {times}
                2 {if} level {is} 9
                3 {print} Großartig gemacht!
            mp_choice_options:
            -   option: Alle Zeilen sollten mit 4 Leerzeichen beginnen
                feedback: Nur Zeile 2 und 3 beginnen mit Leerzeichen
            -   option: Zeile 2 und 3 sollte mit 4 Leerzeichen beginnen
                feedback: Zeile 3 sollte mit 8 beginnen
            -   option: Zeile 2 und 3 sollte mit 8 Leerzeichen beginnen
                feedback: Zeile 2 sollte mit 4 beginnen
            -   option: Zeile 2 sollte mit 4 Leerzeichen beginnen und Zeile 3 mit 8
                feedback: Du liegst richtig!
            hint: Die erste Zeile beginnt nicht mit Leerzeichen
    10:
        1:
            question_text: Was müssen wir in die Lücken `_` füllen, wenn wir jedes Kompliment ausgeben wollen?
            code: |-
                komplimente = perfekt, großartig gemacht, toll
                _
                    {print} kompliment
            mp_choice_options:
            -   option: |-
                    ```
                    {for} jedes kompliment
                    ```
                feedback: Das ist es nicht
            -   option: |-
                    ```
                    {for} kompliment {in} komplimente
                    ```
                feedback: Du verdienst all diese Komplimente!
            -   option: |-
                    ```
                    {if} kompliment {in} komplimente
                    ```
                feedback: Das ist es nicht
            -   option: |-
                    ```
                    {for} komplimente {in} kompliment
                    ```
                feedback: Fast richtig!
            hint: '`{for}` jedes kompliment in der Liste der komplimente...'
        2:
            question_text: Welche Ausgabe ist richtig?
            code: |-
                mahlzeiten = Pizza, Pasta, Eierkuchen
                {for} mahlzeit {in} mahlzeiten
                    {print} 'Ich liebe ' mahlzeit
            mp_choice_options:
            -   option: Ich liebe Pizza
                feedback: Zeile 2 sagt `{for}` jede mahlzeit in der Liste der mahlzeiten. Also wird jede mahlzeit ausgegeben.
            -   option: Ich liebe Pasta
                feedback: Zeile 2 sagt `{for}` jede mahlzeit in der Liste der mahlzeiten. Also wird jede mahlzeit ausgegeben.
            -   option: Ich liebe Eierkuchen
                feedback: Zeile 2 sagt `{for}` jede mahlzeit in der Liste der mahlzeiten. Also wird jede mahlzeit ausgegeben.
            -   option: |-
                    Ich liebe Pizza
                    Ich liebe Pasta
                    Ich liebe Eierkuchen
                feedback: Großartig!
            hint: Zeile 2 sagt für jede mahlzeit in der Liste der mahlzeiten. Also wird jede mahlzeit ausgegeben.
        3:
            question_text: Welche Ausgabe ist richtig?
            code: |-
                tiere = Hunde, Katzen, Hamster, Hühner
                {for} tier {in} tiere
                    {print} tier ' sind schöne Haustiere'
            mp_choice_options:
            -   option: Hunde sind schöne Haustiere
                feedback: Zeile 2 sagt {for} jedes tier in der Liste der tiere. Also wird jedes tier ausgegeben.
            -   option: Hunde, Katzen, Hamster, Hühner sind schöne Haustiere
                feedback: Jedes tier bekommt seine eigene Zeile in der Ausgabe.
            -   option: |-
                    Hunde sind schöne Haustiere
                    Katzen sind schöne Haustiere
                    Hamster sind schöne Haustiere
                    Hühner sind schöne Haustiere
                feedback: Großartig!
            -   option: Das weißt du noch nicht. Weil es eines der Tiere {at} {random} auswählt.
                feedback: Zeile 2 sagt {for} jedes tier in der Liste der tiere. Also wird jedes tier ge{print}t.
            hint: Zeile 2 sagt {for} jedes tier in der Liste der tiere. Also wird jedes tier ausgegeben
        4:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                einkäufe = Äpfel, Brot, Milch
                {for} artikel {in} einkäufe
                    {print} 'Wir brauchen ' einkäufe
            mp_choice_options:
            -   option: Zeile 2 muss mit 4 Leerzeichen als Einrückung beginnen
                feedback: Nein, tut es nicht. Nur Zeile 3 braucht Einrückung. Die hat sie.
            -   option: Zeile 3 muss nicht mit 4 Leerzeichen als Einrückung beginnen
                feedback: Zeile 2 ist ein `{for}` Befehl also muss Zeile 3 mit Einrückung beginnen.
            -   option: In Zeile 3 sollte "aritkel" statt "einkäufe" stehen
                feedback: Gut gemacht!
            -   option: 'In Zeile 2 muss es heißen: "einkäufe" anstelle von "artikel"'
                feedback: Nein, tut es nicht.
            hint: Zeile 2 lautet `{for}` jeden "artikel" in der Liste "einkäufe"
        5:
            question_text: Welches Wort sollte beim _ stehen?
            code: |-
                {print} 'Willkommen beim digitalen Würfel!'
                spielerinnen = Ann, John, Jesse
                möglichkeiten = 1, 2, 3, 4, 5, 6
                {for} spieler {in} spielerinnen
                    {print} spieler ' wirft ' _ {at} {random}
            mp_choice_options:
            -   option: spielerinnen
                feedback: 'Es würde ausgeben: "Ann wirft Jesse", statt "Ann wirft 6".'
            -   option: möglichkeiten
                feedback: Das ist richtig!
            -   option: möglichkeit
                feedback: Du bist sehr nahe dran. Aber du musst Hedy aus der Liste auswählen, die "möglichkeiten" und nicht "möglichkeit" heißt...
            -   option: würfel
                feedback: Schau dir die Namen der Variablen an.
            hint: Hedy muss eine Zahl `{at} {random}` auswählen
        6:
            question_text: Welche der Antworten unten ist ein mögliches Resultat, wenn du den Code ausführst?
            code: |-
                möglichkeiten = Schere, Stein, Papier
                spielerinnen = Kelly, Meredith
                {for} spielerin {in} spielerinnen
                    {print} spielerin ' wählt ' möglichkeiten {at} {random}
            mp_choice_options:
            -   option: Kelly wählt Stein
                feedback: Meredith will auch mitspielen!
            -   option: |-
                    Meredith wählt Schere
                    Kelly wählt Stein
                feedback: So nah dran! Aber Kelly ist die erste in der Liste, also ist sie zuerst dran
            -   option: Meredith wählt Papier
                feedback: Kelly möchte auch spielen!
            -   option: |-
                    Kelly wählt Papier
                    Meredith wählt Schere
                feedback: Toll!
            hint: Jede Spielerin wird eine Auswahl treffen. Die Spielerin die zuvorderst in der Liste steht beginnt.
        7:
            question_text: Welche Ziele sollte in die Lücken _ in diesem Programm, die entscheidet, was diese Leute zu Abend essen werden?
            code: |-
                namen = Ron, Leslie, April, Andy
                essen = Pasta, Pommes, Salat
                _
                    {print} name ' isst ' essen {at} {random} ' zu Abend'
            mp_choice_options:
            -   option: |-
                    ```
                    {for} name {in} namen
                    ```
                feedback: Du hast einen Lauf!
            -   option: |-
                    ```
                    {for} namen {in} name
                    ```
                feedback: Nein, es sollte für jeden name in der Liste nameN sein, also anders herum
            -   option: |-
                    ```
                    {for} essen {in} essen
                    ```
                feedback: Jedem name sollte gesagt werden, was sie zum Abendessen haben werden.
            -   option: |-
                    ```
                    {for} name {in} essen
                    ```
                feedback: Jedem name sollte gesagt werden, was sie zum Abendessen haben werden.
            hint: Jedem name sollte gesagt werden, was sie zum Abendessen haben werden.
        8:
            question_text: Was sollte in den Lücken _ in diesem Programm stehen, was entscheidet, welche Farbe das Hemd hat, das du bekommst?
            code: |-
                namen = Donna, Tommy, Ben
                farben = Blau, Rot, Lila
                {for} name {in} namen
                    {print} _
            mp_choice_options:
            -   option: |-
                    ```
                    'name bekommt ein farbe Hemd'
                    ```
                feedback: Das ist es nicht!
            -   option: |-
                    ```
                    name 'bekommt ein ' farben {at} {random} ' Hemd'
                    ```
                feedback: Großartig gemacht! Dies war schwierig!
            -   option: |-
                    ```
                    namen 'bekommt ein ' farbe {at} {random} ' Hemd'
                    ```
                feedback: Du möchtest jeden name ausgeben. Also sollte das erste Wort nicht namen sein, sondern...
            -   option: |-
                    ```
                    leute ' bekommt ein farben Hemd'
                    ```
                feedback: Es gibt keine Variable mit dem Namen leute..
            hint: Beachten Sie die Anführungszeichen und die Namen der Variablen
        9:
            question_text: Was ist die erste Frage, die Hedy stellt, wenn du das Programm ausführst?
            code: |-
                gänge = Vorspeise, Hauptspeise, Nachtisch
                namen = Timon, Onno
                {for} name {in} namen
                    {for} gang {in} gänge
                            essen = {ask} name ', was würdest du gerne essen als ' gang '?'
                            {print} name ' bestellt ' essen ' als ' gang
            mp_choice_options:
            -   option: Timon, was würdest du gerne essen als Vorspeise?
                feedback: Perfekt!
            -   option: Onno, was würdest du gerne als Vorspeise essen?
                feedback: Timon ist der Erste in der Liste!
            -   option: Timon, was würdest du gerne essen als Nachtisch?
                feedback: Vorspeisen stehen als erstes in der Liste
            -   option: Das weißt du nicht. Hedy wird `{at} {random}` auswählen.
                feedback: Es gibt kein `{at} {random}` in diesem Code...
            hint: Die jeweils ersten Möglichkeiten von beiden Listen werden gewählt.
        10:
            question_text: Was ist wahr bezüglich dieses Code?
            code: |-
                preise = 1 Million Euro, Auto, Sandwich
                namen = Bob, Patrick, Sandy, Larry
                {for} preis {in} preise
                    {print} preis ' wird von ' name {at} {random} ' gewonnen'
            mp_choice_options:
            -   option: Alle werden immer einen Preis gewinnen.
                feedback: Das ist nicht wahr, du könntest am Ende ohne einen Preis dastehen.
            -   option: Alle Preise werden stets an eine einzige Person vergeben.
                feedback: Das stimmt nicht. Alle Preise werden verteilt, aber an zufällige Personen
            -   option: Larry wird nie einen Preis gewinnen
                feedback: Das ist nicht wahr. Larry hat die gleichen Chancen wie die anderen
            -   option: Jemand könnte zwei Preise gewinnen
                feedback: Du kapierst es!
            hint: Versuche dir die Ausgabe dieses Code vorzustellen.
    11:
        1:
            question_text: Welches Wort sollte anstelle des Fragezeichens stehen?
            mp_choice_options:
            -   option: |-
                    ```
                    counter
                    ```
                feedback: Nein
            -   option: '`{range}`'
                feedback: Richtig
            -   option: '`{if}`'
                feedback: Nein
            -   option: '`{for}`'
                feedback: Nein
            hint: Was hast du in diesem Level gelernt?
        2:
            question_text: Was wird die Ausgabe dieses Code sein?
            mp_choice_options:
            -   option: |-
                    1
                    2
                    3
                feedback: Richtig!
            -   option: 1 2 3
                feedback: Das ist es nicht
            -   option: 1, 2, 3
                feedback: Das ist es nicht
            -   option: '123'
                feedback: Das ist es nicht
            hint: Wie erscheinen die Zahlen auf dem Bildschirm?
        3:
            question_text: Welcher Code wurde benutzt um diese Ausgabe zu bekommen?
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: Perfekt
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                    {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: Dieser Code wird nicht funktionieren. Du brauchst Einrückung nach {for}.
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                        {print} 'Once I caught a fish alive!'
                    ```
                feedback: Nun wird Hedy 1 Once I caught a fish alive!, 2 Once I caught a fish alive! usw. zählen.
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} 'i'
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: i ist eine Variable und sollte Anführungszeichen haben
            hint: Erst alle Zahlen und dann den Satz
        4:
            question_text: Welcher Code wurde benutzt um diese Ausgabe zu erzeugen?
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} i
                    ```
                feedback: Jetzt gibt Hedy die Zahlen 0 bis 10 aus anstelle von 10 bis 0.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 to 10
                        {print} - i
                    ```
                feedback: Hedy würde in diesem Fall negative Zahlen ausgeben.
            -   option: |-
                    ```
                    {for} i {in} {range} 10 to 0
                        {print} 10 9 8 7 6 5 4 3 2 1 0
                    ```
                feedback: Leider existiert dies nicht.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} 10 - i
                    ```
                feedback: Das ist richtig!
            hint: Es muss eine Berechnung sein…
        5:
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   option: The i in the last line need quotation marks
                feedback: Nein, tut es nicht.
            -   option: You can't use `{range}` 1 `{to}` 5 only `{range}` 1 `{to}` 10
                feedback: Du könntest genauso gut 1 bis 5 verwenden!
            -   option: Line 1 needs to start with an indention.
                feedback: Nicht Zeile 1...
            -   option: Line 2 needs to start with an indention
                feedback: Perfekt!
            hint: Da stimmt etwas mit der Einrückung nicht
        6:
            question_text: Wie oft erscheint das Wort Hallo in der Ausgabe, wenn du den Code ausführst?
            code: |-
                {for} i {in} {range} 0 {to} 2
                    {print} 'Hallo'
            mp_choice_options:
            -   option: 1 Mal
                feedback: Nein
            -   option: 2 Mal
                feedback: Nein
            -   option: 3 Mal
                feedback: Das ist richtig!
            -   option: Nie
                feedback: Nein
            hint: 0 zählt auch. Also 0,1,2 ist 3 Mal.
        7:
            question_text: Was sollte anstelle des Fragezeichens stehen?
            code: |-
                {print} 'Willkommen bei Hedys Restaurant'
                personen = {ask} 'Wie viele Personen werden heute Abend hier essen?'
                _
                    essen = {ask} 'Was möchtest du bestellen?'
                    {print} essen
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                    ```
                feedback: Es sind nicht immer 3 Personen
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} gäste
                    ```
                feedback: Die Variable heißt nicht gäste
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} personen
                    ```
                feedback: Großartig!
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} personen
                    ```
                feedback: Das ist eine Bestellung zu viel!
            hint: Benutze die Variable 'personen'
        8:
            question_text: Was wird die Ausgabe dieses Code sein?
            mp_choice_options:
            -   option: |-
                    23
                    24
                    25
                feedback: Die Zahlen erscheinen nicht. Es fehlt `{print}` i.
            -   option: 23 hi 24 hi 25 hi
                feedback: Die Zahlen erscheinen nicht. Es fehlt `{print}` i
            -   option: |-
                    hi
                    hi
                    hi
                feedback: Richtig
            -   option: Das Wort 'hi' wird 25 Mal in Folge erscheinen.
                feedback: Nein, es wird nur 3 Mal erscheinen.
            hint: Es fehlt `{print}` i
        9:
            question_text: Wie oft sagt Hedy Hip Hip Hooray?
            code: |-
                alter = {ask} 'Wie alt bist du?'
                {for} i {in} {range} 1 {to} alter
                    {print} 'Hip Hip Hoorray!'
            mp_choice_options:
            -   option: 1 Mal
                feedback: Versuch es nochmal
            -   option: 2 Mal
                feedback: Versuch es nochmal
            -   option: Nie
                feedback: Versuch es nochmal
            -   option: Das hängt davon ab wie alt du bist
                feedback: Das ist richtig!
            hint: '`{for}` i `{in}` `{range}` 1 `{to}` alter'
        10:
            question_text: Welcher Code gehört zu dieser Ausgabe?
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: Beachte die Einrückung
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: Das ist richtig!
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 ist 4 Mal.'
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 ist 4 Mal.'
            hint: Beachte die Einrückung
    12:
        1:
            question_text: Welche Ausgabe ist korrekt?
            code: |-
                {print} 'dreieinhalb plus eineinhalb ist...'
                {print} 3.5 + 1.5
            mp_choice_options:
            -   option: '5'
                feedback: Vergiss nicht die erste Zeile Code!
            -   option: 3.5 + 1.5
                feedback: Dieser ist es nicht!
            -   option: |-
                    Dreieinhalb plus eineinhalb ist...
                    Fünf
                feedback: Schau dir die zweite Zeile genau an...
            -   option: |-
                    dreieinhalb plus eineinhalb ist...
                    5
                feedback: Großartig gemacht!
            hint: Beide Zeilen werden ausgegeben!
        2:
            question_text: Welches dieser Programme ist korrekt?
            mp_choice_options:
            -   option: |-
                    ```
                    aromen {is} Vanille, Erdbeere, Schokolade
                    {print} 'Ich möchte einen ' aromen {at} {random} ' Kuchen. '
                    ```
                feedback: Alle unterschiedlichen Werte von aromen sollten in Anführungszeichen sein.
            -   option: |-
                    ```
                    'aromen = Vanille, Erdbeere, Schokolade'
                    {print} 'Ich möchte einen ' aromen {at} {random} ' Kuchen. '
                    ```
                feedback: Alle unterschiedlichen Werte von aromen sollten in Anführungszeichen sein.
            -   option: |-
                    ```
                    aromen = 'Vanille', 'Erdbeer', 'Schokoladen'
                    {print} 'Ich möchte einen ' aromen {at} {random} '-Kuchen.'
                    ```
                feedback: In Ordnung!
            -   option: |-
                    ```
                    aromen = 'Vanille, Erdbeere, Schokolade'
                    {print} 'Ich möchte einen ' aromen {at} {random} ' Kuchen. '
                    ```
                feedback: Alle unterschiedlichen Werte von aromen sollten in Anführungszeichen sein.
            hint: Die zweite Zeile ist gleich in beiden Programmen, achte auf die erste Zeile
        3:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                lieblings_tier = {ask} 'Was ist dein Lieblingstier?'
                {print} 'Ich mag ' lieblingstier ' auch!'
            mp_choice_options:
            -   option: Der Name der Variablen ist in Zeile 1 ein anderer als in Zeile 2.
                feedback: Richtig!
            -   option: Die Anführungszeichen werden in Zeile 2 nicht richtig benutzt
                feedback: Das ist nicht wahr
            -   option: Du kannst das = Zeichen nicht verwenden, wenn du einen {ask}-Befehl benutzt
                feedback: Das stimmt nicht
            -   option: Nichts ist falsch.
                feedback: Das stimmt nicht
            hint: Die Anführungszeichen werden richtig benutzt
        4:
            question_text: In welchen Zeilen werden Anführungszeichen gebraucht, um den Code zum Laufen zu bringen?
            code: "{print} Willkommen im Online-Schuhgeschäft\nkategorie = {ask} Welche Art von Schuhen suchen Sie?\n{if} kategorie = High Heels\n\t{print} High Heels sind jetzt 50% reduziert!"
            mp_choice_options:
            -   option: Zeile 1 und 2
                feedback: Nein
            -   option: Zeile 1, 2 und 3
                feedback: Nein
            -   option: Zeile 1, 2 und 4
                feedback: Nein
            -   option: Alle Zeilen
                feedback: Perfekt!
            hint: Braucht Zeile 3 auch Anführungszeichen?
        5:
            question_text: Welche Ausgabe erhält Agent007 wenn er oder sie das richtige Passwort eingibt?
            code: "name {is} {ask} 'Was ist dein Name?'\n{if} name {is} 'Agent007'\n\ta {is} 'Gehe zum Flughafen '\nelse\n\ta {is} 'Gehe zum Bahnhof '\npasswort {is} {ask} 'Was ist das Passwort?'\n{if} passwort {is} 'TOPSECRET'\n\tb {is} 'morgen um 02:00'\nelse\n\tb {is} 'heute um 10:00'\nprint a + b"
            mp_choice_options:
            -   option: Gehe zum Bahnhof heute um 10:00
                feedback: Der Agent wird hier keine Bösewichte erwischen
            -   option: Gehe zum Flughafen morgen um 02:00
                feedback: Du hast den Code geknackt!
            -   option: Gehe zum Bahnhof morgen um 02:00
                feedback: Der Agent wird hier keine Bösewichte erwischen
            -   option: Gehe zum Flughafen morgen um 10:00
                feedback: Der Agent wird hier keine Bösewichte erwischen
            hint: Das richtige Passwort lautet TOPSECRET
        6:
            question_text: Welche Zeile soll bei ??? eingefügt werden?
            code: "{print} 'Willkommen bei McHedy!'\nbestellung = {ask} 'Möchtest du einen Hamburger oder Pommes?'\n{if} bestellung = 'Hamburger'\n\tpreis = 12\n{if} bestellung = 'Pommes'\n\tpreis = 4\ngetränk = {ask} 'Möchtest du einen Getränk dazu für 2 Euro?'\n{if} getränk = 'Ja'\n\t???\n{print} 'Das macht dann ' preis ' Euro bitte'"
            mp_choice_options:
            -   option: |-
                    ```
                    preis = 14
                    ```
                feedback: Was ist, wenn du nur Pommes und ein Getränk bestellst?
            -   option: |-
                    ```
                    preis = '14'
                    ```
                feedback: Was ist, wenn du nur Pommes und ein Getränk bestellst?
            -   option: |-
                    ```
                    preis = preis + 2
                    ```
                feedback: Exzellent!
            -   option: |-
                    ```
                    preis = + 2
                    ```
                feedback: Fast richtig!
            hint: Was ist, wenn du nur Pommes und ein Getränk bestellst?
        7:
            question_text: Welche Ausgabe erhält eine Veganerin?
            code: "menü = 'Kekse', 'Käse', 'Weintrauben'\n{print} \"Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!\"\ndiät = {ask} \"Haben Sie irgendwelche diätetischen Einschränkungen?\n{if} diät = 'glutenfrei'\n\t{remove} 'Kekse' {from} menü\n{if} diät = 'vegan'\n\t{remove} 'Käse' {from} menü\n{print} 'Für dich habe ich mitgebracht: '\n{for} snack {in} menü\n\t{print} snack"
            mp_choice_options:
            -   option: |-
                    Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!
                    Für dich habe ich mitgebracht:
                    Kekse
                    Weintrauben
                feedback: Klasse!
            -   option: |-
                    Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!
                    Für dich habe ich mitgebracht:
                    Weintrauben
                feedback: Es gibt mehr als eine Auswahlmöglichkeit
            -   option: |-
                    Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!
                    Für dich habe ich mitgebracht:
                    Käse
                    Weintrauben
                feedback: Veganer können keinen Käse haben
            -   option: |-
                    Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!
                    Für dich habe ich mitgebracht:
                    Weintrauben
                    Kekse
                feedback: Fast richtig, aber beachte die Reihenfolge der Snacks in der Liste
            hint: Welcher Eintrag wird aus der Liste gestrichen, wenn du "vegan" antwortest?
        8:
            question_text: Welcher Code wurde verwendet, um diese Ausgabe zu erzeugen?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} '7 / 2'
                    ```
                feedback: Nein
            -   option: |-
                    ```
                    {print} 7 / 2
                    ```
                feedback: Das ist richtig!
            -   option: |-
                    ```
                    {print} 7 : 2
                    ```
                feedback: Nein
            -   option: |-
                    ```
                    {print} 7 * 2
                    ```
                feedback: Nein
            hint: 7 geteilt durch 2 ist 3.5
        9:
            question_text: Welcher Code soll in Zeile 1 anstelle der ???
            code: |-
                ???
                {print} 'Du gewinnst ' preise {at} {random} '!'
            mp_choice_options:
            -   option: |-
                    ```
                    preise = 'eine' 'Million' 'Euro', 'nichts'
                    ```
                feedback: Du gewinnst nichts
            -   option: |-
                    ```
                    preise = 'eine Million Euro, nichts'
                    ```
                feedback: Du gewinnst nichts
            -   option: |-
                    ```
                    preise = 'eine Million Euro', 'nichts'
                    ```
                feedback: Gewinner!
            -   option: |-
                    ```
                    'preise' = 'eine Million Euro', 'nichts'
                    ```
                feedback: Du eine nichts
            hint: Die Elemente in der Liste sollten in Anführungszeichen stehen
        10:
            question_text: Welche Codezeile soll bei ??? ausgefüllt werden um das Lied zu vervollständigen?
            code: "aktionen = 'clap your hands', 'stomp your feet', 'shout Hurray!'\n???\n\t{for} i {in} range 0 {to} 1\n\t\t{print} 'if youre happy and you know it'\n\t\t{print} aktion\n\t{print} 'if youre happy and you know it and you really want to show it'\n\t{print} 'if youre happy and you know it'\n\t{print} aktion"
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                    ```
                feedback: Das ist eine schwierige Aufgabe! Alle Aktionen aus der Liste müssen im Lied vorkommen.
            -   option: |-
                    ```
                    {for} aktion {in} aktionen
                    ```
                feedback: Du bist super!
            -   option: |-
                    ```
                    {repeat} 3 {times}
                    ```
                feedback: Das ist eine schwierige Aufgabe! Alle Aktionen aus der Liste müssen im Lied vorkommen.
            -   option: |-
                    ```
                    {print} aktionen {at} {random}
                    ```
                feedback: Das ist eine schwierige Aufgabe! Alle Aktionen aus der Liste müssen im Lied vorkommen.
            hint: Das ist eine schwierige Aufgabe! Alle Aktionen aus der Liste müssen im Lied vorkommen.
    13:
        1:
            question_text: Welcher Code soll bei ??? eingefügt werden?
            code: "name = {ask} 'Was ist dein Name?'\nsong = {ask} 'Möchtest du einen Song hören?'\ngeburtstag = {ask} 'Ist heute dein Geburtstag?'\n???\n\t{print} 'Happy Birthday to you!'\n\t{print} 'Happy Birthday to you!'\n\t{print} 'Happy Birthday liebe/r ' name\n\t{print} 'Happy Birthday to you!'"
            mp_choice_options:
            -   option: |-
                    ```
                    {if} geburtstag {and} song = 'ja'
                    ```
                feedback: Fast geschafft
            -   option: |-
                    ```
                    {if} geburtstag = 'ja' {and} name = 'Hedy'
                    ```
                feedback: Hedy singt nur für dich, wenn du ein Lied hören willst
            -   option: |-
                    ```
                    {if} song = 'ja' {and} geburtstag = 'ja'
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    {if} song = 'ja' {or} geburtstag = 'ja'
                    ```
                feedback: Hedy singt nur, wenn beide Antworten Ja lauten
            hint: Hedy singt, wenn du ein Lied hören willst und es dein Geburtstag ist
        2:
            question_text: Welcher Befehl fehlt an der Stelle der ??? ?
            code: |-
                menü = 'Käse', 'Wurstbrötchen', 'Kekse'
                ernährung = {ask} 'Haben Sie irgendwelche Ernährungseinschränkungen?'
                {if} ernährung = 'vegan' ??? ernährung = 'halal'
                    {remove} 'Wurstbrötchen' {from} menü
            mp_choice_options:
            -   option: '`{and}`'
                feedback: Du musst nicht vegan oder muslimisch sein
            -   option: '`{or}`'
                feedback: Großartiges Denken!
            -   option: '`+`'
                feedback: Nein
            -   option: '`{print}`'
                feedback: Nein
            hint: Weder Veganer noch Muslime können Wurstbrötchen essen.
        3:
            question_text: Welche Ausgabe bekommt das Mitglied ohne Rabatt-Code?
            code: |-
                mitglied = {ask} 'Hast du eine Mitgliedskarte?'
                rabatt = {ask} 'Hast du einen Rabatt-Code?'
                {if} mitglied = 'ja' {or} rabatt = 'ja'
                    {print} 'Du bekommst einen kostenlosen Apfelkuchen!'
                {else}
                    {print} 'Das sind 5 Euro bitte'
            mp_choice_options:
            -   option: Du bekommst einen kostenlosen Apfelkuchen!
                feedback: Großartig gemacht!
            -   option: Das sind 5 Euro bitte
                feedback: Das ist nicht wahr
            -   option: Dieser Code wird nicht funktionieren, also wird es keine Ausgabe geben
                feedback: Dieser Code hat keinen Fehler
            -   option: Es gibt keinen Weg es herauszufinden
                feedback: Gibt es! Lies die Frage genau
            hint: Beachte den Befehl `{or}` in Zeile 3
        4:
            question_text: Welche Zeile Code sollte dieser Zeile im Stein-Schere-Papier-Spiel folgen?
            code: '{if} computer_wahl {is} ''Stein'' {and} deine_wahl {is} ''Papier'''
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'du gewinnst'
                    ```
                feedback: Du gewinnst!
            -   option: |-
                    ```
                    {print} 'du verlierst'
                    ```
                feedback: Du verlierst!
            -   option: |-
                    ```
                    {print} 'unentschieden'
                    ```
                feedback: Es ist nur unentschieden, wenn beide gleich sind
            -   option: |-
                    ```
                    {print} 'versuche es nochmal'
                    ```
                feedback: Versuche es nochmal!
            hint: Papier schlägt Stein
        5:
            question_text: Welche Aussage über diesen Code ist wahr?
            code: |-
                {if} name = 'Cinderella' {and} schuhgröße = '38'
                    {print} 'Du bist meine einzig wahre Liebe!'
            mp_choice_options:
            -   option: Jede Person mit Schuhgröße 38 ist die einzig wahre Liebe dieses Prinzen
                feedback: Der Prinz ist etwas wählerischer!
            -   option: Jede Person namens Cinderella ist des Prinzen einzig wahre Liebe
                feedback: Der Prinz ist etwas wählerischer!!
            -   option: Jede Person namens Cinderella mit Schuhgröße 38 ist dieses Prinzen wahre Liebe
                feedback: Fantastisch!
            -   option: Jede Person nicht namens Cinderella mit Schuhgröße 38 ist dieses Prinzen wahre Liebe
                feedback: Der Prinz ist etwas wählerischer!
            hint: Beide Aussagen müssen wahr sein
        6:
            question_text: Welche Aussage über diesen Code ist wahr?
            code: |-
                {print} 'Lass mich raten, welches Familienmitglied du bist!'
                brille = {ask} 'Trägst du eine Brille?'
                weiblich = {ask} 'Bist du weiblich?'
                {if} brille = 'ja' {and} weiblich = 'ja'
                    {print} 'Du musst Sophie sein!'
                {if} brille = 'nein' {and} weiblich = 'ja'
                   {print} 'Du musst Marleen sein!'
                {if} brille = 'ja' {and} weiblich = 'nein'
                    {print} 'Du musst Wouter sein!'
                {if} brille = 'nein' {and} weiblich = 'nein'
                    {print} 'Du musst Michael sein!'
            mp_choice_options:
            -   option: Michael ist ein Junge mit Brille
                feedback: Versuche es nochmal
            -   option: Marleen ist ein Mädchen mit Brille
                feedback: Versuche es nochmal
            -   option: Wouter ist ein Junge ohne Brille
                feedback: Versuche es nochmal
            -   option: Sophie ist ein Mädchen mit Brille
                feedback: Großartig gemacht!
            hint: Schau es dir genau an! Oder brauchst du eine Brille?
        7:
            question_text: Welche Aussage ist falsch?
            code: |-
                {print} 'Danke, dass du mir mit den Haustieren hilfst'
                {print} 'Hier ist ein Programm, das hilft, sie zu füttern'
                tier = {ask} 'Welches Tier ist es?'
                farbe = {ask} 'Welche Farbe hat es?'
                {if} tier = 'Katze' {and} farbe = 'grau'
                    {print} 'Das ist Abby. Sie isst 3 Schaufeln Katzenfutter'
                {if} tier = 'Katze' {and} farbe = 'orange'
                    {print} 'Das ist Milo. Er isst 4 Schaufeln Katzenfutter'
                {if} tier = 'Vogel' {or} farbe = 'schwarz'
                    {print} 'Ich habe sie heute morgen gefüttert! Sie brauchen heute kein Futter mehr'
                {if} tier = 'Hamster' {and} farbe = 'braun'
                    {print} 'Du kannst ihm ein Stück Möhre geben'
            mp_choice_options:
            -   option: Die graue Katze heißt Abby
                feedback: Dies ist wahr!
            -   option: Milo die orange Katze isst 4 Schaufeln Katzenfutter
                feedback: Dies ist wahr
            -   option: Der schwarze Hamster braucht ein Stück Möhre
                feedback: Großartig gemacht!
            -   option: Der gelbe Vogel wurde heute morgen gefüttert
                feedback: Dies ist wahr
            hint: Lies die letzten 4 Zeilen genau
        8:
            question_text: Welche Ausgabe erhältst du, wenn du Popcorn bestellst, aber kein Getränk?
            code: |-
                {print} 'Willkommen im Kino'
                popcorn = {ask} 'Möchtest du Popcorn?'
                getränk = {ask} 'Möchtest du ein Getränk?'
                {if} popcorn = 'ja' {and} getränk = 'ja'
                    {print} 'Das macht 8 Euro bitte'
                {if} popcorn = 'nein' {and} getränk = 'ja'
                   {print} 'Das macht 3 Euro bitte'
                {if} popcorn = 'ja' {and} getränk = 'nein'
                    {print} 'Das macht 5 Euro bitte'
                {if} popcorn = 'nein' {and} getränk = 'nein'
                    {print} 'OK'
                {print} 'Viel Spaß beim Film'
            mp_choice_options:
            -   option: |-
                    Willkommen im Kino
                    Das macht 8 Euro bitte
                    Viel Spaß beim Film
                feedback: Du hast zu viel bezahlt!
            -   option: |-
                    Willkommen im Kino
                    Das macht 5 Euro bitte
                    Viel Spaß beim Film
                feedback: Toll!
            -   option: |-
                    Willkommen im Kino
                    Das macht 3 Euro bitte
                    Viel Spaß beim Film
                feedback: Das ist nicht genug Geld!
            -   option: |-
                    Willkommen im Kino
                    OK
                    Viel Spaß beim Film
                feedback: Du musst für das Popcorn bezahlen!
            hint: popcorn = ja und getränk = nein
        9:
            question_text: Was stimmt mit diesem Code nicht?
            code: |-
                1  schokolade = {ask} 'Möchtest du Schokoladen-Sauce auf deinem Eis?'
                2  streusel = {ask} 'Möchtest du Streusel auf deinem Eis?'
                3  {if} schokolade {and} streusel = 'ja'
                4      {print} 'Eis mit Schokoladen-Sauce und Streuseln, kommt sofort!'
                5  {if} schokolade = 'ja' {and} streusel = 'nein'
                6      {print} 'Eis mit Schokoladen-Sauce, kommt sofort!'
                7  {if} schokolade = 'nein' {and} streusel = 'ja'
                8      {print} 'Eis mit Streuseln, kommt sofort'
                9  {if} schokolade = 'nein' {and} streusel = 'nein'
                10     {print} 'Einfach nur Eis, kommt sofort!'
            mp_choice_options:
            -   option: 'Zeile 3 sollte sein: {if} schokolade = ''ja'' {and} streusel = ''nein'''
                feedback: Richtig!
            -   option: 'Zeile 3 sollte sein: {if} schokolade = ''nein'' {and} streusel = ''nein'''
                feedback: Dies ist nicht was ich bestellt habe!
            -   option: 'Zeile 5 sollte sein: {if} schokolade = ''ja'' {and} streusel = ''ja'''
                feedback: Dies ist nicht was ich bestellt habe!
            -   option: 'Zeile 7 sollte sein: {if} schokolade = ''ja'' {and} streusel = ''nein'''
                feedback: Dies ist nicht was ich bestellt habe!
            hint: Da ist ein Fehler in Zeile 3
        10:
            question_text: Welcher Befehl muss in Zeile 8 anstelle der ??? stehen?
            code: |-
                {print} 'Willkommen beim Produktfinder dieses Supermarkts'
                produkt = {ask} 'Welches Produkt suchen Sie?'
                bäckerei = 'Brot', 'Brötchen', 'Muffins'
                getränke = 'Sprudel', 'Wasser', 'Limo'
                snacks = 'Chips', 'Nüsse', 'Dips'
                gefroren = 'Pommes', 'Eis', 'Pizza'
                obst = 'Bananen', 'Äpfel', 'Orangen'
                {if} produkt {in} snacks ??? produkt {in} getränke
                    {print} 'Dieses Produkt ist in Gang 3'
                {if} produkt {in} bäckerei {or} produkt {in} bäckerei
                    {print} 'Dieses Produkt ist ganz hinten im Laden'
                {if} produkt {in} obst
                    {print} 'Das Obst ist in der Nähe der Kasse'
            mp_choice_options:
            -   option: '`{and}`'
                feedback: Es gibt keine Produkte die sowohl in der Liste der Snacks als auch in der Liste der Getränke sind
            -   option: '`{or}`'
                feedback: Großartig gemacht!
            -   option: '`{in}`'
                feedback: Nein
            -   option: '`{if}`'
                feedback: Nein
            hint: Das Produkt ist entweder in der Liste der Snacks oder in der Liste der Getränke
    14:
        4:
            code: |-
                price = 10
                money = {ask} How much money do you have?
                buy = {ask} 'Would you like to buy this teddy bear?'
                {if} money >= price and buy == 'yes'
                    {print} 'You can buy the bear!'
                {else}
                    {print} 'You cannot buy this bear!'
        5:
            code: |-
                age = {ask} 'How old are you?'
                ticket = {ask} 'Do you have a ticket?'
                {if} age _ and ticket == 'yes'
                    {print} 'You can enter the movie theater.'
                {else}
                    {print} 'You are not allowed to come in!'
        6:
            code: |-
                lives = 2
                {repeat} 10 times
                    {if} lives != 0
                        answer = {ask} 'Are you annoyed yet?'
                    {if} answer == 'yes'
                        lives = lives - 1
        9:
            code: |-
                chocolate = {ask} 'How many pieces of chocolate have you eaten?'
                  {if} chocolate <= 2
                      {print} 'That is a healthy amount'
                  {if} chocolate > 2 and chocolate =< 8
                      {print} 'That is a bit much'
                  {if} chocolate > 8
                      {print} 'You will get a stomach ache!'
    15:
        1:
            code: |-
                answer = 0
                while answer _ 'Amsterdam'
                    answer = ask 'What is the capital city of the Netherlands?'
                print 'You have given the correct answer'
        3:
            question_text: Which command should be filled in on the two blanks?
            code: |-
                _ age >= 18
                  print 'you are not allowed in this bar'
        4:
            code: |-
                options = 1, 2, 3, 4, 5, 6
                print 'Throw 6 as fast as you can!'
                thrown = 0
                tries = 0
                while thrown == 6
                    thrown = options at random
                    print 'You threw ' thrown
                    tries = tries + 1
                print 'Yes! You have thrown 6 in ' tries ' tries.'
            mp_choice_options:
            -   option: In line 1 == should be used instead of =
                feedback: No that's not it
            -   option: Line 2 misses quotation marks
                feedback: That's not right
            -   option: In line 5 if should have been used instead of while
                feedback: That's not it
            -   option: In line 5 != should have been used instead of ==
                feedback: You are correct
        5:
            code: |-
                wetness = 10
                while wetness != 0
                    print 'Your hair is still wet, hair dryer on!'
                    sleep 1
                    clear
                    wetness _

                print 'All dry!'
            mp_choice_options:
            -   option: = wetness
                feedback: That will not change anything
            -   option: = wetness = 1
                feedback: You can't have two times = in one line
            -   option: = wetness - 1
                feedback: You are correct!
            -   option: = wetness + 1
                feedback: The program should count down
        6:
            question_text: what is wrong with this code?
            code: |-
                lives = 100
                    {while} lives != 0
                    answer = {ask} 'Are you annoyed yet?'
                {if} answer == 'yes'
                    lives = lives - 1
            mp_choice_options:
            -   option: while should be if
                feedback: No that is not right
            -   option: if should be while
                feedback: No that is not right
            -   option: Line 3 should start with more indentation
                feedback: No that's not right
            -   option: Line 2 should start with less indentation
                feedback: That is correct
        7:
            question_text: How should this program be changed to that it works?
            mp_choice_options:
            -   option: '... change the first {if} into a {while}'
                feedback: Perfect!
            -   option: '... change the second {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the third {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the fourth {if} into a {while}'
                feedback: That's not quite right.
        8:
            hint: The block after the while command keeps happening while the toilet is occupied.
        9:
            code: |-
                chocolate = {ask} 'How many calories have you eaten today?'
                  {while} calories <= 1000
                      {print} 'You could eat some more'
                  {while} calories > 1000 and calories =< 2000
                      {print} 'That is alright'
                  {while} calories > 2000
                      {print} 'You have had enough for today'
            mp_choice_options:
            -   option: Nothing. 1600 is not programmed into the app.
                feedback: 'No'
            -   option: you could eat some more
                feedback: 'No'
            -   option: That is alright
                feedback: Yes!
            -   option: You have eaten enough for today
                feedback: 'No'
        10:
            mp_choice_options:
            -   option: name_player_1
                feedback: You are right!
            -   option: name_player_2
                feedback: No they are losing!
            -   option: points_player_1
                feedback: You should fill in a name, not a number
            -   option: points_player_2
                feedback: You should fill in a name, not a number
    16:
        2:
            code: |-
                friends = ['Wesley', 'Eric', 'Kaylee']
                chores = [the cooking, the cleaning, nothing]
                {for} i {in} {range} 1 {to} 3
                    {print}  _
        3:
            code: |-
                friends = ['Wesley', 'Eric', 'Kaylee']
                chore = [the cooking, the cleaning, nothing]
                {for} i {in} {range} 1 {to} 3
                    {print}  friends[i] has to do chores[i]
        4:
            mp_choice_options:
            -   option: The variable in line 4 should be 'friend[i]', not 'friends[i]'
                feedback: That is not right.
            -   option: Line 3 should say 'in range 1 to 3' not 'in range 0 to 3'
                feedback: Good catch!
            -   option: Line 4 should say 'lucky_number', not 'lucky number
                feedback: It's not a variable, it's just text.
            -   option: '{in} in line 3 should be removed'
                feedback: That's not it
        5:
            mp_choice_options:
            -   option: noises = ['moo', 'woof', 'neigh']
                feedback: Mind the variable name and the order of the sounds.
            -   option: sounds = '[woof], [moo], [neigh]'.
                feedback: Look at line one to see how brackets are supposed to be used.
            -   option: sounds = [woof, moo, neigh]
                feedback: Don't forget the quotation marks!
            -   option: sounds = ['woof', 'moo', 'neigh']
                feedback: Great job!
    17:
        8:
            mp_choice_options:
            -   {}
            -   {}
            -   feedback: Gut gemacht!
        10:
            mp_choice_options:
            -   {}
            -   {}
            -   feedback: Gut gemacht!
        3:
            mp_choice_options:
            -   {}
            -   {}
            -   feedback: Gut gemacht!
        5:
            mp_choice_options:
            -   feedback: Gut gemacht!
