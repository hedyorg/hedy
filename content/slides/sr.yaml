levels:
    0:
        1:
            header: Добродошли у Хеди!
            text: Хеди је програмски језик.
        2:
            header: Програмирање
            text: |-
                Програмирање је давање инструкција рачунару, користећи језик рачунара.

                Такав језик се зове "програмски језик".
        3:
            header: Програмски језик
            text: |-
                Можда већ знате неке програмске језике?
                Неки примери су:
                * Scratch
                * Python
                * HTML
        4:
            header: Програмирање
            text: |-
                Ако знате да програмирате, можете радити много кул ствари:
                * Правити интерактивне приче
                * Креирати рачунарске цртеже и цртати их на папиру или тканини
                * Правити своје апликације за коришћење на телефону
        5:
            header: Програмирање у Хедију
            text: У Хедију користимо специјалне кодове, као што је `{print}`.
            code: '{print} Добродошли у Хеди!'
        6:
            header: Програмирање у Хедију
            text: Кодне речи ће бити приказане у розе боји.
            code: '{print} Добродошли у Хеди!'
        7:
            header: Програмирање у Хедију
            text: Започињемо код са дугметом Run code испод кода.
            code: '{print} Добродошли у Хеди!'
        8:
            header: Програмирање у Хедију
            text: Излаз се појављује на десној страни.
            code: '{print} Добродошли у Хеди!'
        9:
            header: Програмирање у Хедију
            text: Излаз може бити и цртеж.
            code: "{forward} 100\n{turn} {left}"
    1:
        1:
            header: Добродошли на ниво 1!
            text: |-
                Почећемо ниво 1 прављењем прича у Хедију!

                Потребна су нам три текстуална кода да бисмо креирали интерактивне приче.
        2:
            text: |-
                Први код који можете користити на нивоу 1 је `{print}`.

                `{print}` се користи за приказивање текста на екрану.
            code: '{print} Прикажи текст на екрану'
            header: '{print}'
        3:
            header: 'Команда {print}'
            text: |-
                Можете променити текст после команде за приказивање у шта год желите.

                Или можете приказати више линија додавањем још једне линије кода која такође почиње са `{print}`.
            code: |-
                {print} Добродошли у Хеди!
                {print} Почните да програмирате сада!
        4:
            text: |-
                Други код који можете користити на нивоу 1 је `{ask}`.

                `{ask}` се користи за постављање питања на које се може одговорити.
            code: |-
                {print} Добродошли у вашу сопствену игру камен-маказе-папир!
                {ask} Шта ћете изабрати?
            header: '{ask}'
        5:
            text: |-
                Као што сте могли видети у претходном примеру. Ако користите команду `{ask}`, можете поставити питање.
                Одговор, међутим, неће бити приказан на екрану.

                Ако желите да се одговор прикаже, можете користити последњу команду овог нивоа: `{echo}`.
                `{echo}` се користи за понављање одговора на `{ask}`.
            code: |-
                {print} Здраво!
                {ask} Како се зовеш?
                {echo} здраво
            header: '{echo}'
        6:
            header: Програмирање!
            text: "Са `{print}`, `{ask}` и `{echo}` већ можете креирати малу причу.\nОво је добро време да испробате авантуре Parrot, Story и Rock, Paper Scissors."
            editor: /хеди/1
        7:
            header: Програмирање!
            text: Авантуре су приказане у табовима.
            editor: /hedy/1
        8:
            header: Програмирање!
            text: Жуте стрелице могу се користити за копирање примера.
            editor: /hedy#print_command
        9:
            header: 'Цртање са корњачом'
            text: 'Сада када смо видели текстуалне кодове, сада ћемо погледати кодове за цртање.'
        10:
            header: 'Цртање са корњачом: {forward}'
            text: '`{forward}` се користи за померање корњаче напред.'
            code: '{forward} 50'
        11:
            header: 'Цртање са корњачом: {turn}'
            text: '`{turn}` се користи за окретање корњаче лево или десно.'
            code: "{forward} 50\n{turn} {left}"
        12:
            header: Отклањање грешака
            text: Отклањање грешака у коду значи уклањање грешака у коду. Хајде да заједно отклонимо овај код. Кликните на дугме са бубамаром да бисте покренули отклањач грешака.
            code: |-
                Ја сам DJ Хеди
                {print} Коју песму желите да чујете?
                {ask} И ја волим ту песму!
                {print} Следеће... {echo}
            debug: 'Истина'
        13:
            header: Нека забава у програмирању почне!
            text: Уживајте у авантурама на нивоу 1!
    2:
        1:
            header: Добродошли на ниво 2
            text: |-
                На овом нивоу ћете научити да користите променљиве.

                Променљива је реч која се може користити за чување информација.

                На пример: име, године или омиљени спортски тим.
        2:
            header: Променљиве
            text: Да бисте направили или 'поставили' променљиву користимо команду `{is}`
            code: |-
                name {is} Хеди
                age {is} 15
                {print} name is age година стар
        3:
            header: Интерактивно
            text: |-
                Такође можемо поставити променљиву постављањем питања.

                Одговор на питање се чува у променљивој.

                На овај начин нам није потребна команда `{echo}`.
            code: |-
                name {is} {ask} Како се зовеш?
                {print} Здраво name
        4:
            header: Више променљивих
            text: Сада када користимо променљиве, можемо користити више променљивих уместо само једне команде `{echo}`.
            code: |-
                name {is} {ask} Како се зовеш?
                {print} Здраво name
                age {is} {ask} Колико имаш година?
                {print} name is age година стар.
        5:
            header: Пауза
            text: Такође можете користити команду `{sleep}` да паузирате код на неко време.
            code: |-
                {print} Моја омиљена боја је...
                {sleep} 2
                {print} зелена!
        6:
            header: Пауза 5
            text: |-
                Можете додати број после команде `{sleep}` ако желите да пауза буде дужа.

                Ако желите, можете чак користити променљиву уместо броја да одредите трајање команде за паузу.
            code: |-
                пауза {is} 10
                {print} Моја омиљена боја је...
                {sleep} пауза
                {print} зелена!
        7:
            header: Отклањање грешака
            text: Отклањање грешака у коду значи уклањање грешака у коду. Хајде да заједно отклонимо овај код. Кликните на дугме са бубамаром да бисте покренули отклањач грешака.
            code: |-
                {print} Добродошли у продавницу крофни!
                фил {is} Који фил желите?
                {print} Изабрали сте... Фил! Њам!
                прелив {ask} Који прелив желите?
                прелив је укусан!
                {print} Идем по вашу крофну. {sleep}
                {print} Ево је! Крофна са филом и преливом!
                {ask} Пријатан дан!
            debug: 'Истина'
        8:
            header: Нека забава у програмирању почне!
            text: Уживајте у авантурама на нивоу 2!
    3:
        1:
            header: Добродошли на ниво 3
            text: На овом нивоу ћете научити како да направите листу, додате и уклоните ставке са својих листа и изаберете насумичну ставку са те листе.
        2:
            header: Прављење листе
            text: |-
                Правите листу са `{is}`.

                Одвојите ставке на својој листи зарезом.
            code: животиње {is} пси, мачке, кенгури
        3:
            header: Насумично
            text: |-
                Можете користити листу са командом `{at}` `{random}`.
                Рачунар ће насумично изабрати једну ставку са листе.
                Сваки пут када покренете овај код, излаз ће бити другачији.
            code: |-
                животиње {is} пси, мачке, кенгури
                {print} животиње {at} {random}
        4:
            header: Насумично у реченици
            text: Можете користити команду `{at}` `{random}` и у реченици.
            code: |-
                животиње {is} пси, мачке, кенгури
                {print} Моја омиљена животиња је животиње {at} {random}
        5:
            header: Додај у
            text: |-
                Можете додати ставке на листу са командом `{add}` `{to}`.

                Можете изабрати шта да додате на листу или можете користити команду `{add}` `{to}` у комбинацији са командом `{ask}`.
                На овај начин можете дозволити играчу да одлучи шта да дода на листу.
            code: |-
                животиње {is} пас, мачка, кенгур
                свиђање {is} {ask} Која је твоја омиљена животиња?
                {add} свиђање {to_list} животиње
                {print} Ја бирам животиње {at} {random}
        6:
            header: Уклони са
            text: |-
                Супротно од команде `{add}` `{to}` је команда `{remove}` `{from}`.
                Ова команда уклања ставку са листе.
            code: |-
                животиње {is} пас, мачка, кенгур
                несвиђање {is} {ask} Која животиња ти се не свиђа?
                {remove} несвиђање {from} животиње
                {print} Ја бирам животиње {at} {random}
        7:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            editor: |-
                music_genres {is} rock, pop, metal, indie, jazz
                chosen_genre {is} music {at} {random}
                {print} Хајде да слушамо изабрани жанр
                nice {ask} Да ли вам се свиђа тај жанр?
                {remove} chosen_genre {from} chosen_genre
                second_choice {is} music_genres
                {print} или више волите... second_choice {at} {random}
                {remove} second_choice {to} music_genres
                {print} Највише волим music_genre {random}!
            debug: 'Истина'
        8:
            header: Хајде да радимо!
            text: Уживајте у авантурама на нивоу 3!
    4:
        1:
            header: Добродошли на ниво 4
            text: На овом нивоу ћете научити како да користите наводнике.
            code: '{print} ''print са наводницима!'''
        2:
            header: Проблем
            text: 'У претходним нивоима, можда сте наишли на овај проблем:'
            code: |-
                name {is} Софи
                {print} Моје име је name
            debug: 'Истина'
        3:
            header: Решавање проблема са наводницима
            text: |-
                На овом нивоу ћемо решити овај проблем коришћењем наводника.

                Ово такође чини да наш код изгледа више као 'прави' Python код.
        4:
            header: Наводници са print
            text: Сваки пут када користите команду `{print}` потребно је да ставите текст који желите да се појави на екрану у наводнике.
            code: '{print} ''print са наводницима!'''
        5:
            header: Наводници са ask
            text: Ово важи и за команду `{ask}`.
            code: name {is} {ask} 'име молим?'
        6:
            header: Наводници и променљиве
            text: |-
                Не желите да се имена променљивих приказују на екрану.
                Зато променљиве треба оставити ван наводника, овако:
            code: |-
                name {is} Хари
                {print} 'Здраво ' name
        7:
            header: Наводници и променљиве
            text: |-
                Када се имена променљивих користе у средини реченице, морате оставити променљиве ван наводника.
                Остатак реченице, међутим, треба да буде у наводницима. То изгледа овако:
            code: |-
                name {is} Хари
                {print} 'Здраво ' name ', како си?'
        8:
            header: Наводници и скраћенице
            text: |-
                Будите пажљиви! Сада када користите наводнике, не можете користити апострофе у скраћеницама.

                Молимо вас да покушате да прикажете скраћеницу као што је "you're" или "I'm" на екрану испод и видите шта се дешава....
            code: '{print} ''Ово неће радити!'''
            debug: 'Истина'
        9:
            header: Очисти
            text: "На овом нивоу ћете такође научити команду {clear}.\nПомоћу ове команде можете обрисати сав текст са вашег излазног екрана.\n\nБудите пажљиви да увек користите и команду sleep. Ако не користите, рачунар ће обрисати сав текст пре него што успете да га прочитате!"
            code: |-
                {print} '3'
                {clear}
                {print} '2'
                {clear}
                {print} '1'
                {clear}
                {print} 'ИЗНЕНАЂЕЊЕ!'
        10:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {clear}
                {print} Како леп дан за одлазак на плажу!
                {ask} 'Да ли желиш да правиш замак од песка или да пливаш у океану?'
                {print} 'Желиш да радиш активност '
                {print} 'И ја бих то волео'
                {print} 'Погледај ове прелепе шкољке!'
                боје {is} 'наранџаста, сребрна, бела, браон'
                {print} 'Волим боје {at} {random}!'
                избор {is} {ask} Која ти се свиђа?
            debug: 'Истина'
        11:
            header: Спремни, пажња, сад!
            text: Уживајте у авантурама на нивоу 4!
    5:
        1:
            header: Добродошли на ниво 5
            text: 'На овом нивоу ћете научити да користите 3 нове команде: `{if}`, `{else}` и `{in}`.'
        2:
            text: |-
                Команда `{if}` вам омогућава да бирате између две опције.
                У овом примеру рачунар ће приказати 'nice' ако је дати одговор Hedy.
                Ако одговор није Hedy, рачунар неће урадити ништа.
            code: |-
                name {is} {ask} 'како се зовеш?'
                {if} name {is} Хеди {print} 'лепо'
            header: ако
        3:
            header: Не заборавите да прикажете
            text: |-
                Када користите команду `{if}`, не заборавите да користите команду `{print}`.
                Овај код неће радити!
            code: '{if} name {is} Хеди ''лепо'''
            debug: 'Истина'
        4:
            header: иначе
            text: |-
                Када користите команду `{if}`, можете такође додати команду `{else}`.
                Ако је одговор Hedy, рачунар ће приказати 'nice'.
                Али ако је одговор нешто друго, рачунар ће приказати 'boo'
            code: '{if} name {is} Хеди {print} ''лепо'' {else} {print} ''бу!'''
        5:
            header: Дуге линије
            text: |-
                Можда сте приметили да ваше линије могу постати веома дуге када имате и команду `{if}` и команду `{else}`.

                Можете изабрати да раздвојите команде и ставите их на 2 линије, овако:
            code: |-
                {if} name {is} Хеди {print} 'лепо'
                {else} {print} 'бу!'
        6:
            header: Још једна нова команда
            text: |-
                Ако сте вежбали са командама `{if}` и `{else}`, можете такође пробати команду `{in}`.

                Са `{in}` можете дозволити рачунару да провери да ли је нека ставка у листи, на пример:

                Имајте на уму да је Hedy осетљива на велика и мала слова. То значи да ако одговорите "Green" уместо "green", Hedy ће приказати "meh".
            code: |-
                лепе_боје {is} зелена, жута
                омиљена_боја {is} {ask} 'Која је твоја омиљена боја?'
                {if} омиљена_боја {in} лепе_боје {print} 'лепо!'
                {else} {print} 'мех'
        7:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {print} Добродошли у HedyAir Security!
                boarding_pass {is} {ask} 'Да ли имате своју карту за укрцавање?'
                {if} bording_pass yes {print} Одлично!
                {else} Молимо вас, припремите своју карту за укрцавање.
                passport {is} 'Могу ли видети ваш пасош, молим вас?'
                {if} passport {is} yes 'хвала вам'
                {else} 'Не можете летети без пасоша'
                declare {is} {ask} Да ли имате нешто да пријавите?
                {if} declare {is} yes
                item_to_declare {is} {ask} 'Шта бисте желели да пријавите'
                {else} У реду
                {print} Хвала вам. Молимо вас, идите до капије A22.'
            debug: 'Истина'
        8:
            header: Идемо!
            text: Уживајте у авантурама на нивоу 5!
    6:
        1:
            header: Добродошли на ниво 6
            text: На овом нивоу додајемо математику у наше кодове.
        2:
            header: Сабирање
            text: Ако желите да израчунате сабирање, једноставно користите знак плус.
            code: '{print} ''5 плус 5 је '' 5 + 5'
        3:
            header: Одузимање
            text: Ако желите да одузимате, можете користити знак минус.
            code: '{print} ''5 минус 5 је '' 5 - 5'
        4:
            header: Множење
            text: Ако желите да множите, можете користити звездицу.
            code: '{print} ''5 пута 5 је '' 5 * 5'
        5:
            header: Дељење
            text: Можете користити косу црту за дељење.
            code: '{print} ''5 подељено од 5 је '' 5 / 5'
        6:
            header: Резиме
            text: У резимеу, можете користити +, -, * и / за математику.
            code: |-
                {print} '5 плус 5 је ' 5 + 5
                {print} '5 минус 5 је ' 5 - 5
                {print} '5 пута 5 је ' 5 * 5
                {print} '5 подељено од 5 је ' 5 / 5
        7:
            header: Симбол =
            text: |-
                Од сада можете такође користити симбол = уместо команде `{is}`.
                Ово важи и за бројеве и за речи, и такође важи након команди `{if}` или `{else}`.
            code: |-
                име = Хеди
                одговор = 20 + 4
        8:
            header: Израчунавања са променљивама
            text: 'Можете користити израчунавања са бројевима, али можете такође користити променљиве за израчунавања, овако:'
            code: |-
                number_1 = {ask} 'Унесите први број:'
                number_2 = {ask} 'Унесите други број:'
                correct_answer = number_1 * number_2
                {print} number_1 ' пута ' number_2 ' је ' correct_answer
        9:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {print} 'Ово је машина за карте за водени парк'
                {print} 'Ценовник: Деца испод 12 година $3, Одрасли $5'
                {print} 'Понедељком је попуст од 25%'
                amount_of_children = 'Колико дечијих карата желите?'
                amount_of_adults = 'Колико одраслих карата желите?'
                day_of_the_week = {ask} 'Који је дан?'
                {clear}
                child_price = amount of children * 3
                adult_price = amount_of_adults + 5
                total_price = adult_price * child_price
                {if} day {is} monday
                total_price = total_price * 0.25
                {print} 'То ће бити total_price молим вас'
            debug: 'Истина'
        10:
            header: Хајде да радимо!
            text: Уживајте у авантурама на нивоу 6!
    7:
        1:
            header: Добродошли на ниво 7
            text: На овом нивоу ћете научити како да понављате линију кода онолико пута колико желите.
        2:
            header: понови 3 пута
            text: |-
                Ако желите да поновите линију кода, можете користити код `{repeat}` 3 `{times}`.
                Ако желите да поновите линију више пута, једноставно промените број.

                На пример: Ако програмирате причу у којој ваш лик виче за помоћ 5 пута, то би могло изгледати овако:
            code: |-
                {print} 'Принц је наставио да зове у помоћ'
                {repeat} 5 {times} {print} 'Помоћ!'
                {print} 'Зашто ми нико не помаже?'
        3:
            header: Не заборавите команду за приказивање
            text: Када користите команду repeat, не заборавите команду `{print}`.
            code: '{repeat} 5 {times} ''Помоћ!'''
            debug: 'Истина'
        4:
            header: Поновите команду ask
            text: Можете такође поновити команду `{ask}`, `{if}` или `{else}` више пута.
            code: |-
                {repeat} 2 {times} answer = {ask} 'Да ли сте знали да можете поставити питање више пута?'
                {if} answer {is} yes {repeat} 2 {times} {print} 'Већ сте то знали!'
                {else} {repeat} 3 {times} {print} 'Научили сте нешто ново!'
        5:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {print} Заглавили сте на пустом острву.
                {repeat} 3 'Помоћ!'
                rescued = {ask} Да ли је неко дошао да вас спаси?
                {if} rescued yes {is}
                {print} Срећник!
                {else} {repeat} 3 {times} 'ПОМОЋ!'
                rescued = 'Шта сада?'
                {if} yes
                {print} 'Ура!
                {else} 'Штета... Па добро... време је да изградите склониште и пронађете храну.'
            debug: 'Истина'
        6:
            header: Припрема позор сад!
            text: Уживајте у авантурама на нивоу 7!
    8:
        1:
            header: Добродошли на ниво 8
            text: На овом нивоу ћете научити да користите увлачење да би команде `{repeat}`, `{if}` и `{else}` радиле за више линија кода.
        2:
            header: '{repeat} команде пре'
            text: |-
                На претходним нивоима, команда `{repeat}` изгледала је овако:

                Могли сте да поновите само једну линију кода.
            code: '{repeat} 5 {times} {print} ''Помоћ!'''
            debug: 'Истина'
        3:
            header: '{repeat} команде сада'
            text: |-
                На овом нивоу можете поновити више линија кода. Да бисте то урадили, морате рећи рачунару које линије припадају заједно и треба да се понове.
                То радите коришћењем увлачења.

                Користите 4 размака (или један таб) на почетку сваке линије коју желите да поновите, овако:
            code: |-
                {repeat} 5 {times}
                    {print} 'Здраво свима'
                    {print} 'Ово ће бити штампано 5 пута'
        4:
            header: '{repeat} команде сада'
            text: |-
                Ако желите, можете наставити након команде `{repeat}` без увлачења.
                Линије које не почињу са увлачењем неће бити поновљене.
            code: |-
                {repeat} 3 {times}
                    {print} 'Здраво!'
                {print} 'Завршили смо са понављањем!'
        5:
            header: if и else пре
            text: |-
                Исто важи и за команде `{if}` и `{else}`.
                Ово су биле команде пре:
            code: |-
                {if} name {is} Хеди {print} 'лепо'
                {else} {print} 'бу!'
            debug: 'Истина'
        6:
            header: if и else сада
            text: |-
                Ово су команде `{if}` и `{else}` сада.
                Свака линија након команди `{if}` и `{else}` почиње са увлачењем.
            code: |-
                name = {ask} 'Како се зовеш?'
                {if} name {is} Hedy
                    {print} 'Добродошла, Hedy'
                {else}
                    {print} 'Добродошао, програмеру!'
        7:
            header: заустављање увлачења
            text: Као и са командом `{repeat}`, можете престати да користите увлачење и линије ће увек бити приказане. Не само ако је изјава тачна.
            code: "name = {ask} 'Како се зовеш?'\n{if} name {is} Hedy\n    {print} 'Добродошла, Hedy'\n{else}\n    {print} 'Добродошао, програмеру!' \n{print} '3..2..1.. Почни са програмирањем!'"
        8:
            header: if изјаве унутар if изјава
            text: |-
                Можда сте помислили да покушате да ставите команду if унутар команде repeat, или унутар друге команде if.
                За сада, ово још није могуће. На вишим нивоима, биће дозвољено, али за сада се фокусирајмо на вежбање команди `{if}` `{else}` и `{repeat}` са правилним увлачењем.
        9:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {print} 'HedyWheels машина за аутобуске карте'
                zone_1 = Градска кућа, Библиотека, Кампус, Пијаца
                zone_2 = Базен, Скејт парк, Тржни центар, Аеродром
                destination = 'Где желите да идете?'
                {if} destination {in} zone 1
                {print} destination 'је у зони 1'
                price = 3 евра
                    {if} destination {is} zone_2
                {print} destination 'је у зони 2'
                price = 6
                ticket_types = {ask} 'Притисните 1 за карту за једнократну употребу.
                Притисните 2 за повратну карту:'
                {if} ticket_type = 1
                {print} 'Изабрали сте карту за једнократну употребу'
                {else}
                        {print} Изабрали сте повратну карту'
                price * 2
                {print} 'То ће бити ' price ' евра молим вас'
            debug: 'Истина'
        10:
            header: Хајде да проверимо авантуре!
            text: Уживајте у авантурама на нивоу 8!
    9:
        1:
            header: Добродошли на ниво 9
            text: |-
                На овом нивоу можете користити више линија кода након команде `{if}` или након команде `{repeat}`.

                Можете чак ставити команду `{repeat}` унутар друге команде `{repeat}`.
        2:
            header: Више линија након `{repeat}`
            text: Дозвољено вам је да комбинујете `{repeat}` и `{if}` на овом нивоу.
            code: |-
                {repeat} 3 {times}
                    food = {ask} 'Шта желиш?'
                    {if} food {is} пица
                        {print} 'лепо!'
                    {else}
                        {print} 'пица је боља'
        3:
            header: Увлачење је важно!
            text: Увлачење је веома важно да би се рачунару рекло које линије треба поновити, а које линије треба извршити само једном.
            code: |-
                {repeat} 3 {times}
                    {print} 'Ова линија ће бити поновљена...'
                    {print} 'И ова такође...'
                {print} 'али ова неће!'
        4:
            header: Више линија након `{if}`
            text: Можете такође користити више линија након `{if}`
            code: |-
                continue = {ask} 'Да ли желиш да наставиш?'
                {if} continue = yes
                    sure = {ask} 'Јеси ли сигуран?'
                    {if} sure {is} yes
                        {print} 'Наставићемо'
                    {else}
                        {print} 'Ниси сигуран'
                {else}
                    {print} 'Не желиш да наставиш'
        5:
            header: Увлачење је важно
            text: Поново, увлачење је и даље веома важно и може направити велику разлику у коду.
            code: |-
                continue = {ask} 'Да ли желиш да наставиш?'
                {if} continue = yes
                    sure = {ask} 'Јеси ли сигуран?'
                    {if} sure {is} yes
                        {print} 'Наставићемо'
                {else}
                    {print} 'Ниси сигуран'
        6:
            header: Један `{if}` унутар једног `{repeat}`
            text: |-
                Сада када можете користити више линија кода након ових команди, можете их такође ставити једну унутар друге.
                Погледајте:
            code: |-
                {repeat} 3 {times}
                    food = {ask} 'Шта желиш?'
                    {if} food {is} пица
                        {print} 'лепо!'
                    {else}
                        {print} 'пица је боља'
        7:
            header: Пази на увлачење
            text: Имајте на уму да четврта и шеста линија овог кода почињу са 8 размака увлачења.
            code: |-
                {repeat} 3 {times}
                    food = {ask} 'Шта желиш?'
                    {if} food {is} пица
                        {print} 'лепо!'
                    {else}
                        {print} 'пица је боља'
        8:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {print} 'Добродошли у HedyJumps, вашу авантуру са падобраном!'
                people = {ask} 'Са колико људи данас скачете?
                {print} 'Поставићемо вам свима нека питања из безбедносних разлога.'
                extra_instructions_people = a, b
                {repeat} 3 {times}
                    name = {ask} 'Како се зовеш?'
                jumped_before = 'Да ли си икада раније скакао са падобраном, ' name '?'
                {if} jumped_before  no
                {print} 'Без бриге, добићеш додатна безбедносна упутства у соби 13'
                {add} name {to} extra_instructions_people
                {else}
                {print} 'Забавно!'
                {print} 'Хвала вам што сте попунили безбедносна питања сви. Уживајте у скоку!'
            debug: 'Истина'
        9:
            header: Идемо!
            text: Уживајте у авантурама на нивоу 9!
    10:
        1:
            header: Добродошли на ниво 10
            text: 'На овом нивоу ћете научити нову команду: `{for}`.'
        2:
            header: Команда for
            text: Са for можете направити листу и користити све ставке на тој листи. `{for}` креира блок, као repeat и if, тако да све линије у блоку морају почети са увлачењем (4 размака).
            code: |-
                animals = пас, мачка, blobfish
                {for} animal {in} animals
                    {print} 'Волим ' animal
        3:
            header: Команда for
            text: 'Овде видите још један пример команде `{for}`:'
            code: |-
                days = Понедељак, Уторак, Среда, Четвртак, Петак, Субота, Недеља
                names = мама, тата, Ема, Софи
                {for} day {in} days
                    {print} names {at} {random} ' пере судове у ' day
        4:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код
            code: |-
                {print} 'Даме и господо!'
                {print} 'Само једну ноћ и само једну ноћ у циркусу Hedy!'
                acts = пуцање из топа, ходање по ужету, паковање у кофер,
                people = Ирис невероватна Ахмед невероватни Франсис фантастични
                    {for} people {in} acts
                chosen_person {is} people {random}
                    chosen_person ' ће ' act
                {add} chosen_person {from} people
                {print} 'Дођите и гледајте наш шоу вечерас!'
                {print} 'Карте су доступне само на шалтеру
            debug: 'Истина'
        5:
            header: Време је за програмирање!
            text: Уживајте у авантурама на нивоу 10!
    11:
        1:
            header: Добродошли на ниво 11
            text: |-
                На овом нивоу, додајемо нови облик команде `{for}`. На ранијим нивоима, користили смо for са листом, али можемо такође користити for са бројевима.

                На овај начин нам више не треба команда `{repeat}`.
        2:
            header: Команда for
            text: 'Овако изгледа нова команда for:'
            code: |-
                {for} counter {in} {range} 1 {to} 10
                    {print} counter
                {print} 'Спреман или не. Ево ме!'
        3:
            header: променљива i
            text: |-
                На претходном слајду променљива је названа 'counter', јер је одбројавала.
                Наравно, можете користити било које име за променљиву које желите.
                Стандардно име за променљиве у овој ситуацији које се користи у програмским језицима као што је Python је 'i'.
                То изгледа овако:
            code: "number = 10\n{for} i {in} {range} 1 {to} 10\n    {print} i * number"
        4:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                factor {is} {ask} 'Коју табелу множења вам треба?'
                {repeat} {for} numbers {in} {range} 1 {to} 10 {times}
                    {print} Ово је табела множења за factor
                    {print} number ' x ' factor ' = ' i * factor
            debug: 'Истина'
        5:
            header: Хајде да почнемо са програмирањем!
            text: Уживај у авантурама на нивоу 11!
    12:
        1:
            header: Добродошли на ниво 12
            text: |-
                Од овог нивоа вам је дозвољено да користите децималне бројеве и постоје неке промене у коришћењу наводника.
                Такође можете користити функције од овог нивоа!
        2:
            header: Наводници
            text: |-
                Овај ниво уводи неке промене у коришћење наводника.
                Од сада, **сви текстови** морају бити у наводницима. Ово укључује вредности променљивих, ставке на листама и текст након команди {if}.
            code: |-
                name = 'Hedy the Robot'
                {print} 'Здраво ' name
        3:
            header: Децимални бројеви
            text: |-
                Од овог нивоа вам је такође дозвољено да користите децималне бројеве. Ово може учинити програме као што је ваш ресторан још бољим!

                Бројеви не требају наводнике.
            code: |-
                {print} 'децимални бројеви сада морају користити тачку'
                {print} 2.5 + 2.5
        4:
            header: Функције!
            text: |-
                У овом нивоу ћете научити како да користите функције. Функција је блок кода који можете лако користити више пута. Користећи функције, помажемо себи да организујемо делове кода које можемо користити поново и поново. Да бисте креирали функцију, употребите `{define}` и дајте функцији име. Затим поставите све линије које желите у функцију у увучени блок испод `{define}` линије. Оставите једну празну линију у вашем коду да изгледа лепо и уредно. Одличан посао! Креирали сте функцију!

                Сада, када год нам буде потребан тај блок кода, само користимо `{call}` са именом функције да га позовемо! Не морамо поново да куцамо тај блок кода.
        5:
            header: Сјајна, сјајна мала звездо!
            text: |-
                У овом програму видите пример функције.
                Хајде да видимо шта се дешава if попуните остатак песме!
            code: |-
                {define} трепћи
                     {print} 'Трепћи'
                     {print} '...'

                {call} трепћи
                {print} 'Горе изнад света тако високо'
                {print} 'Као дијамант на небу'
                {call} трепћи
        6:
            header: Функције
            text: Као што сте могли видети у примеру, функција је блок кода који се може позвати у било ком тренутку. Користите `{define}` да поставите функцију и `{call}` да је користите.
        7:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {call} нови_члан
                {print} 'Здраво нови члане!'
                корисничко_име = {ask} 'Које је ваше корисничко име?'
                лозинка = 'Која је ваша лозинка?'
                {print} 'Добродошли у наш клуб!'

                корисничко_име = {ask} 'Молимо унесите ваше корисничко име. Да ли сте нови члан? Укуцајте Нови Члан'
                {if} корисничко_име = Нови Члан
                {call} нови члан
                    {else}
                        лозинка = {ask} 'Молимо унесите лозинку'
            debug: 'Истина'
        8:
            header: Спремни да пробате?
            text: Уживај у авантурама на нивоу 12!
    13:
        1:
            header: Добродошли на ниво 13
            text: |-
                Сада ћемо научити `{and}` и `{or}`! Ако желите да проверите две изјаве, не морате да користите два `{if}`-а, већ можете користити `{and}` и `{or}` уместо тога.
                Од сада ћете такође моћи да користите аргументе у вашим функцијама.
        2:
            header: Команда and
            text: |-
                Команда `{and}` се увек користи у комбинацији са командом {if}.
                На овај начин можете проверити if су 2 изјаве тачне. На пример:
            code: |-
                name = {ask} 'како се зовеш?'
                age = {ask} 'колико имаш година?'
                {if} name {is} 'Hedy' {and} age {is} 2
                    {print} 'Ти си права Hedy!'
        3:
            header: Команда or
            text: |-
                Команда `{or}` ради на исти начин као и команда `{and}`, али само 1 од две изјаве мора бити тачна.

                Хајде да видимо шта се дешава када замените `{and}` са `{or}`.
            code: |-
                name = {ask} 'како се зовеш?'
                {if} name {is} 'Hedy' {or} name {is} 'hedy'
                    {print} 'Добродошли!!'
        4:
            header: Функције са аргументима
            text: Сада када сте научили како да користите функције, научићете како да користите функцију са **аргументом**. Аргумент је променљива која се користи унутар функције. Не користи се ван функције.
        5:
            header: Пример
            text: |-
                У овом примеру видите како се аргумент 'place' користи у функцији.
                Покрените код и промените 'ocean' и 'sea' у нешто друго, и видите шта се дешава.
            code: |-
                {define} song {with} place
                    {print} 'Мој Бони је изнад ' place

                {call} song {with} 'океана'
                {call} song {with} 'мора'
                {call} song {with} 'океана'
        6:
            header: Пример са променљивом
            text: |-
                Можете такође комбиновати функције са питањем.

                Шта се дешава ако направите ове промене:
                ```
                {define} song {with} place
                    {print} 'My Bonnie is ' place

                answer {is} {ask} 'Where is my Bonnie?'
                {call} song {with} answer
                ```
            code: |-
                {define} song {with} place
                    {print} 'Мој Бони је изнад ' place

                {call} song {with} 'океана'
                {call} song {with} 'мора'
                {call} song {with} 'океана'
        7:
            header: Још више питања!
            text: |-
                Сада смо комбиновали још више питања са функцијом. Укуцајте овај код и видите шта се дешава.

                Обратите пажњу на то како променљиве и аргументи имају исто име. То је дозвољено.
                Да ли вас збуњује? Само користите различита имена, то је такође дозвољено.
                ```
                {define} song {with} name, place
                    {print} 'My ' name ' is over the ' place

                name {is} {ask} 'Who?'
                place {is} {ask} 'Where are they?'
                {call} song {with} name, place
                ```
            code: |-
                {define} song {with} place
                    {print} 'Мој Бони је изнад ' place

                {call} song {with} 'океана'
                {call} song {with} 'мора'
                {call} song {with} 'океана'
        8:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {define} срећа {with} име
                    {print} '🥳'
                {play} G
                {play} A
                {play} B
                {print} 'Журка, ' име
                {define} туга
                {print} '😞'
                {play} E
                {play} D
                {play} C
                {print} 'Надам се да ћеш се осећати боље, ' име

                име = {ask} 'Које је твоје' име '?'
                расположење = {ask} 'Да ли си срећан или тужан?'
                {if} расположење = срећан
                    {call} срећа {with} особа
                {else} расположење = тужан
                    {define} туга {to} име
            debug: 'Истина'
        9:
            header: Идемо!
            text: Уживај у авантурама на нивоу 13!
    14:
        1:
            header: Добродошли на ниво 14
            text: На овом нивоу ћете научити неке нове симболе који вам могу помоћи да побољшате своје програме, као што је >. Такође ћете научити да радите са повратним вредностима функције.
        2:
            header: Симболи
            text: |-
                Ово су нови симболи које можете користити:

                  > значи веће од...

                  >= значи веће или једнако...

                  < значи мање од...

                  <= значи мање или једнако...

                Можете их користити овако:
            code: |-
                age = {ask} 'Колико имаш година?'
                {if} age < 13
                    {print} 'Млађи си од мене!'
                {else}
                    {print} 'Старији си од мене!'
        3:
            header: Симболи
            text: |-
                Такође можете користити:

                == је исто као.

                != није

                == се користи у `{if}` изјавама.
            code: |-
                answer = {ask} 'Да ли желиш да научиш више?'
                {if} answer == 'да'
                    {print} 'Иди на следећу авантуру!'
                {if} answer != 'да'
                    {print} 'То је штета!'
        4:
            header: Повратна вредност
            text: На претходним нивоима сте научили да креирате функције и користите аргументе са њима. Још једна сјајна употреба функције је да јој дозволите да нешто израчуна за вас. Можете дати функцији прорачун и она ће вам дати одговор прорачуна. Овај одговор се зове **повратна вредност**.
        5:
            header: Повратна вредност
            text: На пример, у овом коду функција calculate_new_price ће израчунати нову цену било ког предмета. Она ће вам дати нову цену као повратну вредност.
            code: |-
                {define} calculate_new_price {with} amount, percentage
                    percentage = percentage / 100
                    discount_amount = amount * percentage
                    {return} amount - discount_amount

                old_price = {ask} 'Колико је на цени?'
                discount = {ask} 'Који проценат је попуст?'

                new_price = {call} calculate_new_price {with} old_price, discount
                {print} 'Нова цена је ' new_price ' долара'
        6:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                предмет = 'није купљен'
                {print} 'Желео бих да купим овај предмет'
                цена == {ask} 'Која је цена?'
                {if} цена мања или иста као 10
                    {print} 'То је одлична понуда!'
                    предмет = 'купљен'
                {if} цена је више од 10 {and} мање или исто као 20
                    {print} 'У реду'
                    предмет = 'купљен'
                {if} цена је више од 20 {and} мање од 50
                    {print} 'То је мало превише!'
                {if} цена је више или исто као 50
                    {print} 'Никако!'
                {if} предмет =! купљен
                    {print} 'Штета.. Нећу га купити'
                {else}
                    {print} 'Купићу га! Хвала!'
            debug: 'Истина'
        7:
            header: Хајде да радимо!
            text: Уживај у авантурама на нивоу 14!
    15:
        1:
            header: Добродошли на ниво 15
            text: На овом нивоу ћете научити о `{while}` петљи.
        2:
            text: |-
                Научићемо нову петљу, while петљу! Петља се наставља све док је изјава тачна. Зато не заборавите да промените вредност у петљи.

                У пример коду, настављамо док се не да тачан одговор. If тачан одговор никада није дат, петља се никада неће завршити!
            code: |-
                answer = 0
                {while} answer != 25
                    answer = {ask} 'Колико је 5 пута 5?'
                {print} 'Дат је тачан одговор'
            header: '{while}'
        3:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                бројеви = 1, 2

                {for} i {in} {range} 3 {to} 50
                    {add} x {to} бројеви
                    i = + 1

                случајни_број = бројеви {random}
                погађања = 10

                {while} погађање = 0
                    одговор = 'Погоди мој број:'
                    {if} одговор >= случајни_број
                        {print} 'ниже'
                        погађања = погађања -1
                    {if} одговор > случајни_број
                        {print} 'више!'
                        погађања = погађања
                    {else} одговор = случајни_број
                        {print} 'тачно'
                        погађања = 10
            debug: 'Истина'
        4:
            header: Хајде да пробамо!
            text: Уживај у авантурама на нивоу 15!
    16:
        1:
            header: Добродошли на ниво 16
            text: На овом нивоу ћете научити о [угластим заградама] и како да их користите.
        2:
            header: Угласте заграде
            text: Направићемо листе на Python начин, са угластим заградама око листа! Такође задржавамо наводнике око сваке ставке као што смо научили на претходним нивоима. Користимо угласте заграде да означимо место у листи. Команда at random се више не може користити.
            code: |-
                friends = ['Ахмед', 'Бен', 'Кајден']
                {print} friends[1] ' је први пријатељ на листи.'
                {print} friends[2] ' је други пријатељ на листи.'
                {print} friends[3] ' је трећи пријатељ на листи.'
                #сада ћемо упарити 2 листе користећи променљиву i
                lucky_numbers = [15, 18, 6]
                {for} i {in} {range} 1 {to} 3
                    {print} friends[i] 'срећан број је ' lucky_numbers[i]
        3:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {print} 'Тест пријатељства'
                {subjects} = ['песма', 'филм', 'храна', 'пиће']
                одговори_играч_1 = []
                одговори_играч_2 = []
                резултат = 100

                {for} i {in} {range} 1 {to} 4
                    одговор = {ask} 'која је твоја омиљена ' subjects[i]
                {add} одговор {to} одговори_играч_1

                {print} 'Играч 2, твој ред!'
                {for} i {in} {range} 0 {to} 4
                    одговор_играч_2 = {ask} 'која је омиљена ' subjects ' играча 1'
                    {add} одговор_играч_2 {in} одговори_играч_2
                    {if} одговори_играч_2[2] == одговори_играч_1[1]
                        {print} 'Тачно!'
                    {else}
                        {print} 'Погрешно!'
                    резултат = резултат - 25

                {print} 'Играч 2, освојио си ' резултат '%'

                {if} резултат = 100
                    {print} 'Ти си невероватан пријатељ'
                {if} резултат < 100 {or} резултат >= 50
                    {print} 'Могао би боље'
                {else} резултат < 50
                    {print} 'Да ли уопште познајеш ову особу?!'
            debug: 'Истина'
        4:
            text: Уживај у авантурама на нивоу 16!
            header: Хајде да пробамо!
    17:
        1:
            header: Добродошли на ниво 17
            text: На овом нивоу ћете научити како да користите двотачку и научићете команду elif.
        2:
            header: Двотачка
            text: 'Сада ћемо мало променити увлачење. Сваки пут када нам треба увлачење, потребна нам је : на линији пре увлачења.'
            code: |-
                prices = ['1 милион долара', 'јабучна пита', 'ништа']
                your_price = prices[{random}]
                {print} 'Освајаш ' your_price
                {if} your_price == '1 милион долара' :
                    {print} 'Да! Богат си!'
                {else}:
                    {print} 'Више среће следећи пут..'
        3:
            header: Иначе ако
            text: 'На овом нивоу можете такође користити нову команду: elif. elif је скраћеница за else if и потребна вам је када желите да направите 3 (или више!) опција. Погледајте!'
            code: |-
                prices = ['1 милион долара', 'јабучна пита', 'ништа']
                your_price = prices[{random}]
                {print} 'Освајаш ' your_price
                {if} your_price == '1 милион долара' :
                    {print} 'Да! Богат си!'
                {elif} your_price == 'јабучна пита' :
                    {print} 'Дивно, јабучна пита!'
                {else}:
                    {print} 'Више среће следећи пут..'
        4:
            header: Отклањање грешака
            text: Хајде да дебагујемо овај код!
            code: |-
                {define} питај_правац
                    правац = {ask} 'Куда желиш да идеш?'
                    {if} правац = 'назад'
                        {turn} 180
                    {else} правац == 'десно'
                        {turn} 90
                    {else} правац == 'лево'
                        {turn} 270
                        {forward} 100

                настави = 'да'

                {while} настави == 'да'
                    {print} питај_правац
                    {sleep}
                    настави = 'да ли желиш да црташ још?'
                    {sleep}
            debug: 'Истина'
        5:
            header: Хајде да пробамо!
            text: Уживај у авантурама на нивоу 17!
    18:
        1:
            header: Добродошли на ниво 18
            text: Честитамо! Достигли сте последњи ниво Хеди! Код који сте овде креирали можете копирати у праве Python окружења као што су replit или PyCharm, и можете наставити да учите тамо! Имајте на уму да Python може читати само команде на енглеском, па ако сте користили друге језике, сада ћете морати да пређете на енглески.
        2:
            header: Python начин
            text: |-
                Стигли смо до правог Python кода! То значи да од сада морамо користити заграде са print и range.

                Такође, if желите да испишете више од једне ставке, морате их одвојити зарезима.

                Последња промена коју ћемо морати да направимо да добијемо Python код је промена ask у input.

                Кликните на 'print' таб за све примере.
            editor: /hedy/18
        3:
            header: Последње авантуре!
            text: Уживајте у последњим авантурама на нивоу 18!
