title: Documentation de Hedy
home-sections:
-   title: La programmation textuelle simplifiée!
    text: |-
        Beaucoup d'écoles et d'enseignant·e·s autour du monde veulent enseigner à leurs élèves la programmation. Pour commencer, cela se fait souvent avec des outils ludiques, allant du robot Beebot à Scratch Junior ou Scratch. Après avoir utilisé de tels outils, les enfants désirent souvent passer à des langages de programmation textuels plus puissants, comme Python.

        Par contre, Python est difficile, car il n'est disponible qu'en anglais et demande aux enfants d'apprendre simultanément des concepts de programmation et une syntaxe complexes.
        Hedy est un moyen facile pour démarrer avec les langages de programmation textuels! Hedy est gratuit à utiliser, en source ouverte et différent des autres langages de programmation textuels, de trois façons.

        1. Hedy est multilingue, vous pouvez utiliser Hedy dans votre propre langue
        2. Hedy est progressif, de sorte que vous puissiez apprendre un seul concept et sa syntaxe à la fois
        3. Hedy est fait pour la salle de classe, permettant aux enseignants et enseignantes de personnaliser totalement l'expérience de leurs élèves
-   title: Programmation multilingue
    text: Alors que la plupart des langages de programmation textuels ont des mots clés en anglais, comme par exemple « for » ou « repeat », Hedy peut être utilisé dans n'importe quelle langue! Nous supportons actuellement 47 langues différentes, incluant le néerlandais, l'espagnol, l'arabe, le turc, le chinois et l'hindi. Si votre langue n'est pas disponible, vous pouvez toujours commencer une nouvelle traduction.
-   title: Apprentissage pas à pas
    text: Apprendre un langage de programmation peut être décourageant, car les apprenants doivent apprendre des concepts (par exemple, si-sinon ou les boucles) et la syntaxe (comme les guillemets ou les accolades) en même temps. Dans Hedy, les concepts sont introduits d'abord avec peu de syntaxe, puis affinés. Une méthode scientifiquement prouvée pour apprendre!
-   title: Conçu pour la salle de classe
    text: |-
        Hedy est adapté pour les enfants âgés de 10 ans et plus et conçu pour être utilisé en classe.
        Les enseignants peuvent utiliser nos plans de cours intégrés gratuitement, mais peuvent aussi concevoir leurs propres leçons et les sauvegarder dans leur espace utilisateur de Hedy.
-   title: Programmation en contexte
    text: Hedy montre la programmation de la façon la plus large possible, et peut être utilisé de nombreuses façons amusantes. Hedy permet la création d'histoires numériques et interactives, de dessins colorés qui peuvent être affichés à l'écran, mais aussi dessinés avec une table traçante ou brodé sur un T-shirt, et peut être utilisé pour créer des jeux ou des applications avec des boutons et des actions au clavier.
-   title: Est-ce que Hedy est gratuit?
    text: |-
        Oui! Hedy est en «source ouverte», ce qui signifie que tout le monde peut nous aider à rendre Hedy meilleur.
        Vous pouvez trouver notre code sur <a href="https://github.com/hedyorg/hedy" target="_blank">Github</a>.
        Si vous aimez Hedy et voulez contribuer, nous acceptons (et sommes vraiment reconnaissants des) <a href="https://github.com/sponsors/hedyorg" target="_blank">donations</a>!
-   title: Est-ce que je dois installer quelque chose?
    text: Non, Hedy fonctionne dans le navigateur, le programme que vous utilisez pour voir cette page. Probablement Firefox, Chrome ou Edge. Hedy fonctionne aussi sur les téléphones et les tablettes.
-   title: Ai-je besoins d'avoir une expérience en programmation pour enseigner avec Hedy?
    text: |-
        Non, ce n'est pas nécessaire. Tous les concepts sont expliqués dans les diapositives et dans l'interface pour les élèves.
        Si vous vous créez un compte enseignant gratuit, vous avez aussi accès au manuel de l'enseignant avec des informations sur comment enseigner et les erreurs fréquemment rencontrées par les élèves.
join-sections:
-   title: Soutenir Hedy
    text: '# Il y a trois façons de soutenir Hedy!'
-   title: Améliorer le langage
    text: |-
        La nature progressive et multilingue de Hedy crée de nombreux défis techniques intéressants. Trouvez ces problèmes sur <a href="https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage" target="_blank">Github</a>.
-   title: Traduire Hedy
    text: |-
        Vous n'êtes pas un développeur? Aucun problème! Un autre moyen de supporter Hedy est de [traduire les mots-clé, les messages d'erreur, les aventures et autre contenu](https://github.com/hedyorg/hedy/wiki/Hedy-Translation-Tutorial)

        Voici l'état actuel, aidez-nous à compléter une langue ou à en ajouter une nouvelle!
        <a href="https://hosted.weblate.org/engage/hedy/">
        <img src="https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg" alt="Translation status" /></a>
-   title: Aider les enseignants à démarrer
    text: |-
        Hedy est conçu pour aider les enseignants à fournir des leçons de programmation en classe. Nous avons des fonctionnalités spécifiques pour les enseignants telles que la possibilité de créer une classe, de la personnaliser et de voir comment vos élèves se débrouillent.

        Si vous aimez Hedy, vous pouvez contacter les écoles que vous connaissez pour aider les enseignants à démarrer! Nous pouvons vous aider à trouver des écoles ou des enseignants via <a href="https://discord.gg/8yY7dEme9r" target="_blank">Discord</a>.
learn-more-sections:
-   {}
-   title: Une plongée approfondie!
    text: 'Pour en savoir plus sur la philosophie et la conception de Hedy, regardez cette conférence donnée par Felienne lors de la conférence StrangeLoop en 2022:


        <iframe width="560" height="315" class="mx-auto mt-4" src="https://www.youtube.com/embed/fmF7HpU_-9k?wmode=opaque" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>'
-   title: Hedy dans les actualités
    text: |-
        Certains sites web et journaux ont écrit sur Hedy depuis notre lancement début 2020. Nous tenons une liste ici:
        * [Java Magazine 04.2023](images/Hedy_Javamagazine2023.pdf)
        * [Tech Optimism - A Solution to the IT Shortage (Néerlandais), August 2022](https://podcasts.apple.com/nl/podcast/techoptimisme-2-een-oplossing-voor-het-it-tekort/id1114136654?i=1000581523458)
        * [Codeweek Podcast, July 2022](https://codeweek.eu/podcast/26)
        * [Heise.de (allemand), Januari 2022](https://www.heise.de/news/Hedy-die-mitwachsende-Programmiersprache-6336264.html)
        * [Strumenta, November 2021](https://tomassetti.me/teaching-programming-with-hedy/)
        * [Vives (néerlandais), CodeWeek Special October 2021](images/Vives-174-Codeweek.pdf)
        * [CodeWeek.eu - Haunted House Challenge, September 2021](https://codeweek.eu/2021/challenges/haunted-house)
        * [Opensource.com, April 2021](https://opensource.com/article/21/4/hedy-teach-code)
        * [IO Magazine, April 2021](https://ict-research.nl/wordpress/wp-content/uploads/2021/04/IO-magazine-NR1-2021_web.pdf)
        * [Ingeniería De Software (espagnol), February 2021](https://ingenieriadesoftware.es/hedy-mejor-lenguaje-ensenar-programacion-ninos/)
        * [Hello World Magazine, February 2021](images/Hello_World_15_Hedy.pdf)
        * [Discoro, January 2021](https://discoro.wordpress.com/2021/01/09/hedy-gradually-learning-a-programming-language/)
        * [Felienne wins the Dutch award for ICT research for Hedy, January 2021](https://www.universiteitleiden.nl/en/news/2021/01/felienne-hermans-receives-dutch-prize-for-ict-research-2021)
        * [SlashDot, August 2020](https://news.slashdot.org/story/20/08/17/024248/scientist-proposes-a-new-programming-language-for-teaching-coding-and-python)
        * [GenBeta (espagnol), August 2020](https://www.genbeta.com/desarrollo/nuevo-lenguaje-para-ensenar-programacion-a-ninos-como-se-ensena-a-leer-escribir-forma-gradual-niveles)
        * [Développez, August 2020](https://programmation.developpez.com/actu/308095/Une-scientifique-propose-un-nouveau-langage-de-programmation-pour-enseigner-aux-enfants-le-codage-informatique-au-travers-d-une-approche-graduelle-implementee-en-Python-sur-13-paliers/)
        * [Vives (néerlandais), October 2020](images/artikel_vives.pdf) "Met Hedy stap voor stap leren programmeren"
        * [Leiden University, April 2020](https://www.universiteitleiden.nl/en/news/2020/03/looking-to-distract-the-kids-while-you-work-from-home-get-them-programming)
        * [Mare (néerlandais), April 2020](https://www.mareonline.nl/cultuur/computercode-voor-de-kids/)
        * [AG Connect (néerlandais), April 2020](https://www.agconnect.nl/artikel/stapsgewijs-python-leren-programmeren-met-nieuwe-taal-hedy)
start-sections:
-   title: Démarrer avec Hedy
    text: 'Bienvenue sur Hedy, nous sommes heureux de vous aider à démarrer avec Hedy.


        Notre [Manuel de l''enseignant](https://www.hedy.org/for-teachers/manual) offre un aperçu détaillé de toutes les fonctionnalités, mais cette page présente un bref aperçu pour que vous sachiez à quoi vous attendre avant de vous plonger.


        Quelques points importants à savoir:

        * Hedy est un outil conçu pour aider à gérer une classe d''enfants en programmation ! Vous pouvez créer vos propres classes, vos plans de cours et suivre les progrès des enfants.

        * Vous n''avez pas besoin de connaître beaucoup de programmation pour commencer, Hedy fonctionne étape par étape, également pour vous!

        * Vous pouvez utiliser Hedy dans votre langue maternelle car il a été traduit dans de nombreuses autres langues!

        * Chaque enfant peut programme! Hedy est particulièrement utile pour les enfants ayant des problèmes de vision car il peut lire le matériel à haute voix sans avoir besoin d''une souris.

        * Nous sommes là pour vous aider, vous pouvez nous trouver par exemple sur [Discord](https://discord.gg/8yY7dEme9r) ou vous pouvez [nous envoyer un courriel](hello@hedy.org).'
-   title: 'Ce que les enseignants disent à propos de Hedy'
    text: "Plusieurs enseignants du monde entier ont exprimé leur passion pour Hedy, comme certains nous l'ont partagé:\n\n*Incroyablement inspirant! Un excellent moyen de rendre la programmation beaucoup plus accessible pour soi-même, mais aussi pour les étudiants. Très amusant à utiliser et avec beaucoup de potentiel à utiliser avec les élèves. Je pense que c'est un outil très agréable! Je crois que c'est une excellente façon pour les enfants de commencer à apprendre la programmation. Python et le codage ont toujours été très excitants, car la barrière à l'apprentissage est très élevée. Maintenant, tout est un peu plus simple et il a été expliqué que cela peut en fait être très facile. J'ai apprécié de voir comment Hedy essaie de rendre la programmation aussi accessible que possible pour les utilisateurs!*\nPays-Bas : Enseignants en formation en mathématiques (école secondaire)\n\n*La programmation multilingue et simplement le concept graduel de programmation lui-même.* États-Unis : Collège, 6e-8e année\n\n*Multilingual programming and just the gradual programming concept itself.* US: middle school, 6th-8th grade\n\nLa nature graduelle de l'introduction à la programmation. Australie : École secondaire\n\n*Continue automatiquement.* Pays-Bas : 2 HAVO-VWO\n\n*À la fois l'explication en néerlandais (et le code en anglais), et la progression avec de plus en plus de possibilités.* Pays-Bas : Groupe de classes avancées\n\n*Mais Hedy et ses niveaux progressifs... quelle idée, je voulais vous remercier personnellement pour avoir créé cela. Je ne peux pas vous remercier assez. De plus, je n'ai jamais vu le niveau d'engagement et d'enthousiasme de mes élèves, comme j'ai pu le voir avec Hedy. Nous avons couvert jusqu'au niveau 5, et prévoyons de passer encore une semaine dessus en classe et en laboratoire, avant de commencer Python.* Pakistan\n\n*Le 'réalisme' de la programmation, cela ressemble à ce qu'elle est en réalité.* Pays-Bas : Groupe de classes avancées, de la 4e à la 8e\n\n*Activités étape par étape. Activités amusantes.* Pays-Bas : Tous niveaux, 2e année VWO/HAVO, 2e année VWO +, 3e année HAVO, 3e année VWO\n\n*J'aime vraiment beaucoup Hedy et c'est aussi bien organisé, ce qui le rend bien à utiliser à l'école primaire. L'approche progressive de Hedy fonctionne très bien. La brève explication au début de chaque niveau et les courts programmes d'exemples aident à donner aux enfants un aperçu rapide de ce qui est nouveau dans le niveau choisi. Les différentes tâches que les enfants peuvent choisir fonctionnent également très bien. Vous voyez les enfants choisir des tâches qui leur plaisent et ils se mettent ensuite au travail avec elles, à travers les niveaux. Hedy est très amusant pour les enfants qui sont doués en programmation et qui veulent goûter à un vrai langage de programmation. C'est une bonne préparation pour l'école secondaire comme plus d'éducation en TIC y est donnée.* Pays-Bas : École Montessori d'Oegstgeest\n\n*La structure est tellement bonne.* Pays-Bas : École secondaire inférieure HAVO-VWO\n\n*Je peux suivre le rythme de la classe.* Pays-Bas : Groupes 7 et 8\n\n![Felienne qui enseignent à des enfants](/images/teacherfeedback/Fkids1.JPG) *Felienne qui enseignent à des enfants*\n\n\n![Des enfants qui apprennent à propos d'Hedy](/images/teacherfeedback/Fkids2.JPG) *Des enfants qui apprennent à propos d'Hedy*"
teacher-guide:
-   title: Introduction
    key: introduction
    subsections:
    -   title: Qu'est-ce que Hedy?
        text: |-
            Hedy est un langage de programmation textuel, spécifiquement développé pour les (pré-)ados (10 à 15 ans).
            Contrairement aux langages de programmation pour les enfants, comme Scratch, Hedy n'utilise pas de blocs de code mais du code textuel.
            Ainsi, avec Hedy vous apprendrez à taper du code comme les vrais développeurs, mais en petites étapes avec des exercices amusants.
            De cette façon, Hedy peut fonctionner comme un tremplin vers de vrais langages de programmation comme Python d'une manière accessible et surtout amusante !
            Ici vous pouvez regarder une <a href="https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s" target="_blank">vidéo</a> sur le développement d'Hedy comme langage de programmation.
    -   title: Public cible
        text: |-
            Hedy a été développé en pensant aux élèves du primaire et du secondaire (âgés de 10 à 15 ans).
            Il est important que les élèves soient capables de bien lire. Nous recommandons de ne pas commencer avec Hedy avant que les élèves aient atteint au moins un niveau de lecture de niveau 5ème année.
            Les élèves (et les enseignants!) n'ont pas besoin d'expérience de programmation avant de commencer avec Hedy.
    -   title: Comment fonctionne Hedy?
        text: |-
            Hedy est séparé en plusieurs niveaux, chacun permettant d'apprendre de nouvelles commandes. Chaque niveau comprends une variété d'aventures pour pratiquer ces nouvelles commandes.
            En tant qu'enseignant, vous décidez des aventures qui sont disponibles pour vos élèves. Feront-ils un restaurant, une calculatrice ou une maison hantée, ce niveau-ci? À chaque niveau, les aventures sont classées par ordre de difficulté croissante, de la plus simple à la plus difficile.
            Vos élèves relèveront ainsi continuellement de nouveaux défis. Les aventures peuvent être effectuées par les élèves par eux-même, ou vous pouvez les effectuer en groupe devant la classe.

            Les aventures incluent du code d'exemple, pour que les enseignants moins habiles technologiquement puissent aussi utiliser Hedy!
            Bien sûr, Hedy est aussi pour les professeurs créatifs qui adorent créer leur propres aventures et plan d'études!

            Après avoir programmé toutes les aventures d'un certain niveau, vos élèves peuvent tester leurs connaissance dans un quiz.

            Vous pouvez suivre le progrès et le travail de vos étudiant depuis la page de classe.
    -   title: Appareils
        text: |-
            Hedy est basé sur le web, cela signifie qu'il peut fonctionner sur n'importe quel appareil avec un navigateur internet (Firefox, Google Chrome, Edge, etc), donc Hedi fonctionne avec les ordinateurs portables, les chromebooks, les tablettes et même les téléphones cellulaires.
            Il n'est pas nécessaire de télécharger quoi que ce soit avant de travailler avec Hedy, il faut juste aller sur le site web et c'est parti!
    -   title: La communauté Hedy
        text: |-
            Tous les enseignants Hedy, développeurs et autres fans sont les bienvenus sur notre <a href="https://discord.gg/8yY7dEme9r" target="_blank">serveur Discord</a>. C'est l'endroit idéal pour clavarder à propos de Hedy: nous avons des canaux où vous pouvez montrer vos projets géniaux et vos leçons, des canaux pour rapporter les problèmes et des canaux pour clavarder avec d'autres enseignants et l'équipe Hedy.
            <a href="https://www.youtube.com/watch?v=Lyz_Lnd-_aI" target="_blank">Ici</a> vous trouverez une vidéo expliquant comment rejoindre notre communauté sur Discord.
    -   title: Hedy et le RGPD
        text: |-
            Les organisations de l'Union européenne doivent se conformer au RGPD (Règlement général sur la protection des données) lors du traitement des données personnelles. Comme il s'agit d'une question complexe pour de nombreuses écoles, vous pouvez utiliser toutes les fonctionnalités de programmation de Hedy sans partager de données personnelles. 

            La manière la plus simple de le faire est d'utiliser Hedy sans créer de comptes pour l'enseignant et les élèves. Sans comptes, toutes les fonctionnalités sont disponibles, à l'exception de la personnalisation des niveaux, de l'enregistrement des programmes des élèves et de la visualisation de leurs progrès. Cela est limitant, mais certaines écoles utilisent Hedy de cette manière.

            Une deuxième option consiste pour un enseignant à créer un compte avec une adresse e-mail sans données personnelles, par exemple "enseignant25@email.com". Mis à part une adresse e-mail, qui est uniquement nécessaire pour réinitialiser votre mot de passe, vous n'avez pas besoin de partager d'autres informations lors de la création d'un compte enseignant.

            Avec un compte enseignant, vous pouvez créer des comptes anonymes pour les élèves, par exemple nuage-eleve1, nuage-eleve2, etc. (Voir 'Préparatifs pédagogiques' pour un manuel détaillé). De cette façon, vous pouvez utiliser toutes les fonctionnalités de Hedy, y compris l'enregistrement des progrès, sans partager de données personnelles vous concernant ou concernant vos élèves.

            Si ce qui précède n'est pas suffisant pour votre contexte, nous pouvons signer un accord de traitement pour le traitement de vos données personnelles.
-   title: Erreurs fréquemment commises
    key: erreurs_courantes
    intro: |-
        Vous pouvez apprendre de vos erreurs, surtout en codage !
        Il est inévitable de faire des erreurs, et c'est une excellente occasion d'apprendre, mais pour les enseignants, il peut être difficile de trouver la bonne solution à une erreur !
        D'autant plus que les codes deviennent de plus en plus longs au fil des niveaux. C'est pourquoi nous avons dressé une liste des erreurs fréquemment commises dans chaque niveau, ainsi que leurs solutions.
    levels:
    -   level: "1"
        sections:
        -   title: Les élèves oublient de taper les commandes
            example:
                error_text: Par exemple, ils tapent une phrase sans `{print}`.
                error_code: Hedy ne peut pas afficher ça.
                solution_text: Apprenez à vos élèves à toujours commencer une ligne par une commande.
                solution_code: "{print} Hedy peut imprimer ceci !"
        -   title: Les élèves utilisent des majuscules lorsqu'ils tapent des commandes
            example:
                error_text: Les commandes ne fonctionneront pas si elles sont en majuscules.
                error_code: |-
                    Demander Pourquoi mon code ne marche pas ?
                    Imprime Parce que j'utilise des commandes avec des majuscules.
                solution_text: Enlevez les majuscules.
                solution_code: |-
                    {ask} Pourquoi mon code marche-t-il ?
                    {print} Parce que j'ai enlevé les majuscules !
        -   title: Les élèves utilisent `{echo}` sans `{ask}`
            example:
                error_text: "`{echo}` est fait pour répéter une réponse après une commande `{ask}`. Sans `{ask}`, `{echo}` ne fera rien."
                error_code: "{echo} Ton nom est"
                solution_text: Ajoute une commande `{ask}` pour que cela fonctionne.
                solution_code: |-
                    {ask} Quel est votre nom ?
                    {echo} Ton nom est
        -   title: Les élèves veulent que le mot (la variable) répété par la commande `{echo}` se trouve au milieu d'une phrase
            example:
                error_text: Et ils ont raison ! C'est pourquoi ils apprendront à utiliser les variables au niveau suivant.
                error_code: |-
                    {ask} Quel est le langage de programmation le plus amusant ?
                    {echo} est le meilleur !
                solution_text: "Au niveau 1, nous devons nous en tenir à cela :"
                solution_code: |-
                    {ask} Quel est le langage de programmation le plus amusant ?
                    {echo} Le meilleur est...
        -   title: "Tortue : Les élèves laissent la tortue sortir de l'écran"
            example:
                error_text: Souvent, les élèves aiment essayer les grands nombres en utilisant la tortue, ce qui fait sortir la flèche de l'écran.
                error_code: |-
                    {forward} 300
                    {turn} 90
                solution_text: Dans l'exemple, les élèves ont tendance à penser que la commande "tourne" ne fonctionne pas. Bien qu'elle fonctionne, vous ne pouvez pas voir son effet en dehors de l'écran. Utilisez des nombres plus petits pour éviter cela.
                solution_code: |-
                    {forward} 100
                    {turn} 90
        -   title: "Tortue : Les élèves utilisent la commande \"recule\", mais elle n'existe pas"
            example:
                error_text: Recule n'est pas une commande.
                error_code: recule 100
                solution_text: "Pour faire reculer la tortue, il faut utiliser la commande avance et un nombre négatif. Par exemple :"
                solution_code: avance -100
    -   level: "2"
        sections:
        -   title: Les élèves font des fautes de frappe dans leurs commandes
            example:
                error_text: Hedy ne peut pas reconnaître une commande contenant une faute de frappe.
                error_code: afffiche Ne faites pas de fautes de frappe
                solution_text: Apprenez à vos élèves à lire les messages d'erreur. Ils pourront ainsi découvrir eux-mêmes ce qui n'a pas fonctionné.
                solution_code: affiche Ne fais pas de fautes de frappe
        -   title: Les élèves oublient que la commande "demande" a changé
            example:
                error_text: Dans ce niveau, les élèves apprennent ce que sont les variables. La commande demande nécessite également une variable, mais les élèves l'oublient.
                error_code: demande Qu'aimeriez-vous manger 
                solution_text: Dans ce niveau, tu dois dire à Hedy où enregistrer ta réponse pour qu'elle puisse être utilisée plus tard. C'est ce qu'on appelle une variable.
                solution_code: demande Qu'aimeriez-vous manger
        -   title: Les élèves essaient d'utiliser la commande `{echo}`
            example:
                error_text: Pour certains élèves, il peut être frustrant d'apprendre que la commande `{echo}` ne fonctionne plus. C'est pourquoi il est très important d'expliquer les avantages de l'utilisation des variables. Par exemple, vous pouvez utiliser plusieurs variables dans un code, et vous pouvez les placer où vous voulez dans une phrase !
                error_code: |-
                    réponse {is} {ask} Pourquoi {echo} ne fonctionne plus ?!
                    {echo}
                solution_text: Utilise plutôt une variable.
                solution_code: |-
                    réponse {is} {ask} Pourquoi {echo} ne fonctionne-t-il plus ?
                    {print} réponse
        -   title: Les élèves utilisent un nom de variable ou un mot normal
            example:
                error_text: Dans l'exemple ci-dessous, le mot "nom" est utilisé comme variable, mais aussi comme texte normal. Le résultat de ce code sera "Bonjour mon Hedy est Hedy".
                error_code: |-
                    nom est Hedy
                    affiche Bonjour mon nom est nom
                solution_text: N'utilise donc pas un mot que vous voulez utiliser dans le texte comme nom de variable. Au niveau 4, ce problème est résolu à l'aide de guillemets.
                solution_code: |-
                    nom est Hedy
                    affiche Bonjour, je suis nom
        -   title: Les élèves utilisent des noms de variables longs contenant deux mots.
            example:
                error_text: Une variable doit être nommée avec un seul mot. Vous pouvez utiliser un tiret bas pour relier deux mots. Cela compte pour un seul mot.
                error_code: porte choisie est demande Quelle porte choisissez-vous
                solution_text: Ajoute un tiret bas.
                solution_code: porte_choisie est demande Quelle porte choisissez-vous
        -   title: Les élèves peuvent utiliser deux noms différents pour la même variable
            example:
                error_text: Dans cet exemple, l'élève a utilisé "cheval" et "nom" pour les mêmes variables.
                error_code: |-
                    cheval est demande Quel est le nom de votre cheval
                    affiche Votre cheval est appelé nom
                solution_text: Vérifiez toujours si la variable porte le même nom dans tout le code. De légères différences peuvent être difficiles à repérer (par exemple les pluriels), mais elles interfèrent avec le code.
                solution_code: |-
                    nom est demande Quel est le nom de votre cheval
                    affiche Votre cheval s'appelle nom
    -   level: "3"
        sections:
        -   title: Les élèves essaient d'imprimer des listes en entier
            example:
                error_text: Une liste ne peut pas être imprimée. Vous ne pouvez imprimer qu'un seul élément de la liste, au hasard.
                error_code: |-
                    courses est pommes, lait, chocolat
                    affiche courses
                solution_text: Pour afficher une liste de toutes les courses, il suffit de les placer après une commande affiche. Sinon, vous pouvez utiliser la liste pour imprimer un article au hasard.
                solution_code: |-
                    {print} pommes, lait, chocolat

                    ou

                    courses {is} pommes, lait, chocolat
                    {affiche} épicerie {at} {random}
        -   title: Le élèves utilisent le nom de la variable ou d'une liste comme du texte normal
            example:
                error_text: Ce problème s'est probablement produit au niveau 2 également. Désormais, il peut également se produire avec les listes.
                error_code: |-
                    nom {is} Hedy
                    {print} Bonjour, mon nom est nom

                    ou

                    animal {is} rhinocéros, abeille, cygne
                    {affiche} Le meilleur animal est... animal {at} {random}
                solution_text: N'utilisez pas les noms de variables ou de listes dans du texte normal à imprimer. Au niveau 4, ce problème est résolu avec des guillemets.
                solution_code: |-
                    nom est Hedy
                    affiche Bonjour je suis nom

                    ou

                    animaux est rhinocéros, abeille, cygne
                    affiche Le meilleur animal est... animal au hasard
        -   title: Les élèves oublient `{at}` dans `{at}` `{random}`
            example:
                error_text: Comme dans l'exemple
                error_code: |-
                    oiseaux est moineau, mouette, corneille
                    affiche oiseaux hasard
                solution_text: Ce problème est résolu en ajoutant le mot `{at}`
                solution_code: |-
                    oiseaux {is} moineau, mouette, corneille
                    {print} oiseaux {at} {random}
        -   title: Les élèves oublient d'utiliser la commande `{print}` quand ils utilisent aussi la commande `{at}` `{random}`
            example:
                error_text: Ou alors ils vont parfois mettre `{at}` `{random}` au début d'une ligne.
                error_code: |-
                    fruit {is} pomme, cerise, banane
                    fruit {at} {random}
                solution_text: Insistez auprès de vos élèves sur le fait que vous avez toujours besoin de la commande `{print}` pour afficher un texte.
                solution_code: |-
                    fruit {is} pomme, cerise, banane
                    {print} fruit {at} {random}
        -   title: Les élèves oublient d'utiliser des virgules dans leurs listes
            example:
                error_text: Dans une liste, les éléments sont séparés par une virgule.
                error_code: |-
                    pizzas {is} champignons thon quatre saisons
                    {print} pizzas {at} {random}
                solution_text: Chaque élément de votre liste doit être suivi d'une virgule
                solution_code: |-
                    pizzas {is} champignons, thon, quatre saisons
                    {print} pizzas {at} {random}
        -   title: Les élèves essaient d'utiliser `{at}` `{random}` avec autre chose qu'une liste
            example:
                error_text: Par exemple
                error_code: |-
                    clubs {is} Machester United
                    {print} clubs {at} {random}
                solution_text: Hedy ne peut pas afficher quelque chose au hasard, parce qu'il n'y a pas de liste à partir de laquelle choisir.
                solution_code: |-
                    clubs {is} Manchester United, Bayrn Munchen, FC Barcelona
                    {print} clubs {at} {random}
        -   title: Les élèves essaient d'utiliser les fonctions ajouter/supprimer sans liste
            example:
                error_text: Dans l'exemple ci-dessous, "noms" n'est pas une liste, mais une variable. Vous ne pouvez rien y ajouter.
                error_code: |-
                    noms {is} Jacques
                    ton_nom {is} {ask} Qui es-tu ?
                    {add} ton_nom {to} noms
                    {print} noms {at} {random}
                solution_text: Il faut d'abord qu'il y ait une liste, donc vous devez ajouter un deuxième nom pour transformer les noms en liste, par exemple Amy. Si vous ne voulez pas d'Amy dans votre liste, vous pouvez utiliser remove pour la supprimer ensuite.
                solution_code: |-
                    noms {is} Jacques, Amy
                    ton_nom {is} {ask} Qui es-tu ?
                    {add} ton_nom {to} noms
                    {print} noms {at} {random}
        -   title: Les élèves oublient d'utiliser `{to}`/`{from}` dans `{add}`/`{remove}`
            example:
                error_text: Sans `{to}`/`{from}`, la commande `{add}`/`{remove}` ne marchera pas.
                error_code: |-
                    aventures {is} histoire, perroquet, dé
                    choix {is} Quelle aventure tu préfères?
                    {add} choix
                    {remove} dé
                    {print} J'aime aventures {at} {random}
                solution_text: Hedy doit savoir à quelle liste l'élément doit être ajouté/supprimé.
                solution_code: |-
                    aventures {is} histoire, perroquet, dé
                    choix {is} Quelle aventure préférez-vous ?
                    {add} choix {to} aventures
                    {remove} dé {from} aventures
                    {print} J'aime aventures {at} {random}
    -   level: "4"
        sections:
        -   title: Les élèves oublient d'utiliser les guillemets des deux côtés du texte
            example:
                error_text: Dans ce niveau, il affiche et demande ont besoin de guillemets. Un avant le texte et un après.
                error_code: |-
                    affiche Hello
                    humeur demande  Comment vas-tu ?
                solution_text: Ajoute correctement les guillemets.
                solution_code: |-
                    affiche  Hello
                    humeur est demande  Comment vas-tu?
        -   title: Les élèves utilisent les mauvais guillemets
            example:
                error_text: Il est important de commencer votre cours en vérifiant si les étudiants savent comment taper un guillemet correctement. Sinon, ils pourraient utiliser les "doubles guillemets" ou les guillemets inversés ` .
                error_code: |-
                    {print} `Bienvenue au restaurant`
                    nourriture {is} demande  Que voulez-vous commander?
                solution_text: "Ce sont les guillemets corrects :"
                solution_code: |-
                    affiche  Bienvenue au restaurant
                    nourriture est demande  Que voulez-vous commander ?
        -   title: Les élèves utilisent une apostrophe dans leur texte
            example:
                error_text: A partir de ce niveau, les apostrophes ne sont plus autorisées. Elles sont souvent utilisées en français pour signifier l'élision de voyelles comme dans l'entrée, par exemple.
                error_code: affiche  Vous n êtes pas autorisé à entrer ceci
                solution_text: Vous pouvez choisir d'utiliser la mauvaise grammaire et d'omettre l'apostrophe. Vous pouvez aussi utiliser le ` comme apostrophe.
                solution_code: |-
                    {print} 'T'es autorisé à entrer ceci'
                    print 'Et t`es capable de faire ceci'
    -   level: "5"
        sections:
        -   title: Les élèves oublient d'utiliser `{print}` dans une commande `{if}`
            example:
                error_text: Après avoir utilisé `{if}`ou `{else}`, les élèves oublient d'utiliser une deuxième commande comme `{print}` ou `{ask}`.
                error_code: |-
                    si nom est Hedy  Super!
                    sinon  Hedy est mieux!
                solution_text: Add the print command to fix it.
                solution_code: |-
                    {if} name {is} Hedy {print} 'Great!'
                    {else} {print} 'Hedy is better!'
        -   title: Students might use two different names for the same variable
            example:
                error_text: In this example the student has used 'horse' and 'name' for the same variables.
                error_code: |-
                    horse {is} {ask} 'What is your horse called?'
                    {if} name {is} Bonfire {print} 'cool'
                    {else} {print} 'less cool!'
                solution_text: Always check wheter the variable has the same name throughout the code. Slight differences can be hard to spot (for example plurals) but they will interfere with the code.
                solution_code: |-
                    horse {is} {ask} 'What is your horse called'
                    {if} horse {is} Bonfire {print} 'cool!'
                    {else} {print} 'less cool!'
        -   title: Les élèves oublient encore les guillemets des deux côtés
        -   title: Les élèves utilisent des guillemets autour des noms de variables
        -   title: Les élèves utilisent des noms de variable longs contenant 2 mots
