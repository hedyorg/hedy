title: Documentation de Hedy
home-sections:
-   title: La programmation textuelle facilement !
    text: |-
        Beaucoup d'écoles et d'enseignant·e·s dans le monde veulent enseigner à leurs élèves la programmation. Pour commencer, cela se fait souvent avec des outils ludiques, allant de Beebot robot à Scratch Junior ou Scratch. Après avoir utilisé de tels outils, les enfants désirent souvent passer à quelque chose de plus puissant, un langage de programmation textuelle, comme Python.

        Par contre, Python est difficile, car il n'est disponible qu'en anglais, et demande aux enfants à apprendre d'un coup des concepts de programmation et une syntaxe complexes.
        Hedy est un moyen facile pour démarrer avec les langages de programmation textuelle ! Hedy est gratuit, open source, et différent d'autres langages de programmation textuelle, de trois façons.

        1. Hedy est multilingue, vous pouvez utiliser Hedy dans votre propre langue
        2. Hedy est progressif, de sorte que vous puissiez apprendre un seul concept et sa syntaxe à la fois
        3. Hedy est fait pour la salle de classe, permettant aux enseignants et enseignantes de personnaliser totalement l'expérience de leurs élèves
-   title: Programmation multilingue
    text: Alors que la plupart des langages de programmation textuelle ont des mots clés en anglais, comme par exemple « for » ou « repeat », Hedy peut être utilisé dans n'importe quelle langue ! Nous supportons actuellement 47 langues différentes, comme le néerlandais, l'espagnol, l'arabe, le turc, le chinois et l'hindi. Si votre langue n'est pas disponible, vous pouvez toujours commencer une nouvelle traduction.
-   title: Apprendre pas à pas
    text: Apprendre un langage de programmation peut être décourageant, car les apprenants doivent apprendre des concepts (par exemple, si-sinon ou les boucles) et la syntaxe (comme les guillemets ou les accolades) en même temps. Dans Hedy, les concepts sont introduits d'abord avec peu de syntaxe, puis affinés. Une façon scientifiquement prouvée d'apprendre !
-   title: Fait pour la salle de classe
    text: |-
        Hedy est adapté pour les enfants âgés de 10 ans et plus, conçu pour être utilisé en salle de classe.
        Les enseignants peuvent utiliser nos plans de cours intégrés gratuitement, mais peuvent aussi concevoir leur propre cours et les sauvegarder dans leur espace utilisateur de Hedy.
-   title: Programmation en contexte
    text: Hedy montre la programmation de la façon la plus large possible, et peut être utilisé de nombreuses façons amusantes. Hedy permet la création d'histoire numérique et interactive, de dessins colorés qui peuvent être affichés à l'écran, mais aussi dessinés avec une table traçante ou brodé sur un T-shirt, et peut être utilisé pour créer des jeux ou applications avec des boutons et des actions au clavier.
-   title: Est-ce que Hedy est gratuit ?
    text: |-
        Oui ! Hedy est « Open source », ce qui signifie que tout le monde peut nous aider à rendre Hedy meilleur.
        Vous pouvez trouver notre code sur <a href="https://github.com/hedyorg/hedy" target="_blank">Github</a>.
        Si vous aimez Hedy et voulez contribuer, nous acceptons (et sommes vraiment reconnaissants des) <a href="https://github.com/sponsors/hedyorg" target="_blank">donations</a> !
-   title: Est-ce qu'il faut installer quelque chose ?
    text: Non, Hedy fonctionne dans le navigateur, le programme que vous utilisez pour voir cette page. Probablement Firefox, Chrome ou Edge. Hedy fonctionne aussi sur téléphones et tablettes.
-   title: Ai-je besoins d'avoir une expérience en programmation pour enseigner avec Hedy ?
    text: |-
        Non, ce n'est pas nécessaire. Tous les concepts sont expliqués dans les diapositives et dans l'interface pour les élèves.
        Si vous vous créez un compte enseignant gratuit, vous aurez aussi accès aux manuels des enseignants avec des informations sur comment enseigner et les erreurs fréquemment rencontrées par les élèves.
join-sections:
-   {}
-   title: Ameliorer le language
-   title: Traduire Hedy
    text: |-
        Vous n'êtes pas developpeur? Aucun problème! Un autre moyen de supporter Hedy est [traduire les mot-clé, messages d'erreur, les aventures et autre contenu](https://github.com/hedyorg/hedy/wiki/Hedy-Translation-Tutorial)

        Ceci est le status actuel, aidez nous a compléter un language, ou à ajouter un nouveau!
        <a href="https://hosted.weblate.org/engage/hedy/">
        <img src="https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg" alt="Translation status" /></a>
-   title: Aider les professeurs à commencer
    text: |-
        Hedy a été crée pour apporter un support pour les enseignants voulant offrir des leçons de programmations durant leurs cours . Nous avons des options spécifiques pour les enseignants , comme l'option pour créer des classes, customisez les et observez la progression de vos élèves .
        Si vous aimez Hedy , Vous pouvez en parler aux écoles que vous connaissez pour aider les enseignants! Nous pouvons vous aider à trouver des écoles ou des enseignants via [Discord](https://discord.gg/8yY7dEme9r).
learn-more-sections:
-   {}
-   {}
-   {}
start-sections:
-   title: Commencez avec Hedy
    text: "*Quelque chose a propos des comptes Enseignants, présentation etc*"
-   title: "Ce que les enseignants dises :"
teacher-guide:
-   title: Introduction
    key: intro
    subsections:
    -   title: Qu'est-ce que Hedy ?
        text: |-
            Hedy est un langage de programmation textuel, spécifiquement développé pour les (pré-)ados (10 à 15 ans).
            Contrairement aux langages de programmation pour les enfants, comme Scratch, Hedy n'utilise pas de blocs de code.
            Ainsi, avec Hedy vous apprendrez à taper du code comme les vrais programmeurs, mais en petites étapes avec des exercices ludiques.
            De cette façon, Hedy peut fonctionner comme un tremplin vers de vrais langages de programmation comme Python d'une manière accessible et surtout amusante !
            Ici vous pouvez regarder une <a href="https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s" target="_blank">vidéo</a> sur le développement d'Hedy comme langage de programmation.
    -   title: Audience cible
        text: |-
            Hedy a été développée en pensant aux élèves du collège et du lycée (âgés de 10 à 15 ans).
            Il est important que les élèves soient capables de bien lire. Nous recommandons de ne pas commencer avec Hedy avant que les élèves aient atteint au moins un niveau de lecture de niveau 6ème.
            Les élèves (et les professeurs !) n'ont pas besoin d'expérience de programmation avant de commencer avec Hedy.
    -   title: Comment fonctionne Hedy ?
        text: |-
            Hedy est séparé en plusieurs niveaux, chacun permettant d'apprendre de nouvelles commandes. Chaque niveau comprends une variété d'aventures pour pratiquer ces nouvelles commandes.
            En tant que professeur, vous décidez des aventures disponibles à vos élèves. Feront-ils un restaurant, une calculatrice ou une maison hantée, ce niveau-ci ? À chaque niveau, les aventures sont classé par ordre de difficulté croissante, de la plus simple à la plus difficile.
            Vos élèves ont relèveront ainsi continuellement de nouveaux défis. Les aventures peuvent être effectuées par les élèves par eux-même, ou vous pouvez les effectuer en groupe devant la classe.

            Les aventures incluent du code exemple, pour que les professeurs moins technologiquement habiles puissent aussi tiliser Hedy !
            Bien sûr, Hedy est aussi pour les professeurs créatifs qui adorent créer leur propres aventures et plan d'études !

            Après avoir programmé toutes les aventures d'un certain niveau, vos élèves peuvent tester leurs connaissance dans un quiz.
            Vous pouvez suivre le progrès et le travail de vos étudiant depuis la page Classe.
    -   title: Dispositifs
        text: |-
            Hedy est basé sur le web, cela signifie qu'il peut fonctionner sur n'importe quel ordinateur avec un navigateur internet (Firefox, Google Chrome, Edge, etc) donc Hedi fonctionne avec les ordinateurs portables, les chromebooks, les tablettes et même les smartphones.
            Il n'y a pas besoin de télécharger quoi que ce soit pour faire marcher Hedy, il faut juste aller sur le site web et c'est parti !
    -   title: La communauté Hedy
        text: |-
            Tous les enseignants Hedy, programmeurs et autres fans sont les bienvenus sur notre <a href="https://discord.gg/8yY7dEme9r" target="_blank">server Discord</a>. C'est l'endroit idéal pour chatter à propos de Hedy : nous avons des channels où vous pouvez montrer vos projets cools et vos leçons, des channels pour remonter les bugs et des channels pour chatter avec d'autres enseignants et l'équipe Hedy.
            <a href="https://www.youtube.com/watch?v=Lyz_Lnd-_aI" target="_blank">Ici</a> vous trouverez une vidéo expliquant comment rejoindre notre communauté sur Discord.
-   title: Préparatifs
    key: préparations
    subsections:
    -   {}
    -   title: Réglage de la langue
        text: |-
            En tant qu'enseignant, vous pouvez créer une classe pour tes élèves. Dans cette classe, vous pouvez voir les comptes des élèves et leurs programmes et vous pouvez suivre leurs progrès.
            Cette <a href="https://www.youtube.com/watch?v=Y3RTIWftJQg" target="_blank">vidéo</a> vous montre comment créer une classe rapidement dans Hedy.
    -   {}
    -   {}
    -   title: Personnaliser ta classe
        text: |-
            Vous pouvez aussi personnaliser votre classe et choisir quelles aventures y sont disponibles. Comme ça, les élèves ne seront pas submergés par la quantité d'aventures et de niveaux, et peuvent se concentrer sur les aventures avec lesquelles vous souhaitez qu'ils s'entrainent.

            **Select and order adventures**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/df38cbb2-468e-4317-ac67-92eaf4212adc" width="1000">
            In this section you can select and order adventures. The pink tabs are adventures with new commands. The gray tabs are regular adventures. To rearrange the order of the adventures, you can drag the tabs. However, we do advise you to use the regular order of adventures as the Hedy team made sure the adventures go from easiest to hardest.
            If you want to remove an adventure for your students, simply click the cross on the adventure's tab.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/0ddd10b5-ef60-4480-a0c4-fc9a0f323baa" width="300">
            If you want to add adventures, for instance your own adventure or an adventure you accidentally removed, use this menu to add the adventure to your students' adventures. Simply click the adventure you want to add and it (re)appears in the line of adventures. To undo all your changes to the adventures, click 'Reset'.

            **Opening dates**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/4e59acfa-4772-429f-8328-babb43c942d5" width="300">
            With this feature you can set opening dates for the levels. This way you can make a lesson plan before your course begins and not worry about opening new levels each week. In the image above the first level is opened directly, the second will open the 23th of september, and the 3rd level the week after. The other levels are closed.
            Don't want to set opening dates? No problem, just leave this section blank.

            **Unlock level thresholds**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/99a34dab-f112-459e-bfd1-07618be4715a" width = "1000">
            This featue allows you to set a threshold for your students' quiz grade, before they can continue to the next level. For example, if you enter "80" your students have to score at least 80% on the quiz before they are allowed to go to the next level. If they haven't met the threshold, they are not allowed to continue and have to retake the quiz.
            Don't want to use the threshold? No worries, just keep this section blank.


            **Other settings**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/a8491d67-6d6e-42a7-b672-fd3d083a76f8"/>
            There are some other setting that could be usefu to you aswell. Our first extra setting is 'Mandatory developer's mode'. In developers mode the students only see their input and output screens and the run button. The adventures are hidden and there are no cheatsheets available. This might come in handy in a test situation.
            If this option is not selected the developer's mode is available for students too as a voluntary option.

            If you want all your students to be visible in de class highscore, you can select the second option.
            With all the other options you can choose to hide some functions or content for your students, this might help them focus more.

            **Save**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/df179df3-3073-4d15-bba6-62e58fb675be" width="300">
            Don't forget to save your changes when you're done customizing your class.
    -   title: Sauvegarde des programmes
        text: |-
            Il y a 2 manières de permettre aux élèves de rejoindre ta classe : vous pouvez créer des comptes pour eux, ou les laisser créer leurs comptes.

            **Pour créer les comptes pour les élèves**
            La manière la plus facile d'ajouter des élèves dans votre classe, est de créer les comptes pour eux. Pour ce faire, cliquez sur le bouton « Créer un compte » et remplissez les champs nom d'utilisateur et mot de passe pour eux.
            Les élèves peuvent alors se connecter avec les noms d'utilisateur et mots de passe que vous avez choisi. Par la suite, ils peuvent changer leurs noms d'utilisateur et mots de passe s'ils le souhaitent, tout en restant dans votre classe.
            Cette <a href="https://www.youtube.com/watch?v=eEQvik-Ce5M" target="_blank">vidéo</a> montre le moyen le plus facile et plus rapide d'ajouter des élèves dans votre classe.

            **Les élèves créent leurs comptes**
            Les élèves peuvent aussi aller sur le site Web de Hedy et créer un compte personnel, comme vous l'avez fait pour eux. Pour les ajouter dans votr classe, clique simplement sur le lien d'invitation.
            Vous pouvez aussi ajouter des élèves manuellement en cliquant sur le bouton « Inviter par nom d'utilisateur ».
    -   title: Définir le langage préféré
        text: |-
            Lorsque les élèves créent des profils, ils doivent choisir une « langue préférée ». Hedy sera toujours chargé dans la langue sélectionnée.
            Il est possible de changer cette langue ultérieurement en accédant à nouveau à « Mon compte » et « Mes paramètres personnels ».

            **Pour les non-anglophones**
            Non seulement vous pouvez changer la langue des aventures dans votre propre langue, mais vous pouvez également choisir dans quelle langue les mots-clés (par exemple, 'print' ou 'ask') doivent être affichés.
            De cette façon, vous pouvez enseigner à vos élèves à programmer avec des mots-clés en anglais, mais vous pouvez également les laisser programmer dans leur propre langue. Par exemple, les étudiants néerlandais peuvent utiliser la commande 'vraag' au lieu de 'ask'.
            If a student wants to switch languages, they can click the keyword switcher. It will switch the keywords from English to the preferred language and back.
            Fun fact! Students are allowed program in both English and their own language at the same time! So, if they have trouble remembering some keywords in English, but easily remember other ones they can use both at the same time.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/0b3122e6-ff22-43d7-b8b6-62f47f485293" width="100">
            If a student wants to switch languages, they can click the keyword switcher. It will switch the keywords from English to the preferred language and back.
            Fun fact! Students are allowed program in both English and their own language at the same time! So, if they have trouble remembering some keywords in English, but easily remember other ones they can use both at the same time.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/0b3122e6-ff22-43d7-b8b6-62f47f485293" width="100">

            **Vidéo**
            Cette <a href="https://www.youtube.com/watch?v=QrVZETj4oLM" target="_blank">vidéo</a> vous montre comment définir une langue préférée et changer les mots-clés dans votre langue préférée également.
    -   title: Enregistrement des programmes
        text: |-
            Lorsque vous êtes connecté, vous verrez Mes programmes à côté de votre icône de profil.
            Cette option existe également pour vos élèves. Dans Mes programmes, vous pouvez trouver tous les programmes sur lesquels vous avez travaillé.
            Par défaut, les programmes seront enregistrés dans « Mes programmes » lorsque vous exécutez le code, et ce toutes les 10 secondes, sous leur nom par défaut
            et leur niveau (par exemple : Histoire 5). Si vous souhaitez enregistrer un programme sous un nouveau nom, il vous suffit de taper le nouveau nom dans la barre de nom.
            Actuellement, un seul programme peut être enregistré par niveau, par onglet.

            Vous (et vos élèves) pouvez également partager des programmes en utilisant le bouton de partage à côté des noms des programmes.
            Ces programmes seront publiés sur notre page de <a href="https://hedy.org/explore" target="_blank">découverte</a>, pour que tout le monde puisse les voir et les utiliser.
            Si vous souhaitez annuler le partage de votre programme, allez dans « Mes programmes » et cliquez sur « Annuler le partage ».

            L'icône de l'avion en papier peut être utilisée pour remettre des programmes à l'enseignant d'une classe. Les programmes qui ont été remis ne pourront plus être modifiés.
-   title: L'enseignement avec Hedy
    key: enseigner
    subsections:
    -   title: L'enseignement avec Hedy
        text: |-
            Hedy contient beaucoup de niveaux différents qui enseignent chacun une nouvelle compétence. Nous recommandons d'enseigner un niveau par leçon.
            Cela donne à vos élèves le temps de saisir pleinement une nouvelle commande ou un nouveau concept et de s'exercer avec lui, avant de passer au niveau suivant.
            Nous utilisons cette structure dans nos leçons :
    -   {}
    -   title: Introduction
        text: |-
            Vous pouvez commencer vos leçons en activant les connaissances préalables de vos élèves : Que savent-ils déjà sur le sujet, qu'ont-ils appris dans la leçon précédente et quelles erreurs ont-ils commises dont ils ont maintenant tiré les leçons ?
            De cette façon, toutes les commandes apprises précédemment et les erreurs fréquemment commises sont fraîches dans la mémoire de vos élèves, lorsque vous commencez à présenter la nouvelle leçon.
    -   title: Introduction de nouveaux concepts et de nouvelles commandes
        text: |-
            Les nouveaux concepts et commandes peuvent être très difficiles à comprendre pour certains élèves.
            C'est pourquoi il est important de montrer aux élèves comment utiliser correctement les nouvelles commandes.
            Surtout aux niveaux inférieurs, où certains élèves n'ont aucune expérience en programmation, il peut leur être difficile de comprendre les nouveaux concepts abstraits.
            Présenter de nombreux exemples rend un concept abstrait (par exemple : "Qu'est-ce qu'une variable ?") plus reconnaissable et plus facile à comprendre ("Regardez, la variable animal a changé en chien").
    -   title: Commençons le travail
        text: |-
            Chaque niveau contient différentes aventures que vous pouvez trouver dans les onglets roses. Le premier onglet rose explique les nouvelles commandes de ce niveau.
            Les onglets suivants sont des aventures que les élèves peuvent essayer et créer eux-mêmes.
            Les aventures sont classées du plus facile au plus difficile, nous vous recommandons donc de commencer par la gauche et de vous diriger vers la droite.
            Le dernier onglet "What's next" donne une petite idée de ce que vous apprendrez dans le niveau suivant. Bien entendu, vous pouvez sélectionner les aventures que vous voulez faire faire à vos élèves pour chaque niveau.
            Ils ne sont pas obligés de faire toutes les aventures. Chaque aventure contient un exemple de code, que les élèves peuvent essayer à l'aide du bouton vert.
            Le code d'exemple est copié dans le champ de travail, où les élèves peuvent essayer le code et l'adapter pour se l'approprié.
            Encouragez vos élèves à transformer les codes d'exemple en leurs propres projets en ajoutant leurs propres idées et en créant leur propre variation de l'aventure.
    -   title: Quiz et puzzles
        text: |-
            Pour vérifier que vos élèves ont assimilé toutes les nouvelles informations dans un niveau, vous pouvez les inviter à répondre au quiz.
            Le quiz comporte 10 questions portant sur les nouveaux concepts et commandes de ce niveau.
            Tous les niveaux n’ont pas encore de quiz, nous sommes encore en train de les construire.
            Certains niveaux comportent également des puzzles. Les puzzles montrent aux étudiants quelques lignes de code que les élèves doivent place dans le bon ordre.

            Cette <a href="https://www.youtube.com/watch?v=lNh5EdZVUwc" target="_blank">vidéo</a> présente les quiz et les puzzles..
    -   title: Évaluation
        text: |-
            Terminez votre leçon par une brève évaluation. Qu'ont appris les élèves ? Quelles difficultés ont-ils rencontrées ?
            Comment ont-ils appris de leurs erreurs ? Et bien sûr, qu'ont-ils créé ? Qu'ont-ils créé ?
            Les élèves sont souvent très fiers de leurs propres créations. Il est donc intéressant de prendre le temps de donner à vos élèves la possibilité de montrer leur travail à leurs camarades de classe.
-   {}
-   title: Caractéristiques supplémentaires de Hedy
    key: caractéristiques
    subsections:
    -   title: Créez votre propre aventure
        text: Les enseignants peuvent également créer leur propre aventure. [Cette vidéo] (https://www.youtube.com/watch?v=A0zbXpxX4q4) vous montre comment créer votre propre aventure en tant qu'enseignant et l'ajouter à votre (vos) cour(s).
    -   title: Explorer la page
        text: |-
            Sur la page [explorer](https://hedy.org/explore), vous pouvez voir le travail d'autres utilisateurs de Hedy. Vous pouvez essayer leurs programmes et vous en inspirer pour créer vous-même quelque chose de cool.
            Vous pouvez également ajouter vous-même un programme que vous avez créé à la page d'exploration en cliquant sur "Enregistrer et partager le code" dans l'écran de codage ou en allant dans "Mes programmes" et en cliquant sur "Partager".
            Vous ne voulez plus partager votre travail ? Il vous suffit d'aller dans "Mes programmes" et de cliquer sur "Annuler le partage".
            Si vous souhaitez obtenir davantage d'informations sur la page d'exploration, consultez cette [vidéo] (https ://www.youtube.com/watch?v=26boFjqvS5Q).
    -   {}
    -   title: Mes réalisations
        text: |-
            Si vous cliquez sur votre nom d'utilisateur dans le coin supérieur droit de votre écran, vous pouvez aller sur [Mes réalisations] (https://hedy.org/my-achievements). Sur cette page, vos réalisations sont rassemblées. Vos élèves disposent également d'une telle page.
            Lorsque vous passez la souris sur le badge, vous voyez comment l'obtenir. Il existe également des badges cachés, que vous devrez découvrir par vous-même.
            Si vous voulez plus d'informations sur les réalisations, regardez cette [vidéo] (https://www.youtube.com/watch?v=-FjmKejukCs).
    -   title: Les meilleurs scores
        text: |-
            Sur [cette page](https://hedy.org/highscores), vous pouvez voir les meilleurs scores de tous les utilisateurs de Hedy.
            Dans cette [vidéo](https://www.youtube.com/watch?v=IqTiUkBVTo8), vous en apprendrez davantage sur les meilleurs scores.
    -   title: Débogueur
        text: |-
            Votre code (ou celui de l'élève) ne fonctionne pas ? Il doit y avoir un bogue (une erreur de codage) ! Vous pouvez utiliser le débogueur pour trouver l'erreur.
            Le débogueur est le gros bouton de votre écran de codage. Si vous appuyez sur ce bouton, vous pouvez exécuter votre code ligne par ligne pour trouver votre erreur.
            Avez-vous trouvé l'erreur ? Appuyez sur le bouton rouge d'arrêt et le débogueur s'éteindra.
    -   title: Lire à haute voix
        text: Voulez-vous que la sortie de votre programme soit lue à haute voix ? Dans ce cas, vous pouvez utiliser la fonction de lecture à haute voix qui se trouve sous le bouton « exécuter le code » dans votre écran de codage.
    -   title: Mode programmeur
        text: |-
            Vous êtes distrait par toutes les aventures, ou vous voulez faire un long programme ? Alors, regardez le bouton « Mode Programmateur » en bas de votre écran de codage.
            Ce mode vous permet, à vous et à vos élèves, d'utiliser un écran de codage plus grand.
    -   title: Aide-mémoire
        text: |-
            A tous les niveaux il y a un bouton avec cet émoji 🤔. Vous et vos élèves peuvent y trouver les « Aide-mémoire ». Sur ces aide-mémoire, vous pouvez trouver toutes les commandes disponibles à chaque niveau sous leur forme correcte.

            Donc, si vous avez oublié comment une commande fonctionne, c'est très simple, jetez un œil à l'aide-mémoire.
    -   title: Vidéo
        text: Cette [vidéo] (https://www.youtube.com/watch?v=c4MntPPgl1Y) vous présente d'autres fonctionnalités de Hedy, comme les aides-mémoire et le sélecteur de clavier.
-   {}
-   title: Réponses aux exercices
    key: réponses
    intro: |-
        Les réponses à tous les exercices se trouvent dans le profil public du compte utilisateur « Hedy_answers ». Nous encourageons souvent les élèves à utiliser leur propre créativité dans leur réponses, c'est pourquoi ces réponses sont, au mieux, des guides montrant à quoi peut ressembler une réponse correcte.

        Pour ouvrir le profile « Hedy_answer », cliquez <a href="https://hedy.org/user/hedy_answers" target="_blank">ici</a>.
-   title: Erreurs fréquemment commises
    key: erreurs_courantes
    intro: |-
        Vous pouvez apprendre de vos erreurs, surtout en codage !
        Il est inévitable de faire des erreurs, et c'est une excellente occasion d'apprendre, mais pour les enseignants, il peut être difficile de trouver la bonne solution à une erreur !
        D'autant plus que les codes deviennent de plus en plus longs au fil des niveaux. C'est pourquoi nous avons dressé une liste des erreurs fréquemment commises dans chaque niveau, ainsi que leurs solutions.
    levels:
    -   level: "1"
        sections:
        -   title: Les élèves oublient de taper les commandes
            example:
                error_text: Par exemple, ils tapent une phrase sans `{print}`.
                error_code: Hedy ne peut pas afficher ça.
                solution_text: Apprenez à vos élèves à toujours commencer une ligne par une commande.
                solution_code: "{print} Hedy peut imprimer ceci !"
        -   title: Les élèves utilisent des majuscules lorsqu'ils tapent des commandes
            example:
                error_text: Les commandes ne fonctionneront pas si elles sont en majuscules.
                error_code: |-
                    Demander Pourquoi mon code ne marche pas ?
                    Imprime Parce que j'utilise des commandes avec des majuscules.
                solution_text: Enlevez les majuscules.
                solution_code: |-
                    {ask} Pourquoi mon code marche-t-il ?
                    {print} Parce que j'ai enlevé les majuscules !
        -   title: Les élèves utilisent `{echo}` sans `{ask}`
            example:
                error_text: "`{echo}` est fait pour répéter une réponse après une commande `{ask}`. Sans `{ask}`, `{echo}` ne fera rien."
                error_code: "{echo} Ton nom est"
                solution_text: Ajoute une commande `{ask}` pour que cela fonctionne.
                solution_code: |-
                    {ask} Quel est votre nom ?
                    {echo} Ton nom est
        -   title: Les élèves veulent que le mot (la variable) répété par la commande `{echo}` se trouve au milieu d'une phrase
            example:
                error_text: Et ils ont raison ! C'est pourquoi ils apprendront à utiliser les variables au niveau suivant.
                error_code: |-
                    {ask} Quel est le langage de programmation le plus amusant ?
                    {echo} est le meilleur !
                solution_text: "Au niveau 1, nous devons nous en tenir à cela :"
                solution_code: |-
                    {ask} Quel est le langage de programmation le plus amusant ?
                    {echo} Le meilleur est...
        -   title: "Tortue : Les élèves laissent la tortue sortir de l'écran"
            example:
                error_text: Souvent, les élèves aiment essayer les grands nombres en utilisant la tortue, ce qui fait sortir la flèche de l'écran.
                error_code: |-
                    {forward} 300
                    {turn} 90
                solution_text: Dans l'exemple, les élèves ont tendance à penser que la commande "tourne" ne fonctionne pas. Bien qu'elle fonctionne, vous ne pouvez pas voir son effet en dehors de l'écran. Utilisez des nombres plus petits pour éviter cela.
                solution_code: |-
                    {forward} 100
                    {turn} 90
        -   title: "Tortue : Les élèves utilisent la commande \"recule\", mais elle n'existe pas"
            example:
                error_text: Recule n'est pas une commande.
                error_code: recule 100
                solution_text: "Pour faire reculer la tortue, il faut utiliser la commande avance et un nombre négatif. Par exemple :"
                solution_code: avance -100
    -   level: "2"
        sections:
        -   title: Les élèves font des fautes de frappe dans leurs commandes
            example:
                error_text: Hedy ne peut pas reconnaître une commande contenant une faute de frappe.
                error_code: afffiche Ne faites pas de fautes de frappe
                solution_text: Apprenez à vos élèves à lire les messages d'erreur. Ils pourront ainsi découvrir eux-mêmes ce qui n'a pas fonctionné.
                solution_code: affiche Ne fais pas de fautes de frappe
        -   title: Les élèves oublient que la commande "demande" a changé
            example:
                error_text: Dans ce niveau, les élèves apprennent ce que sont les variables. La commande demande nécessite également une variable, mais les élèves l'oublient.
                error_code: demande Qu'aimeriez-vous manger 
                solution_text: Dans ce niveau, tu dois dire à Hedy où enregistrer ta réponse pour qu'elle puisse être utilisée plus tard. C'est ce qu'on appelle une variable.
                solution_code: demande Qu'aimeriez-vous manger
        -   title: Les élèves essaient d'utiliser la commande `{echo}`
            example:
                error_text: Pour certains élèves, il peut être frustrant d'apprendre que la commande `{echo}` ne fonctionne plus. C'est pourquoi il est très important d'expliquer les avantages de l'utilisation des variables. Par exemple, vous pouvez utiliser plusieurs variables dans un code, et vous pouvez les placer où vous voulez dans une phrase !
                error_code: |-
                    réponse {is} {ask} Pourquoi {echo} ne fonctionne plus ?!
                    {echo}
                solution_text: Utilise plutôt une variable.
                solution_code: |-
                    réponse {is} {ask} Pourquoi {echo} ne fonctionne-t-il plus ?
                    {print} réponse
        -   title: Les élèves utilisent un nom de variable ou un mot normal
            example:
                error_text: Dans l'exemple ci-dessous, le mot "nom" est utilisé comme variable, mais aussi comme texte normal. Le résultat de ce code sera "Bonjour mon Hedy est Hedy".
                error_code: |-
                    nom est Hedy
                    affiche Bonjour mon nom est nom
                solution_text: N'utilise donc pas un mot que vous voulez utiliser dans le texte comme nom de variable. Au niveau 4, ce problème est résolu à l'aide de guillemets.
                solution_code: |-
                    nom est Hedy
                    affiche Bonjour, je suis nom
        -   title: Les élèves utilisent des noms de variables longs contenant deux mots.
            example:
                error_text: Une variable doit être nommée avec un seul mot. Vous pouvez utiliser un tiret bas pour relier deux mots. Cela compte pour un seul mot.
                error_code: porte choisie est demande Quelle porte choisissez-vous
                solution_text: Ajoute un tiret bas.
                solution_code: porte_choisie est demande Quelle porte choisissez-vous
        -   title: Les élèves peuvent utiliser deux noms différents pour la même variable
            example:
                error_text: Dans cet exemple, l'élève a utilisé "cheval" et "nom" pour les mêmes variables.
                error_code: |-
                    cheval est demande Quel est le nom de votre cheval
                    affiche Votre cheval est appelé nom
                solution_text: Vérifiez toujours si la variable porte le même nom dans tout le code. De légères différences peuvent être difficiles à repérer (par exemple les pluriels), mais elles interfèrent avec le code.
                solution_code: |-
                    nom est demande Quel est le nom de votre cheval
                    affiche Votre cheval s'appelle nom
    -   level: "3"
        sections:
        -   title: Les élèves essaient d'imprimer des listes en entier
            example:
                error_text: Une liste ne peut pas être imprimée. Vous ne pouvez imprimer qu'un seul élément de la liste, au hasard.
                error_code: |-
                    courses est pommes, lait, chocolat
                    affiche courses
                solution_text: Pour afficher une liste de toutes les courses, il suffit de les placer après une commande affiche. Sinon, vous pouvez utiliser la liste pour imprimer un article au hasard.
                solution_code: |-
                    {print} pommes, lait, chocolat

                    ou

                    courses {is} pommes, lait, chocolat
                    {affiche} épicerie {at} {random}
        -   title: Le élèves utilisent le nom de la variable ou d'une liste comme du texte normal
            example:
                error_text: Ce problème s'est probablement produit au niveau 2 également. Désormais, il peut également se produire avec les listes.
                error_code: |-
                    nom {is} Hedy
                    {print} Bonjour, mon nom est nom

                    ou

                    animal {is} rhinocéros, abeille, cygne
                    {affiche} Le meilleur animal est... animal {at} {random}
                solution_text: N'utilisez pas les noms de variables ou de listes dans du texte normal à imprimer. Au niveau 4, ce problème est résolu avec des guillemets.
                solution_code: |-
                    nom est Hedy
                    affiche Bonjour je suis nom

                    ou

                    animaux est rhinocéros, abeille, cygne
                    affiche Le meilleur animal est... animal au hasard
        -   title: Les élèves oublient `{at}` dans `{at}` `{random}`
            example:
                error_text: Comme dans l'exemple
                error_code: |-
                    oiseaux est moineau, mouette, corneille
                    affiche oiseaux hasard
                solution_text: Ce problème est résolu en ajoutant le mot `{at}`
                solution_code: |-
                    oiseaux {is} moineau, mouette, corneille
                    {print} oiseaux {at} {random}
        -   title: Les élèves oublient d'utiliser la commande `{print}` quand ils utilisent aussi la commande `{at}` `{random}`
            example:
                error_text: Ou alors ils vont parfois mettre `{at}` `{random}` au début d'une ligne.
                error_code: |-
                    fruit {is} pomme, cerise, banane
                    fruit {at} {random}
                solution_text: Insistez auprès de vos élèves sur le fait que vous avez toujours besoin de la commande `{print}` pour afficher un texte.
                solution_code: |-
                    fruit {is} pomme, cerise, banane
                    {print} fruit {at} {random}
        -   title: Les élèves oublient d'utiliser des virgules dans leurs listes
            example:
                error_text: Dans une liste, les éléments sont séparés par une virgule.
                error_code: |-
                    pizzas {is} champignons thon quatre saisons
                    {print} pizzas {at} {random}
                solution_text: Chaque élément de votre liste doit être suivi d'une virgule
                solution_code: |-
                    pizzas {is} champignons, thon, quatre saisons
                    {print} pizzas {at} {random}
        -   title: Les élèves essaient d'utiliser `{at}` `{random}` avec autre chose qu'une liste
            example:
                error_text: Par exemple
                error_code: |-
                    clubs {is} Machester United
                    {print} clubs {at} {random}
                solution_text: Hedy ne peut pas afficher quelque chose au hasard, parce qu'il n'y a pas de liste à partir de laquelle choisir.
                solution_code: |-
                    clubs {is} Manchester United, Bayrn Munchen, FC Barcelona
                    {print} clubs {at} {random}
        -   title: Les élèves essaient d'utiliser les fonctions ajouter/supprimer sans liste
            example:
                error_text: Dans l'exemple ci-dessous, "noms" n'est pas une liste, mais une variable. Vous ne pouvez rien y ajouter.
                error_code: |-
                    noms {is} Jacques
                    ton_nom {is} {ask} Qui es-tu ?
                    {add} ton_nom {to} noms
                    {print} noms {at} {random}
                solution_text: Il faut d'abord qu'il y ait une liste, donc vous devez ajouter un deuxième nom pour transformer les noms en liste, par exemple Amy. Si vous ne voulez pas d'Amy dans votre liste, vous pouvez utiliser remove pour la supprimer ensuite.
                solution_code: |-
                    noms {is} Jacques, Amy
                    ton_nom {is} {ask} Qui es-tu ?
                    {add} ton_nom {to} noms
                    {print} noms {at} {random}
        -   title: Les élèves oublient d'utiliser `{to}`/`{from}` dans `{add}`/`{remove}`
            example:
                error_text: Sans `{to}`/`{from}`, la commande `{add}`/`{remove}` ne marchera pas.
                error_code: |-
                    aventures {is} histoire, perroquet, dé
                    choix {is} Quelle aventure tu préfères?
                    {add} choix
                    {remove} dé
                    {print} J'aime aventures {at} {random}
                solution_text: Hedy doit savoir à quelle liste l'élément doit être ajouté/supprimé.
                solution_code: |-
                    aventures {is} histoire, perroquet, dé
                    choix {is} Quelle aventure préférez-vous ?
                    {add} choix {to} aventures
                    {remove} dé {from} aventures
                    {print} J'aime aventures {at} {random}
    -   level: "4"
        sections:
        -   title: Les élèves oublient d'utiliser les guillemets des deux côtés du texte
            example:
                error_text: Dans ce niveau, il affiche et demande ont besoin de guillemets. Un avant le texte et un après.
                error_code: |-
                    affiche Hello
                    humeur demande  Comment vas-tu ?
                solution_text: Ajoute correctement les guillemets.
                solution_code: |-
                    affiche  Hello
                    humeur est demande  Comment vas-tu?
        -   title: Les élèves utilisent les mauvais guillemets
            example:
                error_text: Il est important de commencer votre cours en vérifiant si les étudiants savent comment taper un guillemet correctement. Sinon, ils pourraient utiliser les "doubles guillemets" ou les guillemets inversés ` .
                error_code: |-
                    {print} `Bienvenue au restaurant`
                    nourriture {is} demande  Que voulez-vous commander?
                solution_text: "Ce sont les guillemets corrects :"
                solution_code: |-
                    affiche  Bienvenue au restaurant
                    nourriture est demande  Que voulez-vous commander ?
        -   title: Les élèves utilisent une apostrophe dans leur texte
            example:
                error_text: A partir de ce niveau, les apostrophes ne sont plus autorisées. Elles sont souvent utilisées en français pour signifier l'élision de voyelles comme dans l'entrée, par exemple.
                error_code: affiche  Vous n êtes pas autorisé à entrer ceci
                solution_text: Vous pouvez choisir d'utiliser la mauvaise grammaire et d'omettre l'apostrophe. Vous pouvez aussi utiliser le ` comme apostrophe.
                solution_code: |-
                    {print} 'T'es autorisé à entrer ceci'
                    print 'Et t`es capable de faire ceci'
    -   level: "5"
        sections:
        -   title: Les élèves oublient d'utiliser `{print}` dans une commande `{if}`
            example:
                error_text: Après avoir utilisé `{if}`ou `{else}`, les élèves oublient d'utiliser une deuxième commande comme `{print}` ou `{ask}`.
                error_code: |-
                    si nom est Hedy  Super!
                    sinon  Hedy est mieux!
        -   {}
        -   title: Les élèves oublient encore les guillemets des deux côtés
        -   title: Les élèves utilisent des guillemets autour des noms de variables
        -   title: Les élèves utilisent des noms de variable longs contenant 2 mots
