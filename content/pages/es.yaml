title: Documentación de Hedy
home-sections:
-   title: ¡Programación textual más fácil!
    text: |-
        Muchos colegios y profesores en todo el mundo quieren enseñar programación a sus alumnos. Al principio suele hacerse con herramientas lúdicas, desde el robot Beebot a
        Scratch Junior o Scratch. Después de usar estas herramientas, los niños suelen querer pasar a lenguajes de programación textuales más potentes, como Python.

        Sin embargo Python es complicado, porque sólo está disponible en inglés, y requiere que los alumnos aprendan conceptos de programación y sintaxis complejos de una vez.
        ¡Hedy es la manera fácil para empezar con lenguajes de programación textuales! Hedy es de uso gratuito, de código abierto, y se diferencia de otros lenguajes de programación textuales en tres aspectos.

        1. Hedy es multilingüe, puedes usar Hedy en tu propio lenguaje
        2. Hedy es gradual, para que puedas aprender un concepto y su sintaxis a la vez
        3. Hedy está construido para el aula, permitiendo a los profesores personalizar completamente la experiencia de sus alumnos
-   title: Programación multilingüe
    text: Mientras que casi todos los lenguajes de programación tienen palabras clave en inglés, como `for` o `repeat`, ¡Hedy puede utilizarse en cualquier idioma! Actualmente admitimos 47 idiomas diferentes, incluyendo neerlandés, español, árabe, turco, chino e hindi. Si tu idioma no está disponible, siempre puedes iniciar una nueva traducción.
-   title: Aprendizaje paso a paso
    text: Aprender un lenguaje de programación puede ser agobiante, ya que los alumnos tienen que aprender los conceptos (por ejemplo, las condicionales si-sino o los bucles) y la sintaxis (como las comillas o los paréntesis) a la vez. En Hedy, los conceptos se introducen primero con muy poca sintaxis y después se perfeccionan. ¡Una forma de aprender científicamente probada!
-   title: Hecho para el aula
    text: |-
        Hedy es adecuado para niños de 10 años o más y diseñado para su uso en el aula.
        Los profesores lo pueden usar gratis, crear planes de estudio integrados, pero también pueden escribir sus propias lecciones y cargarlas en la interfaz de usuario de Hedy.
-   title: La programación en contexto
    text: Hedy muestra la programación de la forma más amplia posible, y se puede utilizar de muchas formas interesantes. Hedy permite la creación de historias digitales e interactivas, dibujos coloridos que se pueden mostrar por pantalla pero también dibujar con un trazador de bolígrafos o bordado en una camisa, y se puede utilizar para crear juego o aplicaciones con acciones de botones y teclado.
-   title: ¿Hedy es gratis?
    text: |-
        ¡Sí! Hedy es 'Código abierto', lo que significa que cualquiera puede ayudarnos a mejorar Hedy.
        Puedes encontrar nuestro código en <a href="https://github.com/hedyorg/hedy" target="_blank">Github</a>.
        Si te gusta Hedy y quieres colaborar, aceptamos (y estamos muy agradecidos por ello) <a href="https://github.com/sponsors/hedyorg" target="_blank">donaciones</a>!
-   title: ¿Tengo que instalar algo?
    text: No. Hedy funciona en el navegador, que es el programa que utilizas para ver esta página. Probablemente Chrome o Edge o Firefox. Hedy también funciona en móviles y tabletas.
-   title: ¿Necesito experiencia en programación para enseñar con Hedy?
    text: |-
        No, eso no es necesario. Todos los conceptos se explican en las diapositivas y en la interfaz para los alumnos.
        Si creas una cuenta de profesor gratuita, también tienes acceso al manual del profesor con información sobre como enseñar
        y los errores más comunes.
join-sections:
-   title: Apoyar a Hedy
    text: '# ¡Hay tres maneras en las que puedes apoyar a Hedy!'
-   title: Mejorar el idioma
    text: |-
        El carácter gradual y multilingüe de Hedy crea muchos retos técnicos interesantes.
        Encuentra esas cuestiones en <a href="https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage" target="_blank">Github</a>.
-   title: Traduciendo Hedy
    text: |-
        ¿No eres programador? ¡No hay problema! Otra forma de apoyar a Hedy es <a href="https://github.com/hedyorg/hedy/wiki/Hedy-Translation-Tutorial" target="_blank"> traduciendo palabras clave, mensajes de error, aventuras y otro contenido </a> .
        Este es el estado actual, ¡ayúdenos a completar un idioma o agregar uno nuevo!
        <a href="https://hosted.weblate.org/engage/hedy/">
        <img src="https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg" alt="Estado de la traducción" /> </a>
-   title: Ayuda a los profesores a empezar
    text: |-
        Hedy está diseñado para ayudar a los profesores a enseñar lecciones de programación en clase. Tenemos funciones específicas para profesores como la opción para crear una clase, personalizarla y ver el progreso de los alumnos.
        Si te gusta Hedy, puedes contactar a los colegios que conoces ¡para ayudar a los profesores a empezar! Nosotros podemos ayudar en la búsqueda de escuelas o profesores vía <a href="https://discord.gg/8yY7dEme9r" target="_blank">Discord</a>.
learn-more-sections:
-   title: La fundación Hedy
    text: "El mantenimiento de Hedy corre a cargo de la Fundación Hedy (Stichting Hedy), Sportmanstaat 8, 2341 JG Oegstgeest, Cámara de Comercio de los Países Bajos, número 94013985.\n\nEl consejo de la fundación está formado por:\n\n  * Felienne Hermans, presidenta\n  * Eelko Huizing, finanzas\n  * Renée Merbis, secretaria\n\nEl consejo de Stichting Hedy no recibe ninguna compensación económica por sus tareas. "
-   title: ¡Una inmersión profunda!
    text: "¿Quieres saber más sobre la filosofía y el diseño de Hedy? Echa un vistazo a esta charla que dio Felienne en la Conferencia StrangeLoop de 2022:\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/fmF7HpU_-9k?wmode=opaque\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>"
-   title: Hedy en las noticias
    text: |-
        Algunas páginas web y noticiarios han escrito acerca de Hedy desde nuestro lanzamiento a principios de 2020. Guardamos una listado aquí:
        * [Java Magazine 04.2023](images/Hedy_Javamagazine2023.pdf)
        * [Tech Optimism - A Solution to the IT Shortage (Dutch), August 2022](https://pom.show/2022/08/12/een-oplossing-voor-het-it-tekort/)
        * [Codeweek Podcast, July 2022](https://codeweek.eu/podcast/26)
        * [Heise.de (German), Januari 2022](https://www.heise.de/news/Hedy-die-mitwachsende-Programmiersprache-6336264.html)
        * [Strumenta, November 2021](https://tomassetti.me/teaching-programming-with-hedy/)
        * [Vives (Dutch), CodeWeek Special October 2021](images/Vives-174-Codeweek.pdf)
        * [CodeWeek.eu - Haunted House Challenge, September 2021](https://codeweek.eu/2021/challenges/haunted-house)
        * [Opensource.com, April 2021](https://opensource.com/article/21/4/hedy-teach-code)
        * [IO Magazine, April 2021](https://ict-research.nl/wordpress/wp-content/uploads/2021/04/IO-magazine-NR1-2021_web.pdf)
        * [Ingeniería De Software (Spanish), February 2021](https://ingenieriadesoftware.es/hedy-mejor-lenguaje-ensenar-programacion-ninos/)
        * [Hello World Magazine, February 2021](images/Hello_World_15_Hedy.pdf)
        * [Discoro, January 2021](https://discoro.wordpress.com/2021/01/09/hedy-gradually-learning-a-programming-language/)
        * [Felienne wins the Dutch award for ICT research for Hedy, January 2021](https://www.nwo.nl/en/news/felienne-hermans-receives-dutch-prize-ict-research-2021)
        * [SlashDot, August 2020](https://news.slashdot.org/story/20/08/17/024248/scientist-proposes-a-new-programming-language-for-teaching-coding-and-python)
        * [GenBeta (Spanish), August 2020](https://www.genbeta.com/desarrollo/nuevo-lenguaje-para-ensenar-programacion-a-ninos-como-se-ensena-a-leer-escribir-forma-gradual-niveles)
        * [Developpez (French), August 2020](https://programmation.developpez.com/actu/308095/Une-scientifique-propose-un-nouveau-langage-de-programmation-pour-enseigner-aux-enfants-le-codage-informatique-au-travers-d-une-approche-graduelle-implementee-en-Python-sur-13-paliers/)
        * [Vives (Dutch), October 2020](images/artikel_vives.pdf) "Met Hedy stap voor stap leren programmeren"
        * [Leiden University, April 2020](https://www.universiteitleiden.nl/en/news/2020/03/looking-to-distract-the-kids-while-you-work-from-home-get-them-programming)
        * [Mare (Dutch), April 2020](https://www.mareonline.nl/cultuur/computercode-voor-de-kids/)
        * [AG Connect (Dutch), April 2020](https://www.agconnect.nl/artikel/stapsgewijs-python-leren-programmeren-met-nieuwe-taal-hedy)
start-sections:
-   title: Primeros pasos con Hedy
    text: |-
        Bienvenido a Hedy, estamos encantados de ayudarle a empezar con Hedy.

        Nuestro [Manual del Profesor](https://www.hedy.org/for-teachers/manual) tiene una visión general de todas las características en detalle, pero esta página tiene un breve resumen para que sepa las cosas antes de sumergirse en Hedy.

        Algunos aspectos destacados que son importantes saber:
        * ¡Hedy es una herramienta diseñada para ayudar a gestionar un aula de programación infantil! Usted puede crear sus propias clases, planes de lecciones y seguir lo que están haciendo.
        * No necesitas saber mucho de programación si empiezas, Hedy trabaja paso a paso, ¡también para ti!
        * Puedes utilizar Hedy en tu lengua materna, ya que ha sido traducido a muchos otros idiomas.
        * ¡Todos los niños pueden programar! Hedy es especialmente útil para los niños que tienen problemas de visión, ya que puede leer el material en voz alta sin necesidad de un ratón.
        * Estamos aquí para ayudarte, puedes encontrarnos por ejemplo en [Discord](https://discord.gg/8yY7dEme9r) o puedes [enviarnos un correo electrónico](hello@hedy.org).
-   title: Docentes sobre Hedy
    text: |-
        Varios profesores de todo el mundo han expresado su pasión por Hedy, como algunos han compartido con nosotros:

        *¡Increíblemente inspirador! Una forma excelente de hacer que la programación sea mucho más accesible para ti, pero también para los alumnos. Es muy divertido jugar con él y tiene mucho potencial para utilizarlo con los alumnos. ¡Creo que es una herramienta muy buena! Creo que es una forma valiosa para que los niños comiencen a aprender programación. Python y la codificación siempre han sido muy emocionantes, porque la barrera para aprender es muy alta. Ahora todo es un poco más bajo y se explicó que, en realidad, puede ser muy fácil. ¡Disfruté viendo cómo Hedy intenta hacer que la programación sea lo más accesible posible para los usuarios!*
        Países Bajos: Profesores de matemáticas en formación (enseñanza secundaria)

        *Interfaz sencilla y buenos ejemplos.* Profesor : 3.º a 6.º grado (primaria)

        *Programación multilingüe y el concepto de programación gradual en sí.* EE. UU.: escuela secundaria, 6.º a 8.º grado

        *La naturaleza gradual de la introducción de la programación.* Australia: Escuela secundaria

        *Continúa automáticamente.* Países Bajos: 2 HAVO-VWO

        *Tanto que la explicación puede estar en holandés (y el código en inglés), como que se va construyendo con cada vez más posibilidades.* Países Bajos: Grupo de clase Plus

        *Pero Hedy y sus niveles graduales... qué idea, quería agradecerte personalmente por crear esto. No puedo agradecerte lo suficiente. Además, nunca había visto el nivel de compromiso y entusiasmo de mis alumnos, como lo he visto con Hedy. Hemos cubierto hasta el nivel 5 y planeamos dedicarle una semana más en clases y laboratorios, antes de comenzar con Python.* Pakistán

        *La "realidad" de la programación, se asemeja a cómo es en realidad.* Países Bajos: Clase Plus grupo 4 a 8

        *Actividades paso a paso. Actividades divertidas.* Países Bajos: 1e Todos los niveles, 2e VWO/HAVO 2e VWO +, 3e HAVO 3e VWO

        *Me gusta mucho Hedy y además está muy bien diseñado, lo que lo hace ideal para usar en la escuela primaria. El enfoque gradual de Hedy funciona muy bien. La breve explicación al principio de cada nivel y los programas de ejemplo breves ayudan a que los niños se hagan una idea rápida de lo nuevo en el nivel elegido . Las diferentes tareas que los niños pueden elegir también funcionan muy bien. Se ve a los niños elegir las tareas que les gustan y luego trabajar con ellas, a través de los niveles. Hedy es muy divertido para los niños que son buenos en programación y quieren probar un lenguaje de programación real. Es una buena preparación para la escuela secundaria, tan pronto como se imparta más educación en TIC allí.* Países Bajos: Oegstgeest Montessori school

        *La construcción es muy buena.* Países Bajos: Escuela secundaria inferior HAVO-VWO

        *Puedo seguir el ritmo de la clase.* Países Bajos: grupo 7 y 8

        ![Felienne enseñando a los niños](/images/teacherfeedback/Fkids1.JPG) *Felienne enseñando a los niños*        ![Niños aprendiendo sobre Hedy](/images/teacherfeedback/Fkids2.JPG) *Niños aprendiendo sobre Hedy*
teacher-guide:
-   title: Introducción
    key: intro
    subsections:
    -   title: ¿Qué es Hedy?
        text: |-
            Hedy es un lenguaje de programación textual, específicamente desarrollado para (pre-)adolescentes (entre 10 y 15 años).
            Al contrario que los lenguajes de programación para niños, como Scratch: Hedy no usa bloques de código sino código textual.
            Así con Hedy aprenderás a escribir código como los programadores de verdad, pero dando pequeños pasos con entretenidos ejercicios.
            De esta forma Hedy puede funcionar como un escalón hacia los lenguajes de programación reales como Python ¡de una forma accesible y divertida!
            Si quieres saber más, aquí puedes ver este <a href="https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s" target="_blank">vídeo</a> sobre el desarrollo de Hedy como lenguaje de programación.
    -   title: Público objetivo
        text: |-
            Hedy está desarrollado pensando en los alumnos de primaria y secundaria (edades 10 - 15).
            Es importante que los alumnos sean capaces de leer bien. Recomendamos no empezar con Hedy hasta que los alumnos no tengan al menos el nivel de lectura de 3º.
            Los alumnos (¡y profesores!) no necesitan ninguna experiencia en programación para empezar con Hedy.
    -   title: ¿Cómo funciona Hedy?
        text: |-
            Hedy se divide en niveles, en los cuales se enseñan nuevos comandos. Cada nivel contiene una variedad de aventuras para practicar los nuevos comandos aprendidos.
            Como profesor/a, tú decides qué aventuras están disponibles a tu alumnos. ¿Harán un restaurante, una calculadora o una casa encantada en este nivel? En cada nivel, las aventuras están ordenadas de mas fácil a difícil.
            De esta forma tus alumnos siempre tienen un reto. Las aventuras pueden realizarse por alumnos individuales o puedes enseñarlas en grupos.

            Las aventuras también incluyen un código de ejemplo, para asegurarse que ¡incluso profesores con poca experiencia de programación puedan usar Hedy también!
            ¡Por supuesto Hedy también permite a los profesores más creativos que prefieren crear sus propias aventuras!

            Después de resolver todas las aventuras de un nivel concreto, tus alumnos pueden poner a prueba sus conocimientos con el cuestionario.
            Puedes revisar el trabajo de tus alumnos y su progreso en la página de la clase.
    -   title: Dispositivos
        text: |-
            Hedy está basado en la web, lo que significa que funciona en cualquier dispositivo con un navegador (Google Chrome, Firefox, Edge etc), así que los portátiles, chromebooks, tabletas e incluso teléfonos inteligentes son adecuados para usar Hedy.
            No hay necesidad de descargar nada antes de empezar a trabajar con Hedy, sólo ve a la página web ¡y listo!
    -   title: La comunidad de Hedy
        text: |-
            Todos los profesores de Hedy, programadores y otros aficionados son bienvenidos a unirse a nuestro <a href="https://discord.gg/8yY7dEme9r" target="_blank">servidor de Discord</a>.. Este es el lugar ideal para charlar sobre Hedy: tenemos canales donde puedes mostrar tus interesantes proyectos y lecciones, canales para informar sobre errores, y canales para hablar con otros profesores y con el equipo de Hedy.
            <a href="https://www.youtube.com/watch?v=Lyz_Lnd-_aI" target="_blank">Aquí</a> puedes ver un vídeo sobre como unirte a la comunidad de Discord.
    -   title: Hedy y el RGPD
        text: |-
            Las organizaciones en la UE tienen que cumplir con el GDPR (Reglamento General de Protección de Datos) al procesar datos personales.
            Dado que este es un tema complejo para muchas escuelas, puede utilizar todas las funcionalidades de programación de Hedy sin compartir datos personales.
            La forma más sencilla de hacerlo es utilizar Hedy sin crear cuentas para el profesor y los alumnos. Sin cuentas, toda la funcionalidad está disponible, con la excepción de personalizar los niveles, guardar los programas de los alumnos y ver su progreso. Eso es limitante, pero hay escuelas que utilizan Hedy de esa manera.

            Una segunda forma es que un profesor cree una cuenta con una dirección de correo electrónico sin datos personales, por ejemplo "docent25@email.com". Aparte de una dirección de correo electrónico, que sólo se requiere para restablecer la contraseña, no es necesario compartir ninguna información cuando se crea una cuenta de profesor.
            Con una cuenta de profesor, puede crear cuentas anónimas para los alumnos, por ejemplo, rainbow-alumno1, rainbow-alumno2, etc (consulte el manual "Preparativos para la enseñanza"). De esta manera usted puede utilizar todas las funcionalidades de Hedy, incluyendo guardar el progreso, sin compartir datos personales suyos o de sus alumnos.

            Si lo anterior no es suficiente para su contexto, podemos firmar un acuerdo de procesamiento para el tratamiento de sus datos personales.
-   title: Tutorial
    key: tutorial
    subsections:
    -   title: Tutorial
        text: ¿Quieres ver el tutorial (de nuevo)? Haz clic <a href="https://hedy.org/tutorial" target="_blank">aquí</a>.
-   title: Preparativos para la enseñanza
    key: preparativos
    subsections:
    -   title: Para profesores
        text: Puedes preparar tus clases en la <a href="https://hedy.org/for-teachers" target="_blank">página Para profesores</a>. En esta página encontrarás todo lo que necesitas para dar clase con Hedy, como tus clases, tus aventuras y diapositivas. Todas las funcionalidades de la página para profesores se explican a continuación.
    -   title: Crear una clase
        text: |-
            Como profesor, puedes crear una clase para tus alumnos. En esta clase puedes ver las cuentas de cada uno de los alumnos y sus programas. También puedes monitorear su progreso.
            Este <a href="https://www.youtube.com/watch?v=Y3RTIWftJQg" target="_blank">vídeo</a> demuestra cómo crear rápidamente una clase en Hedy.
    -   title: Duplicar una clase
        text: "¿Das varias clases? Entonces no tienes que personalizar cada clase individualmente. Simplemente cree una clase, personalice la clase (vea \"Personalice su clase\" para aprender cómo) y luego duplique esta clase tantas veces como quiera.\nPuede duplicar la clase en la página \"Para profesores\". Si duplicas una clase, todos los ajustes de la clase se duplican también. Esto significa que todos los niveles y aventuras que no estén disponibles para la primera clase tampoco lo estarán para la(s) nueva(s) clase(s).\nLas cuentas de los alumnos y de los segundos profesores de tu clase no se duplicarán en la nueva clase."
    -   title: Añadir un segundo profesor
        text: "¿No eres el único profesor que imparte tu clase? Entonces ahora puedes añadir otro profesor a la clase. Ve a la página 'Para profesores' y haz clic en la clase. A continuación, selecciona \"Invitar a un profesor\" e introduce el nombre de usuario de tu colega.\nTu colega recibirá una invitación en su cuenta para unirse a tu clase. Puede ver el mensaje de invitación haciendo clic en su nombre de usuario en la esquina superior derecha de la pantalla y seleccionando \"Mi cuenta\".\nUna vez que el otro profesor acepte la invitación, también podrá personalizar la clase.\nPara eliminar a un segundo profesor de tu clase, ve a la página de la clase y elimina al segundo profesor. El profesor que ha creado la clase no puede ser eliminado."
    -   title: Personalizar tu clase
        text: |-
            Puede personalizar su clase y elegir qué aventuras están disponibles para sus alumnos. De esta manera, tus alumnos no se sentirán abrumados por la cantidad de aventuras y niveles, y podrán concentrarse específicamente en las aventuras con las que te gustaría que practiquen.
            Haga clic en su clase en la página para profesores y elija "personalizar clase". En esta página puede seleccionar niveles, establecer fechas de apertura, desbloquear umbrales de niveles y más.

            **Selecciona y ordena aventuras**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/df38cbb2-468e-4317-ac67-92eaf4212adc" width="1000">
            En esta sección puede seleccionar y ordenar aventuras. Las pestañas rosas son aventuras con nuevos comandos. Las pestañas grises son aventuras habituales. Para reorganizar el orden de las aventuras, puede arrastrar las pestañas. Sin embargo, te recomendamos que utilices el orden habitual de las aventuras, ya que el equipo de Hedy se aseguró de que las aventuras fueran de las más fáciles a las más difíciles.
            Si desea eliminar una aventura para sus alumnos, simplemente haga clic en la cruz en la pestaña de la aventura.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/0ddd10b5-ef60-4480-a0c4-fc9a0f323baa" width="300">
            Si desea agregar aventuras, por ejemplo su propia aventura o una aventura que eliminó accidentalmente, use este menú para agregar la aventura a las aventuras de sus alumnos. Simplemente haga clic en la aventura que desea agregar y (re)aparecerá en la línea de aventuras. Para deshacer todos los cambios en las aventuras, haga clic en "Restablecer".

            **Fechas de apertura**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/4e59acfa-4772-429f-8328-babb43c942d5" width="300">
            Con esta función puedes establecer fechas de apertura para los niveles. De esta manera puedes hacer un plan de lección antes de que comience el curso y no preocuparte por abrir nuevos niveles cada semana. En la imagen de arriba el primer nivel se abre directamente, el segundo se abrirá el 23 de septiembre y el 3er nivel la semana siguiente. Los demás niveles están cerrados.
            ¿No quieres fijar fechas de apertura? No hay problema, simplemente deja esta sección en blanco.

            **Desbloquear umbrales de nivel**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/99a34dab-f112-459e-bfd1-07618be4715a" witdh= "1000">
            Esta característica le permite establecer un umbral para la calificación del cuestionario de sus alumnos, antes de que puedan continuar al siguiente nivel. Por ejemplo, si ingresa "80", sus alumnos deben obtener al menos un 80 % en el cuestionario antes de poder pasar al siguiente nivel. Si no han alcanzado el umbral, no podrán continuar y deberán volver a realizar el cuestionario.
            ¿No quieres utilizar el umbral? No te preocupes, simplemente mantén esta sección en blanco.


            **Otros ajustes**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/a8491d67-6d6e-42a7-b672-fd3d083a76f8"/>
            Hay otras configuraciones que también podrían resultarle útiles. Nuestra primera configuración adicional es "Modo de desarrollador obligatorio". En el modo de desarrollador, los alumnos solo ven sus pantallas de entrada y salida y el botón Ejecutar. Las aventuras están ocultas y no hay ficha de ayudas disponibles. Esto podría resultar útil en una situación de prueba.
            Si no se selecciona esta opción, el modo de desarrollador también está disponible para los alumnos como opción voluntaria.

            Si desea que todos sus alumnos sean visibles en la puntuación más alta de la clase, puede seleccionar la segunda opción.
            Con todas las demás opciones, puede optar por ocultar algunas funciones o contenido para sus alumnos, esto podría ayudarlos a concentrarse más.

            **Guardar**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/df179df3-3073-4d15-bba6-62e58fb675be" width="300">
            No olvide guardar los cambios cuando haya terminado de personalizar su clase.
    -   title: Cuentas de alumno
        text: |-
            Para añadir alumnos a tu clase ve a la página de la clase haciendo clic en el nombre de la clase en la página 'Para profesores'. Después haz clic en 'añadir alumnos'. Hay 2 formas de permitir que tus alumnos se unan a tu clase: Puedes dejarles crear sus propias cuentas, o puedes crearlas por ellos.

            **Tú creas las cuentas para tus alumnos**
            Algunas veces es más fácil que tú crees las cuentas para tus alumnos. Esto se hace al hacer clic en el botón 'crear cuentas de alumnos' y rellenando los nombres de usuarios y contraseñas por ellos.
            Los alumnos pueden conectarse con el nombre de usuario y contraseña que elegiste. Después, ellos pueden cambiar su nombre de usuario o contraseña si quieren, manteniéndose en tu clase.
            Este <a href="https://www.youtube.com/watch?v=eEQvik-Ce5M" target="_blank">vídeo</a> muestra cómo agregar alumnos a tu clase de la manera más rápida y fácil.

            **Los alumnos crean sus propias cuentas**
            Tus alumnos pueden ir a la página web de Hedy y crear su cuenta, igual que tú lo hiciste. Para tenerlos en tu clase, ellos simplemente deber hacer clic en el enlace de la invitación.
            Puedes encontrar el enlace para invitarlos en la página de la clase y enviarlo a tus alumnos. Ten en cuenta que tus alumnos deben estar conectados en Hedy cuando hagan clic en el enlace, para hacer que todo funcione fácilmente.
            También puedes invitar manualmente a un alumno a tu clase con el botón 'Invitar por nombre de usuario'.
    -   title: Establecer idioma preferido
        text: |-
            Cuando los alumnos crean sus perfiles deben escoger su 'idioma preferido'. Hedy siempre cargará utilizando este idioma.
            El idioma siempre se podrá modificar a posteriori navegando a ' Mi cuenta' y 'Mis opciones personales'.

            **Para no hablantes de la lengua inglesa**
            No solo puedes cambiar el idioma de las aventuras a tu propio idioma. También puedes cambiar el idioma de los comandos (por ejemplo 'imprimir' o 'preguntar').
            De esta forma, puedes enseñar a tus alumnos con los comandos originales en Inglés pero también puedes permitirles utilizar su propio idioma. Por ejemplo, los alumnos holandeses pueden utilizar 'vraag' en vez de 'ask'.
            Si un alumno quiere cambiar idiomas, pueden hacer clic en el interruptor de palabras clave. Cambiará las palabras claves de inglés al idioma preferido y viceversa.
            ¡Dato curioso! ¡Se permite que los alumnos programen tanto en inglés como en su propio idioma al mismo tiempo! Así que, si tienen problemas recordando algunas palabras clave en inglés pero pueden recordar fácilmente otras, pueden usar ambas al mismo tiempo.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/0b3122e6-ff22-43d7-b8b6-62f47f485293" width="100">

            **Vídeo**
            Este <a href="https://www.youtube.com/watch?v=QrVZETj4oLM" target="_blank">vídeo</a> muestra cómo establecer el lenguaje preferido y también cómo cambiar los comandos a tu lenguaje preferido.
    -   title: Guardar los programas
        text: |-
            Cuando inicias sesión, verás Mis programas junto a tu icono de perfil.
            Esta opción también existen para tus alumnos. En Mis programas puedes encontrar todos los códigos con los que has trabajado.
            Por defecto, los programas serán guardados en 'Mis programas' cuando ejecutes el código, y cada 10 segundos, bajo su nombre por defecto
            y su nivel (por ejemplo: Historia 5). Si quieres guardar un programa con un nuevo nombre, simplemente escribe el nuevo nombre en la barra de nombre.
            Ahora mismo, sólo se puede guardar un programa por nivel, por pestaña.

            Tú (y tus alumnos) podéis compartir los programas usando el botón de compartir situado junto a los nombres de programas.
            Estos programas se publicarán en nuestra <a href="https://hedy.org/explore" target="_blank">página de exploración</a>, para que todo el mundo pueda verlos y utilizarlos.
            Si quieres dejar de compartir tu programa, ve a 'Mis programas' y haz clic en 'No compartir'.

            El icono de avión de papel puede utilizarse para entregar los programas a un profesor de la clase. Los programas que se hayan entregado, no se podrán editar después.
-   title: Enseñar con Hedy
    key: enseñar
    subsections:
    -   title: Enseñando con Hedy
        text: |-
            Hedy contiene un montón de niveles diferentes que cada uno se enseña una nueva habilidad diferente. Recomendamos enseñar un nivel por lección.
            Esto da a sus alumnos el tiempo para comprender plenamente un nuevo comando o concepto y practicar con él, antes de pasar al siguiente nivel.
            Nosotros utilizamos esta estructura en nuestras lecciones: Introducción, nuevos conceptos y órdenes, manos a la obra, rompecabezas y pruebas.
    -   title: Diapositivas
        text: |-
            Para dar instrucciones, puedes utilizar nuestras diapositivas. Están disponibles en la página 'Para profesores'. Hay un conjunto de diapositivas por cada nivel. En las diapositivas se explican todos los nuevos comandos para este nivel. Hemos intentado explicar por qué estos cambios son necesarios o cómo resultan útiles los nuevos comandos.
            También damos algunos ejemplos de cómo se usan los nuevos comandos. Por supuesto también puedes usar tus propias diapositivas, o abrir Hedy y mostrar a tus alumnos la página web. ¡Lo que tu prefieras para dar las mejores lecciones de Hedy!
    -   title: Introducción
        text: |-
            Puedes empezar tus clases activando los conocimientos previos de tus alumnos: ¿Qué saben ya sobre el tema?, ¿Qué aprendieron en la lección anterior? y ¿Qué errores cometieron de lo que han aprendido hasta ahora?
            De este modo, todos los comandos aprendidos previamente y los errores cometidos con frecuencia estarán frescos en la memoria de tus alumnos cuando empieces a introducir la nueva lección.
    -   title: Introducción de nuevos conceptos y comandos
        text: |-
            Los nuevos conceptos y comandos pueden ser muy difíciles de entender para algunos alumnos.
            Por eso es importante enseñar a los alumnos el uso correcto de los nuevos comandos.
            Especialmente en los niveles más bajos, donde algunos alumnos no tienen ninguna experiencia con la programación, puede ser difícil para ellos entender los nuevos conceptos.
            Mostrar muchos ejemplos hace que un concepto (por ejemplo: "¿Qué es una variable?") sea más reconocible y fácil de entender ("Mira, la variable mascota se ha convertido en perro"). Nuestras diapositivas pueden ayudarte con eso.
    -   title: Manos a la obra
        text: |-
            Cada nivel contiene diferentes aventuras que puedes encontrar en las pestañas rosas. La primera pestaña rosa explica los nuevos comandos de este nivel.
            Las siguientes pestañas son aventuras que los alumnos pueden probar y hacer suyas.
            Las aventuras están ordenadas de la más fácil a la más difícil, así que te recomendamos que empieces por la izquierda y sigas hacia la derecha.
            La última pestaña, «qué sigue», ofrece un pequeño adelanto de lo que aprenderás en el siguiente nivel. Por supuesto, puedes seleccionar las aventuras que quieres que tus alumnos hagan en cada nivel.
            No siempre tienen que hacer todas las aventuras. Cada aventura contiene un código de ejemplo, que los alumnos pueden probar con el botón verde.
            El código de ejemplo se copia en el campo de trabajo, donde los alumnos pueden probar el código y ajustarlo para hacerlo suyo.
            Estimule a sus alumnos para que conviertan el código de ejemplo en sus propios proyectos, añadiendo sus propias ideas y creando su propia variación de la aventura.
    -   title: Cuestionarios y rompecabezas
        text: |-
            Para evaluar si tus alumnos han aprendido toda la nueva información en el nivel, puedes permitirles que hagan un cuestionario.
            El cuestionario contiene 10 preguntas de respuesta múltiple sobre los nuevos conceptos y comandos de ese nivel.
            No todos los niveles tienen un cuestionario todavía, ya que aún estamos creando los cuestionarios.
            Algunos niveles también contienen rompecabezas. Los rompecabezas muestran al alumno un par de líneas de código que tienen que poner en el orden correcto.

            Este <a href="https://www.youtube.com/watch?v=lNh5EdZVUwc" target="_blank">vídeo</a> muestra los cuestionarios y los rompecabezas.
    -   title: Evaluación
        text: |-
            Termina tus lecciones haciendo una pequeña evaluación. ¿Qué aprendieron los alumnos? ¿Qué dificultades encontraron?
            ¿Cómo aprendieron de sus errores? Y por supuesto: ¿Qué crearon?
            Los alumnos suelen estar muy orgullosos de sus propias creaciones, así que es importante reservar algo de tiempo y darles a tus alumnos la oportunidad de mostrar su trabajo a sus compañeros.
-   title: Estadísticas de profesores
    key: teacher_statistics
    subsections:
    -   title: Panel de control en vivo
        text: "Si desea realizar un seguimiento del progreso de sus alumnos, puede utilizar el panel de control. Puede encontrarlo haciendo clic en 'Estadísticas en vivo' en la página de su clase.\n<img src=\"https://github.com/hedyorg/hedy/assets/80678586/97a54679-b1d6-46b4-a633-ab0161114642\" width=\"1000\">\nTodas las características de este panel se explican a continuación."
    -   title: Selección de nivel
        text: "<img src=\"https://github.com/hedyorg/hedy/assets/80678586/94dc891d-cdd6-4311-91f2-51900eaf4c2a\" width=\"500\">\nEn primer lugar, puede seleccionar los niveles que le gustaría ver en el tablero. Seleccione los niveles en los que sus estudiantes están trabajando actualmente haciendo clic en el número de ese nivel. Deseleccione los niveles que no desea ver haciendo clic en ellos de nuevo.\nEn este ejemplo se seleccionan los niveles 1 y 2. Puedes hacer clic en refresh para actualizar el panel de control y obtener las estadísticas más actuales."
    -   title: Resumen de la clase
        text: "<img src=\"https://github.com/hedyorg/hedy/assets/80678586/b2c30ef9-6eba-4c02-92a3-9669504a54a8\" width=\"1000\">\nEn la vista general de la clase puedes ver en qué aventura están trabajando tus alumnos ahora mismo. Puedes ver que un alumno está trabajando en la aventura \"Piedra, papel o tijera\" del nivel 1, otro está trabajando en la aventura \"El adivino\" del nivel 1 y otro está trabajando en la aventura \"Piedra, papel o tijera\" del nivel 2.\nSi quieres saber cuál de tus alumnos está trabajando en la aventura, haz clic en el número y aparecerá el nombre de su cuenta.\nTambién puedes ver cuántos de tus alumnos han terminado el cuestionario. En este caso, un alumno ha terminado el cuestionario en el nivel 1. De nuevo, puedes hacer clic en el 1 para ver de cuál de tus alumnos se trata.\n\nTambién puedes ver que uno de los alumnos \"falta\" en este resumen. Eso es porque está trabajando en una aventura en el nivel 4, que no está seleccionado."
    -   title: Listado de alumnos
        text: "<img src=\"https://github.com/hedyorg/hedy/assets/80678586/693e976c-199f-46f4-abae-3f18f9854cd0\" width=\"1000\">\nAquí puedes encontrar una lista de tus alumnos y puedes ver su progreso individual. El anillo azul te muestra en qué están trabajando actualmente tus alumnos.\n<img src=\"https://github.com/hedyorg/hedy/assets/80678586/c7e2150f-60de-4ef7-8862-5901a7fb6609\" width=\"150\">\nEs importante notar que los puntos azules significan que un alumno 'intentó' la aventura. Esto significa que ejecutaron un código en esta aventura y pasaron a la siguiente aventura, ¡así que esto no significa automáticamente que hayan hecho un buen trabajo!\nSi quieres ver cómo le está yendo a un alumno en particular, puedes hacer clic en su nombre en esta vista general. Esto es lo que verás si haces clic en marleen_h3a, por ejemplo:\n<img src=\"https://github.com/hedyorg/hedy/assets/80678586/f8c2480d-c724-46f9-a702-33532828de70\" width=\"800\">\nVerás que Marleen está teniendo problemas para programar. Ha intentado ejecutar varias veces un programa que contiene espacios en blanco, por lo que es posible que no se dé cuenta de que tiene que cambiar los ejemplos de código antes de ejecutarlos.\nDe este modo, este resumen puede darte una mejor comprensión de lo que le está costando a un alumno."
    -   title: Errores comunes
        text: "<img src=\"https://github.com/hedyorg/hedy/assets/80678586/e7af5ce3-ca74-48e7-9654-f17435596fbc\" width=\"500\">\nSi no sólo está interesado en las dificultades individuales de sus alumnos, sino que también le gustaría saber qué es lo que toda la clase parece estar haciendo mal, puede utilizar esta supervisión de errores comunes.\nLos mensajes de error más comunes que sus alumnos están recibiendo aparecerán en esta supervisión para usted, para que pueda dar algunas instrucciones más a toda la clase si es necesario.\nAl hacer clic en el error, puede ver qué alumnos están teniendo problemas con este error. Al hacer clic en resolver, eliminará este error de la lista."
    -   title: Resumen de programas por aventura
        text: "<img src=\"https://github.com/hedyorg/hedy/assets/80678586/f07bf714-7250-4711-82a1-616f9f7b55e8\" width=\"1000\">\nOtra visión general útil de todos los programas que tus alumnos hicieron en un nivel se puede encontrar en la página de tu clase. Ve a la página de la clase y haz clic en 'Visión general de los programas por aventura'. Aquí encontrarás este resumen.\nPuedes utilizar esta vista general para comprobar el trabajo de tus alumnos. Si han creado un programa en una aventura, aparecerá un ojo en la vista general. Haz clic en el ojo para ver su trabajo. ¿Te ha gustado? Entonces puedes marcar la casilla y aparecerá una marca verde.\nDe esta forma puedes tener una visión general de los resultados de tus alumnos."
-   title: Funciones adicionales de Hedy
    key: funciones
    subsections:
    -   title: Crea tu propia aventura
        text: Para los profesores también es posible crear su propia aventura. Este <a href="https://www.youtube.com/watch?v=A0zbXpxX4q4" target="_blank">vídeo</a> te muestra como crear tu propia aventura como un profesor y añadirla a tu(s) clase(s).
    -   title: Aventuras públicas
        text: |-
            ¿Te gustaría utilizar aventuras creadas por otros profesores? Entonces puedes visitar nuestra <a href="https://hedy.org/public-adventures" target="_blank"> página de aventuras públicas</a>. Aquí puedes encontrar todas las aventuras creadas por otros profesores de todo el mundo. Para encontrar la que mejor se adapte a ti, puedes seleccionar un nivel, un idioma e incluso una etiqueta. ¿Has encontrado una aventura que te gustaría utilizar? Luego puedes presionar "clonar" para hacer una copia de esa aventura en tu propia cuenta. Puedes editar el clon a tu gusto y agregar la aventura a tu clase de la misma manera que lo harías con tus propias aventuras. No puedes editar el original, por lo que el original siempre estará seguro. ¿Has creado una aventura tú mismo que te gustaría agregar a las aventuras públicas? ¡Marca la casilla que hace que tu aventura esté disponible públicamente al crear la aventura!
    -   title: Explorar página
        text: "En la página <a href=\"https://hedy.org/explore\" target=\"_blank\">explorar</a> se puede ver el trabajo de otros usuarios de Hedy. Puedes probar sus programas y usarlos como inspiración para crear algo genial.\nTambién puede agregar un programa que ha hecho a la página de exploración, haciendo clic en 'Guardar y compartir código' en la pantalla de codificación o ir a Mis programas y hacer clic en 'Compartir'.\n¿Ya no quieres compartir tu trabajo? Simplemente ve a 'Mis programas' y haz clic en 'Unshare'.\nSi desea más información sobre la página de exploración, consulte este <a href=\"https://www.youtube.com/watch?v=26boFjqvS5Q\" target=\"_blank\">vídeo</a>."
    -   title: Mis logros
        text: |-
            Si haces clic en tu nombre de usuario en la esquina superior derecha de la pantalla, podrás ir a <a href="https://hedy.org/my-achievements" target="_blank">Mis logros</a>. En esta página se recogen tus logros. Tus alumnos también tienen una página como esta.
            Cuando pasas el ratón sobre la insignia, verás cómo conseguirla. También hay insignias ocultas, que tendrás que averiguar por ti mismo cómo obtenerlas.
            Si quieres más información sobre los logros, echa un vistazo a este <a href="https://www.youtube.com/watch?v=-FjmKejukCs" target="_blank">vídeo</a>.
    -   title: Mejores Puntuaciones
        text: |-
            En <a href="www.https://hedy.org/highscores" target="_blank">esta página</a> puedes ver las mejores puntuaciones de todos los usuarios de Hedy.
            En este <a href="https://www.youtube.com/watch?v=IqTiUkBVTo8" target="_blank">vídeo</a> puedes aprender más sobre las mejores puntuaciones.
    -   title: Depurador
        text: |-
            ¿No funciona el código de tus alumnos? ¡Debe haber un error (fallo de programación) en él! Puedes usar el depurador para encontrar el fallo.
            El depurador es el botón mariquita en tu pantalla de programación. Si lo pulsas, puedes ejecutar tu código línea por línea para encontrar tu fallo.
            ¿Has encontrado el fallo? Pulsa el botón rojo de parada y el depurador se apagará.
    -   title: Leer en voz alta
        text: ¿Quieres que se lea en voz alta el resultado de tu programa? Entonces puedes usar la función de lectura en voz alta que se encuentra debajo del botón 'ejecutar código' en tu pantalla de programación.
    -   title: Modo programador
        text: |-
            ¿Te distraen todas las aventuras o quieres hacer un programa largo? Entonces echa un vistazo al interruptor 'Modo programador' debajo de tu pantalla de programación.
            El modo programador te permite a ti y a tus alumnos usar una pantalla de programación más grande.
    -   title: Fichas de ayuda
        text: |-
            En cada nivel hay un botón con este emoji 🤔. Tú y tus alumnos podéis encontrar allí los "trucos". En estos trucos, podéis encontrar todos los comandos que se pueden utilizar en este nivel en su forma correcta.
            Así que si has olvidado cómo funciona un comando, ¡simplemente echa un vistazo a los trucos!
    -   title: Vídeo
        text: Este <a href="https://www.youtube.com/watch?v=c4MntPPgl1Y" target="_blank">vídeo</a> te muestra aún más funciones de Hedy, como los trucos y el conmutador de las palabras clave.
-   title: Después de Hedy
    key: después
    subsections:
    -   title: ¿Qué hacer después de Hedy?
        text: "¡Felicitaciones por finalizar Hedy! Sus alumnos han aprendido a crear sus propios programas básicos en el lenguaje de programación Python.\nPor supuesto, podrías seguir programando en nuestro compilador Hedy, pero podría ser más emocionante para tus alumnos transferir a una interfaz \"real\" de Python.\n¿Te gustaría continuar enseñando Python? Entonces visite <a href=\"https://www.python.org/about/gettingstarted/\" target=\"_blank\">la página web de Python</a> para aprender cómo comenzar en otro compilador.\n\nAhora que sus alumnos tienen un conocimiento básico de programación en general, también puede enseñarles otros lenguajes de programación textual. El lenguaje puede cambiar pero los conceptos no, así que Hedy les dará una gran ventaja."
-   title: Respuestas a los ejercicios
    key: respuestas
    intro: |-
        Las respuestas a todos los ejercicios se pueden encontrar en el perfil público de la cuenta de usuario 'Hedy_answers'. A menudo alentamos a los alumnos a usar su propia creatividad en sus respuestas, por lo que estas respuestas son simplemente una guía sobre cómo podría ser una posible respuesta correcta.

        Para ir al perfil 'Hedy_answers', haz clic <a href="https://hedy.org/user/hedy_answers" target="_blank">aquí</a>.
-   title: Errores frecuentes
    key: common_mistakes
    intro: |-
        De los errores se aprende, ¡sobre todo en programación! Cometer errores es inevitable y una gran oportunidad para aprender, ¡pero para los profesores puede ser un reto encontrar la solución correcta a un error! Sobre todo porque los programas son cada vez más largos a medida que los alumnos avanzan de nivel. Por eso hemos elaborado una lista con los errores más frecuentes en cada nivel y sus soluciones.
    levels:
    -   level: '1'
        sections:
        -   title: Los alumnos olvidan escribir los comandos
            example:
                error_text: Por ejemplo, escribir una frase sin usar imprimir.
                error_code: Hedy no puede imprimir esto
                solution_text: Enseña a tus alumnos a siempre comenzar una linea de código con un comando.
                solution_code: '{print} ¡Hedy puede imprimir esto!'
        -   title: Los alumnos usan mayúsculas al escribir los comandos
            example:
                error_text: Los comandos no funcionarán si están en mayúsculas.
                error_code: |-
                    Ask ¿Por qué mi código no funciona?
                    Print Porque estoy usando mayúsculas.
                solution_text: Quita las mayúsculas.
                solution_code: |-
                    {ask} ¿Por qué mi código funciona ahora?
                    {print} ¡Porque eliminé las mayúsculas!
        -   title: Alumnos utilizan echo sin preguntar
            example:
                error_text: El comando echo se utiliza para repetir una respuesta después de un comando ask. Sin ask, echo no hará nada.
                error_code: '{echo} Tu nombre es'
                solution_text: Añade un comando «pregunta» para que funcione.
                solution_code: |-
                    {ask} ¿Cómo te llamas?
                    {echo} Tu nombre es
        -   title: Los alumnos quieren su palabra eco (variable) en el medio de una frase
            example:
                error_text: ¡Y tienen razón! Por eso, en el siguiente nivel aprenderán a utilizar las variables adecuadas.
                error_code: |-
                    {ask} ¿Qué lenguaje de programación es el más divertido?
                    {echo} ¡es el mejor!
                solution_text: 'En el nivel 1 tenemos que llegar hasta aquí:'
                solution_code: |-
                    {ask} ¿Qué lenguaje de programación es el más divertido?
                    {echo} El mejor es...
        -   title: 'Tortuga: los alumnos hacen que la tortuga se salga de la pantalla'
            example:
                error_text: A menudo, a los alumnos les encanta probar números grandes cuando usan la tortuga, lo que hace que la flecha se salga de la pantalla.
                error_code: |-
                    {forward} 300
                    {turn} 90
                solution_text: En el ejemplo, los alumnos tienden a pensar que el comando de giro falló, a pesar de que hizo lo que se suponía que debía hacer. Lo que ocurrió es que la tortuga sobrepasó los límites de la pantalla. Utiliza números más pequeños para evitar que esto ocurra.
                solution_code: |-
                    {forward} 100
                    {turn} 90
        -   title: 'Tortuga: Los alumnos usan el comando al revés, pero no hay tal comando.'
            example:
                error_text: Retroceder no es un comando.
                error_code: retroceder 100
                solution_text: 'Para que la tortuga retroceda, debes utilizar el comando adelante y un número negativo. Por ejemplo:'
                solution_code: '{forward} -100'
    -   level: '2'
        sections:
        -   title: Los alumnos cometen errores tipográficos en sus comandos
            example:
                error_text: Hedy no puede reconocer un comando mal escrito.
                error_code: 'prinnt No cometas errores tipográficos'
                solution_text: Enseña a tus alumnos a leer los mensajes de error. De esta forma, ellos pueden encontrar por sí solos que es lo que está mal.
                solution_code: '{print} No cometas errores tipográficos'
        -   title: Los estudiantes olvidan que el comando ask ha cambiado
            example:
                error_text: En este nivel, los alumnos aprenden sobre variables. El comando ask requiere variables también, pero los alumnos olvidan esto.
                error_code: preguntar qué te gustaría comer
                solution_text: En este nivel tienes que decirle a Hedy dónde debe guardar tu respuesta para ser usada luego. Esto se llama una variable.
                solution_code: pedir {is} {ask} Qué te gustaría comer
        -   title: Los alumnos intentan utilizar el comando `{echo}`
            example:
                error_text: Para algunos alumnos, puede ser frustrante aprender que el comando `{echo}` ya no funcione. Por eso es muy importante explicar las ventajas de usar variables. ¡Por ejemplo, puedes usar múltiples variables en un código y ponerlas donde quieras en una frase!
                error_code: |-
                    respuesta {is} {ask} ¡¿Por qué {echo} ya no funciona?!
                    {echo}
                solution_text: Usa una variable en su lugar.
                solution_code: |-
                    respuesta {is} {ask} ¿¡Por qué ya no funciona {echo}?!
                    {print} respuesta
        -   title: Los alumnos usan el nombre de una variable o como una palabra normal
            example:
                error_text: En el siguiente ejemplo, se usa la palabra 'nombre' como una variable, pero también como un texto normal. El resultado de este código será 'Hola mi Hedy es Hedy'.
                error_code: |-
                    nombre {is} Hedy
                    {print} Hola mi nombre es nombre
                solution_text: Así que no uses una palabra que quieras usar en el texto como nombre de variable. En el nivel 4, esto se soluciona con comillas.
                solution_code: |-
                    nombre {is} Hedy
                    {print} Hola soy nombre
        -   title: Los alumnos usan nombres de variables largos que contienen dos palabras.
            example:
                error_text: Una variable debe nombrarse con una palabra. Puede utilizar un guión bajo para unir dos palabras. Eso cuenta como una.
                error_code: puerta escogida es preguntar Qué puerta eliges
                solution_text: Añade un guion bajo.
                solution_code: puerta_elegida {is} {ask} qué puerta escoges
        -   title: Es posible que los alumnos usen dos nombres diferentes para la misma variable
            example:
                error_text: En este ejemplo, el alumno ha utilizado 'caballo' y 'nombre' para las mismas variables.
                error_code: |-
                    caballo {is} {ask} Cómo se llama tu caballo
                    {print} Tu caballo se llama nombre
                solution_text: Comprueba siempre cuando una variable tiene el mismo nombre en todo el código. Las pequeñas diferencias pueden ser difíciles de detectar (por ejemplo los plurales) pero interferirán con tu código.
                solution_code: |-
                    nombre {is} {ask} Cómo se llama tu caballo
                    {print} Tu caballo se llama nombre
    -   level: '3'
        sections:
        -   title: Los alumnos intentan imprimir listas enteras
            example:
                error_text: No se puede imprimir una lista. Con {at} {random} sólo puedes imprimir un elemento de la lista.
                error_code: |-
                    productos {is} manzanas, leche, chocolate
                    {print} productos
                solution_text: Para imprimir una lista de todos los productos de la compra, simplemente tienes que ponerlos después de un comando `{print}`. Si no, puedes usar la lista para imprimir un objeto con `{at}` `{random}`.
                solution_code: |-
                    {print} manzanas, leche, chocolate

                    #o

                    comestibles {is} manzanas, leche, chocolate
                    {print} comestibles {at} {random}
        -   title: Los alumnos utilizan el nombre de una variable o lista como texto normal
            example:
                error_text: Probablemente este problema ocurría también en el nivel 2. Ahora puede ocurrir también con las listas.
                error_code: |-
                    nombre {is} Hedy
                    {print} Hola mi nombre es nombre

                    #o

                    animal {is} rinoceronte, abeja, cisne
                    {print} El mejor animal es... animal {at} {random}
                solution_text: No uses el nombre de variables o listas en texto normal para imprimir. En el nivel 4 este problema se soluciona con las comillas.
                solution_code: |-
                    nombre {is} Hedy
                    {print} Hola soy nombre

                    #o

                    animales {is} rinoceronte, abeja, cisne
                    {print} El mejor animal es... animales {at} {random}
        -   title: Los alumnos se olvidan `{at}` en `{at}` `{random}`
            example:
                error_text: Como en el ejemplo
                error_code: |-
                    pájaros {is} gorrión, gaviota, petirrojo
                    {print} pájaros aleatorio
                solution_text: Este problema se resuelve añadiendo la palabra en.
                solution_code: |-
                    pájaros {is} gorrión, gaviota, petirrojo
                    {print} pájaros {at} {random}
        -   title: Los alumnos olvidan utilizar el comando `{print}` cuando también utilizan el comando `{at}` `{random}`
            example:
                error_text: O a veces pondrán `{at}` `{random}` al principio de la línea.
                error_code: |-
                    fruta {is} manzana, cereza, plátano
                    fruta {at} {random}
                solution_text: Haz hincapié a tus alumnos de que siempre se necesita imprimir un texto.
                solution_code: |-
                    fruta {is} manzana, cereza, plátano
                    {print} fruta {at} {random}
        -   title: Los alumnos olvidan usar comas en sus listas
            example:
                error_text: En una lista los objetos están separados por una coma.
                error_code: |-
                    pizas {is} champiñones atún cuatro estaciones
                    {print} pizzas {at} {random}
                solution_text: Después de cada elemento de la lista, debe haber una coma
                solution_code: |-
                    pizzas {is} setas, de atún, cuatro estaciones
                    {print} pizzas {at} {random}
        -   title: Los alumnos intentan usar `{at}` `{random}` sin una lista
            example:
                error_text: Por ejemplo
                error_code: |-
                    clubs {is} Manchester United
                    {print} clubs {at} {random}
                solution_text: Hedy no puede imprimir nada en aleatorio, porque no hay una lista de la que elegir.
                solution_code: |-
                    clubs {is} Manchester United, Bayern Munchen, FC Barcelona
                    {print} clubs {at} {random}
        -   title: Los alumnos intentan utilizar añadir/eliminar sin una lista
            example:
                error_text: En el ejemplo siguiente 'nombres' no es una lista, sino una variable. No se le puede añadir nada.
                error_code: |-
                    nombres {is} Jake
                    tu_nombre {is} {ask} ¿Quién eres tú?
                    {add} tu_nombre {to} nombres
                    {print} nombres {at} {random}
                solution_text: Primero tiene que haber una lista, así que tienes que añadir un segundo nombre para convertir nombres en una lista, por ejemplo Amy. Si no quieres Amy en tu lista, puedes usar borrar para borrarlo después.
                solution_code: |-
                    nombres {is} Jake, Amy
                    tu_nombre {is} {ask} ¿Quién eres tú?
                    {add} tu_nombre {to} nombres
                    {print} nombres {at} {random}
        -   title: Los alumnos olvidan utilizar `{to}`/`{from}` en `{add}`/`{remove}`
            example:
                error_text: Sin a/de el comando añadir/borrar no funcionará.
                error_code: |-
                    aventuras {is} historia, loro, dados
                    opción {is} ¿Qué aventura te gusta más?
                    {add} opción
                    {remove} dados
                    {print} Me encanta aventuras {at} {random}
                solution_text: Hedy tiene que saber a qué lista debe añadirse/eliminarse el objeto.
                solution_code: |-
                    aventuras {is} historia, loro, dado
                    opción {is} ¿Qué aventura te gusta más?
                    {add} opción {to_list} aventuras
                    {remove} dado {from} aventuras
                    {print} Me encanta aventuras {at} {random}
    -   level: '4'
        sections:
        -   title: Los alumnos olvidan utilizar las comillas en ambos lados del texto
            example:
                error_text: En este nivel imprimir y preguntar necesitan un conjunto de comillas. Una antes del texto y otra después.
                error_code: |-
                    {print} Hola
                    estado_animo {is} {ask} '¿Cómo estás?
                solution_text: Añade las comillas correctas.
                solution_code: |-
                    {print} 'Hola'
                    estado_animo {is} {ask} '¿Cómo estás?'
        -   title: Los alumnos utilizan las comillas equivocadas
            example:
                error_text: Es importante empezar la clase comprobando si los alumnos saben escribir correctamente las comillas. En Hedy, los alumnos pueden utilizar comillas simples ('') y dobles (""). Por otro lado, los puntos suspensivos no se consideran comillas válidas (``).
                error_code: |-
                    {print} `Bienvenido al restaurante`
                    comida {is} {ask} "¿Qué te gustaría pedir?"
                solution_text: 'Estas son las comillas correctas:'
                solution_code: |-
                    {print} 'Bienvenido al restaurante'
                    comida {is} {ask} '¿Qué te gustaría pedir?'
        -   title: Los alumnos utilizan un apóstrofo en su texto
            example:
                error_text: Desde este nivel en adelante no se permiten los apóstrofos. Se suelen usar en inglés al escribir contracciones como you're, don't o what's.
                error_code: "{print} 'No está permitido escribir esto'"
                solution_text: Puedes elegir usar la gramática incorrecta y solo omitir el apóstrofo. O podrías utilizar el ` como un apóstrofo.
                solution_code: |-
                    {print} 'Se permite que escribas esto (Youre)'
                    {print} 'Y también puedes escribir esto (you`re)'
    -   level: '5'
        sections:
        -   title: Los alumnos olvidan utilizar `{print}` en un comando `{if}`
            example:
                error_text: Después de que los alumnos usen `{if}` o `{else}` se olvidan de usar un segundo comando como `{print}` o `{ask}`.
                error_code: |-
                    {if} nombre {is} Hedy '¡Genial!'
                    {else}  ¡Hedy {is} mejor!
                solution_text: Añade el comando imprimir para arreglarlo.
                solution_code: |-
                    {if} nombre {is} Hedy {print} '¡Genial!'
                    {else} {print} '¡Hedy es mejor!'
        -   title: Los alumnos podrían utilizar dos nombres distintos para la misma variable
            example:
                error_text: En este ejemplo el alumno ha utilizado 'caballo' y 'nombre' para las mismas variables.
                error_code: |-
                    caballo {is} {ask} '¿Cómo se llama tu caballo?'
                    {if} nombre {is} Hoguera {print} 'mola'
                    {else} {print} '¡no mola tanto!'
                solution_text: Comprueba si la variable tiene el mismo nombre en todo el código. Las pequeñas diferencias pueden ser difíciles de encontrar (por ejemplo en los plurales) pero pueden interferir con el código.
                solution_code: |-
                    caballo {is} {ask} 'Cómo se llama tu caballo'
                    {if} caballo {is} Hoguera {print} '¡mola!'
                    {else} {print} '¡no mola tanto!'
        -   title: Los alumnos siguen olvidando las comillas en ambos lados
            example:
                error_text: El uso del comando `si` puede hacer que las líneas de código sean muy largas y los alumnos tienden a olvidar el uso de las comillas.
                error_code: |-
                    {if} nombre {is} Hedy {print} divertido
                    {else} {print} '¡meh!
                solution_text: Usa siempre dos comillas en un comando imprimir.
                solution_code: |-
                    {if} nombre {is} Hedy {print} 'divertido'
                    {else} {print} '¡meh!'
        -   title: Los alumnos usan comillas alrededor de los nombres de las variables
            example:
                error_text: En este nivel no hay comillas alrededor de los nombres de variables.
                error_code: |-
                    {if}  nombre  {is} 'Hedy' {print} 'divertido'
                    {else} {print} '¡meh!'
                solution_text: Borra las comillas para hacer que el código funcione.
                solution_code: |-
                    {if} nombre {is} Hedy {print} 'divertido'
                    {else} {print} '¡meh!
        -   title: Los alumnos utilizan nombres de variables largos que contienen dos o más palabras
            example:
                error_text: Las variables en Hedy no pueden contener espacios, por lo que, con el fin de utilizar juntos varias palabras, los alumnos necesitan para conectarlos utilizando guiones bajos (_)
                error_code: puerta elegida es preguntar  ¿Qué puerta eliges?
                solution_text: Añade un guión bajo.
                solution_code: puerta_elegida {is} {ask} '¿qué puerta eliges?'
        -   title: Los alumnos quieren varias respuestas correctas
            example:
                error_text: Por ejemplo, este alumno quiere que Hedy diga a todos sus amigos que son graciosos, mientras que a otros compañeros debería decirles que no lo son.
                error_code: "{if} nombre {is} Jesse, David, Souf {print} 'Eres divertido' {else} {print} 'No eres divertido'"
                solution_text: |-
                    Puedes usar el comando `{in}` para eso. Se explica en un nivel superior, pero ya funciona en el nivel 5.
                    Otra solución es usar varios comandos `{if}` y no comando `{else}`. La desventaja es que no le dirá a los otros compañeros que no son divertidos.
                solution_code: |-
                    amigos {is} Jesse, David, Souf
                    nombre {is} {ask} '¿Quién eres?'
                    {if} nombre {in} amigos {print} 'Eres divertido'
                    {else} {print} 'No eres divertido'

                    #o

                    nombre {is} {ask} '¿Quién eres?'
                    {if} nombre {is} Jesse {print} 'Eres divertido'
                    {if} nombre {is} David {print} 'Eres divertido'
                    {if} nombre {is} Souf {print} 'Eres divertido'
        -   title: Los alumnos hacen que el nombre de la variable sea el mismo que el valor en la sentencia `{if}`
            example:
                error_text: En el siguiente ejemplo la contraseña es 'contraseña'. Esto hará que siempre sea correcta.
                error_code: |-
                    contraseña {is} {ask} '?Cuál es la contraseña?'
                    {if} contraseña {is} contraseña {print} 'Acceso permitido'
                    {else} {print} '¡Acceso denegado!'
                solution_text: Elige un nombre distinto para tu variable.
                solution_code: |-
                    contraseña_secreta {is} {ask} 'Cuál es la contraseña'
                    {if} contraseña_secreta {is} contraseña {print} '¡Acceso permitido!'
                    {else} {print} '¡Acceso denegado!'
    -   level: '6'
        sections:
        -   title: Los alumnos tienen problemas con las comillas
            example:
                error_text: Algunos alumnos tienen problemas al añadir o no comillas. Si añades comillas, la pantalla de salida mostrará literalmente '5+5'.
                error_code: "{print} '5 + 5'"
                solution_text: En este código la pantalla de salida imprimirá '10'.
                solution_code: '{print} 5 + 5'
        -   title: Los alumnos tiene problemas con el concepto de hacer cálculos con una variable
            example:
                error_text: 'Algunos alumnos tendrán dificultades al hacer cálculos con variables. Intenta enseñarles ejemplos muy sencillos, como:'
                error_code: |-
                    edad = {ask} '¿Cuántos años tienes?'
                    {print} 'El año que viene tendré ' edad + 1
                solution_text: O ve un paso más allá.
                solution_code: |-
                    precio = 0
                    {print} 'Bienvenido a nuestro restaurante de hamburguesas'
                    hamburguesa = {ask} '¿Quieres una hamburguesa?'
                    {if} hamburguesa = sí precio = precio + 10
                    bebida = {ask} '¿Quieres una bebida?'
                    {if} bebida = sí precio = precio + 4
                    {print} 'Serán ' precio ' euros por favor'
    -   level: '7'
        sections:
        -   title: Los alumnos olvidan una de las palabras en el comando repetir, u olvidan el comando imprimir
            example:
                error_text: Asegúrate que los alumnos saben usar tanto el comando repetir completo y el comando imprimir.
                error_code: |-
                    {repeat} 3 {times}  Porque él es un buen compañero
                    {repeat} 3 imprimir
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    {repeat} 3 {times} {print} 'Porque es un buen amigo'
                    {repeat} 3 {times} {print} '¡Que nadie puede negar!'
        -   title: Los alumnos intentan repetir varias líneas
            example:
                error_text: En este nivel sólo puedes repetir una línea de código varias veces. En este código el alumno quiso imprimir 3 bebidas diferentes, pero no funcionará. Hará la pregunta 3 veces y sólo imprime la última respuesta.
                error_code: |-
                    {repeat} 3 {times} bebida = {ask} '¿Qué te gustaría beber?'
                    {print} bebida
                solution_text: Deberías ir al siguiente nivel para ser capaz de repetir varias líneas. Así que en este nivel tendrás que imprimir todo por separado.
                solution_code: |-
                    bebida = {ask} '¿Qué te gustaría beber?'
                    {print} bebida
                    bebida = {ask} '¿Qué te gustaría beber?'
                    {print} bebida
                    bebida = {ask} '¿Qué te gustaría beber?'
                    {print} bebida
        -   title: Los alumnos hacen programas que tardan demasiado en ejecutar
            example:
                error_text: En este nivel es muy fácil hacer programas que tarden mucho en completarse. Si el programa tarda demasiado, se detendrá, esto con la intención de evitar forzar la máquina al alumno.
                error_code: "{repeat} 100 {times} {print} '¿Cuántas veces puedo repetir esto?'"
                solution_text: Asegúrate que el código no tarda mucho en ejecutarse
                solution_code: "{repeat} 20 {times} {print} 'Esto es suficiente'"
    -   level: '8'
        sections:
        -   title: Los alumnos usan la sangría mal
            example:
                error_text: La sangría es un concepto nuevo en este nivel, y para algunos alumnos puede resultar difícil de aprender. Asegúrate de que practiquen algunos ejemplos sencillos antes de hacer un programa completo con ella.
                error_code: |-
                    {repeat} 3 {times}
                    {print} 'hola'
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    {repeat} 3 {times}
                    	{print} 'hola'
        -   title: Los alumnos sólo repiten 1 línea cuando quieren repetir varias líneas
            example:
                error_text: Por ejemplo, en el siguiente código el alumno quiso coger los pedidos de bebida de 3 personas. Pero, en cambio, el programa preguntó 3 veces, pero sólo escribió un pedido.
                error_code: |-
                    {repeat} 3 {times}
                    	bebida = {ask} '¿Qué quieres beber?'
                    {print} bebida
                solution_text: |-
                    En el código correcto la tercera línea empieza también con sangría. Así pertenece al bloque repetir y por tanto se repetirá 3 veces.
                    Enseñar estas diferencias a los alumnos les puede ayudar a entender por qué necesitan sangría para hacer que sus programas funcionen.
                solution_code: |-
                    {repeat} 3 {times}
                    	bebida = {ask} '¿Qué quieres beber?'
                    	{print} bebida
        -   title: Los alumnos quieren anidar sentencias `{if}`, o poner sentencias `{if}` dentro de un bucle
            example:
                error_text: |-
                    En este nivel los alumnos aún no tienen permitido poner sentencias `{if}` dentro de otras sentencias `{if}` o dentro de bucles repetir.
                    En este nivel esto está permitido.
                error_code: |-
                    cumpleaños = {ask} '¿Es tu cumpleaños?'
                    {if} cumpleaños = sí
                    	{repeat} 3 {times}
                    		{print} '¡Hip Hip Hurra!'
                solution_text: 'Este es el código correcto para este nivel:'
                solution_code: |-
                    cumpleaños = {ask} '¿Es tu cumpleaños?'
                    {if} cumpleaños = sí
                    	{print} '¡Hip Hip Hurra!'
                    	{print} '¡Hip Hip Hurra!'
                    	{print} '¡Hip Hip Hurra!'
        -   title: Los alumnos hacen programas que tardan demasiado en ejecutar
            example:
                error_text: En este nivel es muy fácil hacer programas que tarden mucho en completarse. Si el programa tarda demasiado, se detendrá, esto con la intención de evitar forzar la máquina al alumno.
                error_code: |-
                    {repeat} 100 {times}
                    	{print} '¿Cuántas veces puedo repetir esto?'
                solution_text: Asegúrate que el código no tarda mucho en ejecutarse
                solution_code: |-
                    {repeat} 20 {times}
                    	{print} 'Esto es suficiente'
        -   title: Los alumnos usan el comando `{if}` para comprobar si el valor de la variable es el mismo que el nombre de la variable
            example:
                error_text: |-
                    Hemos observado un error común entre nuestros alumnos: intentan crear un programa que compruebe si hay una contraseña, pero hacen que la contraseña sea 'contraseña'.
                    En la línea 2 se pide al ordenador que compruebe si la variable contraseña es la misma que la variable contraseña, por lo tanto sí. Lo que significa que la respuesta es siempre sí.
                    Así que con este código la respuesta siempre será 'Puedes entrar' sin importar lo que el jugador rellene.
                error_code: |-
                    contraseña {is} {ask} '?Cuál es la contraseña?'
                    {if} contraseña {is} contraseña
                    	{print} 'Puedes entrar'
                    {else}
                    	{print} 'No puedes entrar'
                solution_text: Puedes arreglar este error añadiendo comillas. Así el ordenador sabe que la segunda contraseña en el `{if} contraseña {is} 'contraseña'` tiene un valor de cadena texto (como texto normal) y no el nombre de la variable.
                solution_code: |-
                    contraseña {is} {ask} '¿Cuál es la contraseña?'
                    {if} contraseña {is} 'contraseña'
                        {print} 'Puedes entrar'
                    {else}
                        {print} 'No puedes entrar'
    -   level: '9'
        sections:
        -   title: Los alumnos cometen errores con la sangría
            example:
                error_text: La parte más dificil sobre este nivel es conseguir la sangría correcta. A los alumnos les encanta anidar sentencias `{if}`, a veces incluso dentro de otras sentencias anidadas `{if}`. Llevar la cuenta de la sangría puede ser bastante difícil.
                error_code: |-
                    {print} 'Robin está caminando por el centro'
                    ubicación = {ask} '¿Va Robin a entrar a una tienda, o se va a casa?'
                    {if} ubicación {is} tienda
                        {print} 'Entra en la tienda.'
                        {print} 'Robin ve un libro interesante'
                        libro = {ask} '¿Va a comprar el libro?'
                            {if} libro {is} sí
                    {print} 'Robin compra el libro y se va a casa'
                    {else}
                        {print} 'Robin sale de la tienda y se va a casa'
                    {else}
                        {print} 'Robin se va a casa'
                solution_text: Este es el código correcto. Intenta llevar la cuenta de todas las diferentes construcciones al poner sentencias `{if}` dentro de otras sentencias `{if}`.
                solution_code: |-
                    {print} 'Robin está caminando por el centro'
                    ubicación = {ask} '¿Va Robin a entrar a una tienda, o se va a casa?'
                    {if} ubicación {is} tienda
                        {print} 'Entra en la tienda.'
                        {print} 'Robin ve un libro interesante'
                        libro = {ask} '¿Va a comprar el libro?'
                        {if} libro {is} sí
                            {print} 'Robin compra el libro y se va a casa'
                        {else}
                            {print} 'Robin sale de la tienda y se va a casa'
                    {else}
                        {print} 'Robin se va a casa'
    -   level: '10'
        sections:
        -   title: Los alumnos no utilizan correctamente el comando `{for}`
            example:
                error_text: Con frecuencia vemos que los alumnos intentan imprimir la lista (animales, en el ejemplo) en vez de los objetos de la lista.
                error_code: |-
                    animales {is} perro, gato, pez globo
                    {for} animal {in} animales
                      {print} 'Amo ' animales
                solution_text: La palabra animales de la última línea debería cambiarse por animal.
                solution_code: |-
                    animales {is} perro, gato, pez globo
                    {for} animal {in} animales
                      {print} 'Amo ' animal
        -   title: Los alumnos olvidan la sangría
            example:
                error_text: Los alumnos tienden a olvidar el usar sangría tras un comando para.
                error_code: |-
                    animales {is} perro, gato, pez globo
                    {for} animal {in} animales
                    {print} 'Amo ' animales
                solution_text: Debes usar sangría tras un comando para.
                solution_code: |-
                    animales {is} perro, gato, pez globo
                    {for} animal {in} animales
                      {print} 'Amo ' animal
    -   level: '11'
        sections:
        -   title: Los alumnos olvidan usar sangría
            example:
                error_text: Asegúrate que los alumnos usan sangría.
                error_code: |-
                    {for} i {in} {range} 1 {to} 5
                    {print} i
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    {for} i {in} {range} 1 {to} 5
                        {print} i
        -   title: Los alumnos no entienden la i
            example:
                error_text: |-
                    Algunos alumnos no entienden que i es una variable. i es elegida, porque se usa en programación en Python, pero puedes también podrías utilizar otro nombre de variable.
                    Por ejemplo, este código:
                error_code: |-
                    {for} i {in} {range} 1 {to} 5
                    {print} i
                solution_text: También podría sustituirse por este código. Funciona igual.
                solution_code: |-
                    {for} plátano {in} {range} 1 {to} 5
                        {print} plátano
    -   level: '12'
        sections:
        -   title: Los alumnos olvidan las comillas
            example:
                error_text: Los alumnos necesitan mas comillas ahora que en los niveles anteriores. En este ejemplo se olvidaron las comillas en la lista y en el comando `{if}`.
                error_code: |-
                    superhéroes = Spiderman, Batman, Iron Man
                    superhéroe = superhéroes {at} {random}
                    {if} superhéroe = Batman
                        {print} '¡SOY BATMAN!'
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    superhéroes = 'Spiderman', 'Batman', 'Iron Man'
                    superhéroe = superhéroes {at} {random}
                    {if} superhéroe {is} 'Batman'
                        {print} '¡SOY BATMAN!'
        -   title: Los alumnos usan las comillas en los números que quieren usar para cálculos
            example:
                error_text: |-
                    Puedes usar comillas en números, pero sólo si quieres que el ordenador los considere como texto. Esto implica que no puedes hacer cálculos con el número.
                    En el siguiente ejemplo, no puedes hacer cálculos con el numero 25, porque está entre comillas.
                error_code: |-
                    puntuación = '25'
                    respuesta {is} {ask} '¿Quieres un punto?'
                    {if} respuesta {is} 'sí'
                        puntuación = puntuación + 1
                        {print} puntuación
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    puntuación = 25
                    respuesta {is} {ask} '¿Quieres un punto?'
                    {if} respuesta {is} 'sí'
                        puntuación = puntuación + 1
                        {print} puntuación
        -   title: Los alumnos usan comas en vez de puntos en los números decimales
            example:
                error_text: Los números decimales se pueden usar desde este nivel, pero no puedes usar comas.
                error_code: '{print} 2,5 + 2,5'
                solution_text: 'Este es el código correcto:'
                solution_code: '{print} 2.5 + 2.5'
    -   level: '13'
        sections:
        -   title: Los alumnos confunden `{and}` con `{or}`
            example:
                error_text: Ambos comandos podrían parecer similares, pero su función es muy diferente.
                error_code: |-
                    juego {is} {ask} '¿Quieres jugar a un juego?'
                    tiempo {is} {ask} '¿Tienes tiempo para jugar?'
                    {if} juego {is} 'sí' {or} tiempo {is} 'sí'
                        {print} '¡Juguemos!'
                solution_text: En este caso, la persona debería responder sí a ambas preguntas, así que debes usar `and`.
                solution_code: |-
                    juego {is} {ask} '¿Quieres jugar a un juego?'
                    tiempo {is} {ask} '¿Tienes tiempo para jugar?'
                    {if} juego {is} 'sí' {and} tiempo {is} 'sí'
                        {print} '¡Juguemos!'
    -   level: '14'
        sections:
        -   title: Los alumnos confunden los signos < y >
            example:
                error_text: A menudo, los alumnos ya están familiarizados con estos signos de sus clases de matemáticas. Pero si tus alumnos no conocen todavía estos signos, podrían tener un desafío con esto.
                error_code: |-
                    edad = {ask} '¿Cuántos años tienes?'
                    {if} edad < 12
                        {print} '¡Eres mayor que yo!'
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    edad = {ask} '¿Cuántos años tienes?'
                    {if} edad > 12
                        {print} '¡Eres mayor que yo!'
        -   title: Los alumnos usan los signos incorrectos para `!=` `<=` y `>=`
            example:
                error_text: Estos signos probablemente sean nuevos para la mayoría de los alumnos. Asegúrate de explicar estos signos a tus alumnos.
                error_code: |-
                    nombre = {ask} '¿Cómo te llamas?'
                    {if} nombre =  'Hedy'
                        {print} 'No eres Hedy'
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    nombre = {ask} '¿Cómo te llamas?'
                    {if} nombre != 'Hedy'
                        {print} 'No eres Hedy'
        -   title: Los alumnos olvidan usar el signo ==
            example:
                error_text: En este nivel, los alumnos todavía pueden usar el = o es. Pero en otros niveles, o en Python, podrían tener problemas por eso. Así que es mejor enseñarles a usarlo.
                error_code: |-
                    nombre = {ask} '¿Cómo te llamas?'
                    {if} nombre = 'Hedy'
                        {print} '¡Eres genial!'
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    nombre = {ask} '¿Cómo te llamas?'
                    {if} nombre == 'Hedy'
                        {print} '¡Eres genial!'
    -   level: '15'
        sections:
        -   title: Los alumnos olvidan la sangría en el bucle mientras
            example:
                error_text: La sangría suele ser complicada para los alumnos.
                error_code: |-
                    respuesta = 0
                    {while} respuesta != 25
                    respuesta = {ask} '¿Cuánto es 5 veces 5?'
                    {print} 'Se ha dado una respuesta correcta'
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    respuesta = 0
                    {while} respuesta != 25
                        respuesta = {ask} '¿Cuánto es 5 veces 5?'
                    {print} 'Se ha dado una respuesta correcta'
    -   level: '16'
        sections:
        -   title: Los alumnos olvidan los corchetes
            example:
                error_text: Desde este nivel en adelante las listas deben ir entre corchetes.
                error_code: |-
                    helado = 'fresa', 'chocolate'
                    {print} 'Me encanta el helado de ' helado[{random}]
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    helado = ['fresa', 'chocolate']
                    {print} 'Me encanta el helado de ' helado[{random}]
        -   title: Los alumnos usan los corchetes incorrectos
            example:
                error_text: Desde este nivel en adelante las listas deben ir entre corchetes.
                error_code: |-
                    helado = ('fresa', 'chocolate')
                    {print} 'Me encanta el helado de ' helado[{random}]
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    helado = ['fresa', 'chocolate']
                    {print} 'Me encanta el helado de ' helado[{random}]
        -   title: Los alumnos se olvidan las comillas mientras se centran los corchetes
            example:
                error_text: A veces los alumnos están tan atentos al nuevo aspecto de la sintaxis, que se olvidan las comillas.
                error_code: |-
                    helado = [fresa, chocolate]
                    {print} 'Me encanta el helado de ' helado[{random}]
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    helado = ['fresa', 'chocolate']
                    {print} 'Me encanta el helado de ' helado[{random}]
        -   title: Los alumnos todavía usan el viejo comando en aleatorio
            example:
                error_text: A veces los alumnos están tan atentos al nuevo aspecto de la sintaxis, que se olvidan las comillas.
                error_code: |-
                    helado = [fresa, chocolate]
                    {print} 'Me encanta el helado de ' helado en aleatorio
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    helado = ['fresa', 'chocolate']
                    {print} 'Me encanta el helado de ' helado[{random}]
        -   title: Los alumnos se olvidan las comillas cuando se centran en los corchetes
            example:
                error_text: A veces los alumnos están tan atentos al nuevo aspecto de la sintaxis, que se olvidan las comillas.
                error_code: |-
                    helado = [fresa, chocolate]
                    {print} 'Me encanta el helado de ' helado[{random}]
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    helado = ['fresa', 'chocolate']
                    {print} 'Me encanta el helado de ' helado[{random}]
    -   level: '17'
        sections:
        -   title: Los alumnos usan `{elif}` como `{else}`, sin una condición
            example:
                error_text: El comando `{elif}` necesita una condición tras él. No se puede usar como `{else}`, sin una condición.
                error_code: |-
                    color = preguntar '¿Cuál es tu color favorito?'
                    {if} color == 'verde':
                        {print} 'el verde es bonito'
                    {elif}:
                        {print} 'Me gusta el verde'
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    color = {ask} '¿Cuál es tu color favorito?'
                    {if} color == 'verde':
                        {print} 'el verde es bonito'
                    {elif} color == amarillo:
                        {print} 'el amarillo está bien'
                    {else}:
                        {print} 'Me gusta el verde'
        -   title: Los alumnos se olvidan los dos puntos
            example:
                error_text: Tras cada comando que necesite sangría, se deben usar dos puntos.
                error_code: |-
                    respuesta = preguntar '¿Qué tal estás?'
                    {if} respuesta {is} 'genial'
                        {print} '¡Yo también!'
                    {elif} respuesta {is} 'mal'
                        {print} '¡Deja que te anime!'
                    {else}
                        {print} '¡Estoy genial!'
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    respuesta = {ask} '¿Qué tal estás?'
                    {if} respuesta {is} 'genial':
                        {print} '¡Yo también!'
                    {elif} respuesta {is} 'mal':
                        {print} '¡Deja que te anime!'
                    {else}:
                        {print} '¡Estoy genial!'
    -   level: '18'
        sections:
        -   title: Los alumnos olvidan usar los paréntesis
            example:
                error_text: Los alumnos olvidarán poner paréntesis alrededor de sus textos.
                error_code: "{print} '¡mi nombre es Hedy!'"
                solution_text: 'Este es el código correcto:'
                solution_code: "{print}('¡mi nombre es Hedy!')"
        -   title: Los alumnos todavía usarán el comando preguntar
            example:
                error_text: El comando preguntar se ha usado desde el nivel 1. Así que puede ser complicado que los alumnos cambien a entrada en vez de preguntar.
                error_code: |-
                    {print}('¡Mi nombre es Hedy!')
                    nombre = preguntar('¿Cómo te llamas?')
                    {print}('Así que tu nombre es ', nombre)
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    {print}('¡Mi nombre es Hedy!')
                    nombre = {input}('¿Cómo te llamas?')
                    {print}('Así que tu nombre es ', nombre)
        -   title: Los alumnos pueden utilizar los paréntesis como comillas
            example:
                error_text: Han aprendido a usar las variables fuera de las comillas, así que podrían hacer lo mismo con los paréntesis. Lo cuál no es la manera correcta de usarlos.
                error_code: |-
                    temperatura = 25
                    {print}('Hay ') temperatura ('grados fuera')
                solution_text: 'Este es el código correcto:'
                solution_code: |-
                    temperatura = 25
                    {print}('Hay ', temperatura, 'grados fuera')
