adventures:
    story:
        name: Poveste
        default_save_name: Poveste
        description: Poveste
        levels:
            1:
                example_code: |
                    ```
                    {ask} Personajul principal al poveștii este
                    {print} Personajul principal merge acum prin pădure
                    {echo} E un pic speriat,
                    {print} Aude tot felul de zgomote oriunde
                    {print} Ii este frica de o pădure bântuita
                    ```
                story_text_2: "### Exercițiu\nCrează acum povestea ta cu cel puțin 6 line de cod.\nAceastă poveste nu poate fi la fel ca si codul din examplu. \nUtilizează cel puțin o dată comanda `{ask}` și o comandă `{echo}` .\nPoți scrie ceva despre ceea ce iți place ție. \nDacă nu ai idei, alege unul din următoarele subiecte: cinema, meci de fotbal sau o zi la grădina zoologică.\n"
            2:
                story_text: "In nivelul 2 poți face o poveste mai frumoasă și interesantă. Numele personajului principal poate fi oriunde în propoziție.\n\nPentru a crea asta trebuie să programezi un pic mai mult de data asta. Trebuie să decizi numele personajului principal. \n\nPoți pune acum numele oriunde vrei in propoziție.\n"
                example_code: |-
                    ```
                    {print} 'OO NU! Dinozaurul T-rex se apropie!'
                    end = {ask} 'Vrei un sfârșit fericit sau trist?'
                    {if} end {is} fericit
                        {print} 'Richard sare exact la timp inapoi in mașina timpului!'
                        {print} _
                    {else}
                        {print} 'Oo nu! Richard se mișcă prea încet...'
                        {print} _
                    ```
            10:
                story_text: "In acest nivel poți folosi comenzile  `{if}` și `{repeat}` in interiorul altor `{if}` și `{repeat}` comenzi. \nAceasta posibilitate iți oferă mai multe opțiuni si te ajută sa creezi o poveste interactivă.\n\n### Exercițiu 1\nCompletează programul astfel incât comanda `{if}` funcționează corect.\n\n### Exercițiul 2\nAdaugă `{if}` și `{else}` in partea din poveste in care Robin merge acasă.\n\n### Exercițiul 3\nIntoarce-te la povestea de la nivelul și folosește cel puțin de două ori comanda `{if}`s în interiorul altei comenzi `{if}`.\n"
    default:
        name: Introducere
        default_save_name: introducere
        description: Explicația nivelului
        levels:
            1:
                story_text: |
                    În Nivelul 1 poți folosi comenzile `{print}`, `{ask}` și `{echo}`.
                    Introdu codul tău în câmpul de programare. Sau apasă butonul verde din blocul de cod de exemplu, și codul va fi introdus pentru tine!
                    Încearcă singur codul cu butonul verde 'Rulează codul' sub câmpul de programare.

                    Poți afișa text pe ecran folosind comanda `{print}`.
            3:
                story_text: |
                    În nivelul 3 poți face o listă. Poți lăsa calculatorul să aleagă ceva aleatoriu din listă. Faci acest lucru cu `{at} {random}`.
            4:
                story_text: |
                    In nivelul 4 `{ask}` și `{print}` s-au schimbat.
                    Trebuie sa adaugi textul pe care dorești sa îl printezi între ghilimele.
                    Acest lucru este folositor, pentru că acum poți printa toate cuvintele pe care le dorești. De asemenea și cuvintele pe care le stocai cu `{is}`.
                    Majoritatea limbajelor de programare folosesc ghilimele când trebuie să printezi, deci acum ești cu un pas mai aproape de programarea reală!
                example_code: |
                    ```
                    {print} 'Trebuie să folosești apostrofuri de acum înainte!'
                    răspuns {is} {ask} 'Ce trebuie să folosim de acum înainte?'
                    {print} 'Trebuie să folosim' răspuns
                    ```
            6:
                story_text: |
                    La nivelul 5 există ceva nou, `{if}`! Cu `{if}` puteți alege între două opțiuni diferite.
                    Acest program afișează frumos dacă introduci Hedy ca nume și bau! dacă introduci altceva.
                    `{ask}` și `{print}` încă funcționează ca la nivelul 4.
                example_code: |
                    ```
                    nume {is} {ask} 'cum te numești?'
                    {if} nume {is} Hedy {print} 'frumos' {else} {print} 'bau!'
                    ```
            7:
                story_text: |
                    In acest nivel inveți ceva nou: poți face calcule aritmetice.

                    Simbolul adună este ușor, poți scrie ca și la matematică: `5 + 5` de exemplu. Semnul minus este ușor, `5 - 5`.

                    Simbolul pentru inmulțire este altfel pentru că nu există pe tastatură. Uită-te, chiar nu există!
                    De aceea inmulțim folosind simbolul asterisc deasupra lui 8: 3`5 * 5`. Citește-l ca și "5 ori 5", asta te ajută să îți amintești.
                example_code: |
                    ```
                    {print} '5 plus 5 face ' 5 + 5
                    {print} '5 minus 5 face ' 5 - 5
                    {print} '5 ori 5 face ' 5 * 5
                    ```
            8:
                story_text: |
                    Nivelul 7 adaugă comanda `{repeat}`. `{repeat}` poate fi folosită pentru a executa o linie din program de mai multe ori.
                example_code: |
                    ```
                    {repeat} 3 {times} {print} 'Hedy e distractiv!'
                    ```
            9:
                story_text: |
                    `{ask}` și `{print}` funcționează în continuare așa cum le cunoști. Dar `{if}`, `{else}` și `{repeat}` s-au schimbat!
                    Acum poți grupa mai multe linii împreună, dar va trebui să *indentezi* programul.
                    Asta înseamnă să pui patru spații la începutul liniei. De asemenea, va trebui să indentezi atunci când dorești doar să creezi un bloc de o linie.
                example_code: |
                    Iată cum funcționează comanda `{repeat}` acum:
                    ```
                    {repeat} 5 {times}
                        {print} 'Salut tuturor'
                        {print} 'Totul se repetă de 5 ori'
                    ```
                    Iată cum funcționează acum comanda `{if}` și `{else}`:

                    ```
                    nume {is} {ask} 'Cum te numești?'
                    {if} nume {is} Hedy
                        {print} 'Bun venit Hedy'
                        {print} 'Te poți juca pe calculatorul tău!'
                    {else}
                        {print} 'INTRUS!'
                        {print} 'Nu puteți folosi acest calculator!'
                    ```
            10:
                story_text: |
                    În acest nivel nu numai că poți folosi mai multe linii cu `{if}` și `{repeat}`, dar le și poți combina!
                    În exemplu vezi o comandă `{if}` într-o comandă `{repeat}`. Este permis și invers, de asemenea un `{if}` este permis într-un `{if}` și un `{repeat}` într-un `{repeat}`.
                    Încearcă!
                example_code: |
                    ```
                    {repeat} 3 {times}
                        mâncare = {ask} 'Ce dorești?'
                        {if} mâncare {is} pizza
                            {print} 'grozav!'
                        {else}
                            {print} 'pizza e mai bună'
                    ```
            11:
                story_text: |-
                    În acest nivel învățăm un nouă comandă numită `{for}`. Cu `{for}` poți face o listă și poți folosi toate elementele.
                    `{for}` creează un bloc, la fel ca `{repeat}` și `{if}`, deci toate liniile din bloc trebuie să înceapă cu spații.
                example_code: |
                    ```
                    animale {is} câine, pisică, pește
                    {for} animal {in} animale
                      {print} 'Îmi place' animal
                    ```
    for_command:
        description: for command
        levels:
