adventures:
    story:
        name: Μια ιστορία
        default_save_name: Μια ιστορία
        description: Δημιούργησε μια διαδραστική ιστορία
        levels:
            1:
                story_text: |
                    Στο επίπεδο 1 μπορείς να δημιουργήσεις μια ιστορία με ένα διαφορετικό βασικό χαρακτήρα τον οποίο θα δηλώσεις εσύ.

                    Σαν πρώτη γραμμή, χρησιμοποίησε αυτόν τον κώδικα `{ask}`.

                    Ύστερα από αυτήν την πρώτη γραμμή, ξεκίνα με την `print` αν η πρόταση χρειάζεται να εμφανιστεί.
                    Χρησιμοποίησε την `echo` αν θέλεις ο βασικός σου χαρακτήρας να εμφανίζεται στο τέλος της πρότασης.
                example_code: "```\nask Ο βασικός χαρακτήρας της ιστορίας είναι\nprint Ο βασικός χαρακτήρας της ιστορίας τώρα περπατάει στο δάσος\necho Φοβάται λίγο \nprint Ακούει περίεργους ήχους παντού\nprint Φοβάται πως αυτό είναι ένα στοιχειωμένο δάσος\n```\n\n\nΕίναι κρίμα που μπορείς να δημιουργήσεις μόνο προτάσεις όπου ο βασικός χαρακτήρας είναι στο τέλος της πρότασης, σωστά; Αφού έχεις εξασκηθεί με αυτήν την ιστορία, προχώρησε στο επίπεδο 2 και μετά στο επίπεδο 3, όπου μπορείς να δημιουργήσεις περισσότερα και πιο σύνθετα προγράμματα.\n"
                story_text_2: |
                    ### Exercise
                    Can you make your own story in Hedy now by using `{print}` , `{ask}` and `{echo}`?
            2:
                story_text: |
                    Στο επίπεδο 2 μπορείς να κάνεις την ιστορία σου πιο διασκεδαστική. Το όνομα του βασικού σου χαρακτήρα μπορεί πλεόν να εμφανίζεται οπουδήποτε στην πρόταση.

                    Θα πρέπει να γράψεις λίγο παραπάνω κώδικα γι'αυτό. Τώρα θα πρέπει πρώτα να ονοματίσεις το βασικό σου χαρακτήρα πρώτα.

                    Έπειτα μπορείς να τοποθετήσεις αυτό το όνομα οπουδήποτε στην πρόταση.
            3:
                story_text: |
                    Μπορείς επίσης να προσθέσεις κάτι τυχαίο στην ιστορία σου. Οποιοδήποτε τέρας, ζώο ή άλλο εμπόδιο.

                    Αυτό πάει κάπως έτσι.
                example_code: |
                    ```
                    animals is κουκουβάγια, σκαντζόχοιρος, αρμαντίλο
                    print Τώρα ακούει τον ήχο ένος animals at random
                    ```
            5:
                story_text: |
                    Στο επίπεδο 4 μπορείς να κάνεις την ιστορία σου ακόμα πιο διασκεδαστική. Στο επίπεδο 4 μπορείς να προγραμματίσεις διαφορετικά φινάλε.

                    Σκέψου δύο διαφορετικά φινάλε για την ιστορία σου, για παράδειγμα:

                    - Η πριγκίπισσα περπατάει μέσα στο δάσος
                    - Συναντά ένα τέρας

                    - Ευχάριστο τέλος: Παίρνει το σπαθί της και το τέρας τρέχει μακριά.
                    - Δυσάρεστο τέλος: Το τέρας τρώει την πριγκίπισσα

                    Επιπλέον, μπορείς να βεβαιώσεις πως θα δηλωθεί πάλι το όνομα. Αυτό λειτουργεί όπως στο επίπεδο 3. Μπορείς να το συνδυάσεις με ένα `if`,  και έτσι έχεις δημιουργήσει ήδη ένα ολόκληρο πρόγραμμα!
                example_code: |
                    ```
                    name is ask 'Ποιός περπατάει στο δάσος;'
                    print 'Ο' name 'περπατάει στο δάσος'
                    print 'Ο' name 'συναντά ένα τέρας'
                    end is ask 'Θα ήθελες ένα ευχάριστο ή ένα δυσάρεστο φινάλε (good or bad)?'
                    if end is good print 'Ο' name 'παίρνει το σπαθί και το τέρας τρέχει γρήγορα μακριά' else print 'Το τέρας τρώει τον' name
                    ```
            7:
                story_text: "Σε μια ιστορία, κάποιος μπορεί να αναφέρει διάφορες λέξεις πολλές φορές. Για παράδειγμα, όταν κάποιος φωνάζει βοήθεια ή τραγουδά ένα τραγούδι. \nΜπορείς να βάλεις μια τέτοια επανάληψη στην ιστορία σου στο επίπεδο 5 με την `repeat`.\n"
                example_code: |
                    ```
                    print 'Ο πρίγκιπας φώναζε για βοήθεια συνεχώς'
                    repeat 5 times print 'Βοήθεια!'
                    print 'Γιατί δε με βοηθάει κανείς;'
                    ```
    calculator:
        name: Αριθμομηχανή
        default_save_name: Αριθμομηχανή
        description: Δημιούργησε μια αριθμομηχανή
        levels:
            6:
                story_text: |
                    Τώρα που μπορείς να κάνεις υπολογισμούς, μπορείς επίσης να δημιουργήσεις ένα πρόγραμμα για να εξασκηθείς σε μαθηματικούς υπολογισμούς. Μπορείς να δημιουργήσεις τους δικούς σου υπολογισμούς, για παράδειγμα:
                example_code: |
                    ```
                    correct_answer is 11 * 27
                    answer is ask 'Πόσο κάνει 11 φορές το 27;'
                    if answer is correct_answer print 'συγχαρητήρια!'
                    else print 'Λάθος! Ήταν ' correct_answer
                    ```
                story_text_2: |
                    Μπορείς επίσης να αφήσεις τον υπολογιστή να κάνει δικές του τυχαίες προσθέσεις χρησιμοποιώντας το randrom.

                    Έτσι, θα επιλέξεις έναν αριθμό από πίνακες για να εξασκηθείς, και από αυτό θα παίρνεις πάντα ένα διαφορετικό άθροισμα:
                example_code_2: |
                    ```
                    tables is 4, 5, 6, 8
                    numbers is 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                    table is tables at random
                    number is numbers at random
                    correct_answer is table * number
                    answer is ask 'πόσο είναι ' table ' φορές ' number '?'
                    if answer is correct_answer print 'οκ'
                    else print 'λάθος! ήταν ' correct_answer
                    ```
    default:
        levels:
            1:
                story_text: "Καλωσήρθες στη Hedy! Στο επίπεδο 1 μπορείς να χρησιμοποιήσεις τις εντολές `{print}`, `{ask}` και`{echo}`.\n\nΓια παράδειγμα, μπορείς να εμφανίσεις κείμενο στην οθόνη χρησιμοποιώντας την `{print}`. Μπορείς να δεις ένα παράδειγμα \nμε απόσπασμα κώδικα στα αριστερά.\n\nΠάτησε το πράσινο κουμπί και ο κώδικας θα πληκτρολογηθεί για σένα.\nΔοκίμασε και εσύ τον κώδικα πατώντας το πράσινο κουμπί 'Εκτέλεσε κώδικα' κάτω από το αριστερό προγραμματιστικό πεδίο.\n"
            3:
                story_text: |
                    Στο επίπεδο 3 μπορείς να δημιουργήσεις μια λίστα. Μπορείς να αφήσεις τον υπολογιστή να επιλέξει κάτι τυχαία από τη λίστα. Αυτό γίνεται με τη χρήση της `at random`.
            4:
                story_text: "Στο επίπεδο 4  οι εντολές `{ask}` and `{print}` αλλάζουν.\n\n Πρέπει να περικλείσεις το κείμενο που θέλεις να εμφανίσεις σε εισαγωγικά.\n \nΑυτό είναι χρήσιμο, επειδή τώρα μπορείς να εμφανίσεις όσες λέξεις θέλεις. Επίσης, τις λέξεις που αποθήκευες με την `{is}`.\n\nΟι περισσότερες γλώσσες προγραμματισμού χρησιμοποιούν εισαγωγικά όταν εμφανίζουν στην οθόνη, οπότε βρισκόμαστε ένα βήμα πιο κοντά στον πραγματικό προγραμματισμό!\n\nΘα βρεις τις εντολές στα αριστερά και πάλι, και τις ασκήσεις στις ακόλουθες καρτέλες. Οι ασκήσεις πλέον γίνονται όλο και πιο δύσκολες στις διαδοχικές καρτέλες. \nΈτσι, είναι καλύτερα να ξεκινήσεις από τα αριστερά με την ιστορία, και να δουλεύεις στα δεξιά, έτσι ώστε να προσπαθείς όλο και περισσότερο.\n"
            5:
                story_text: |
                    Οι `ask` και `print` λειτουργούν ακριβώς όπως στο επίπεδο 4.

                    Στο επίπεδο 5 υπάρχει κάτι νέο, η εντολή `if`! Με την `if` μπορείς να διαλέξεις ανάμεσα σε δύο διαφορετικές επιλογές.


                    Όταν θέλουμε να ελέγξουμε ότι κάτι είναι μέσα σε μια λίστα, μπορούμε τώρα να χρησιμοποιούμε το `in` ανάμεσα στο πράγμα και τη λίστα.

                    Αυτός ο κώδικας εμφανίζει 'ωραία' αν εισάγεις σαν όνομα το Hedy, και 'μπου!' αν εισάγεις κάτι άλλο.


                    Επίσης στο επίπεδο 5, οι ασκήσεις στις καρτέλες γίνονται ολοένα και πιο δύσκολες. Οπότε καλό θα είναι να τις κάνεις από τα αριστερά προς τα δεξιά.
                example_code: |-
                    ```
                    name {is} {ask} 'ποιο είναι το όνομά σου;'
                    {if} name {is} Hedy print 'ωραία' else print 'μπου!'
                    ```
            6:
                story_text: |
                    Οι `ask`, `print` και `if` είναι ακόμα ίδιες όπως και στο επίπεδο 5.
                    Αλλά στο επίπεδο 6 μαθαίνεις κάτι καινούριο: πλέον μπορείς να κάνεις υπολογισμούς.

                    Το συν είναι εύκολο, το γράφεις όπως στα μαθηματικά: για παράδειγμα `5+5`. Το πλην επίσης λειτουργεί μια χαρά, έτσι `5-5`.

                    Το επί είναι λίγο διαφορετικό, επειδή δεν υπάρχει σύμβολο επί στο πληκτρολόγιό σου. Απλά ψάξε και θα δεις, δεν υπάρχει!
                    Αυτός είναι ο λόγος που πολλαπλασιάζουμε με τον αστερίσκο στο πλήκτρο 8: `5 * 5`. Διάβαζε το σαν "5 φορές το 5" για να το θυμάσαι πιο εύκολα.

                    Μπορούμε επίσης να κάνουμε μια αλλαγή στην αποθήκευση! Μπορείς τώρα να χρησιμοποιήσεις `=` αντί για`{is}` όταν αποθηκεύεις ένα όνομα ή έναν αριθμό, ως εξής:
                example_code: |-
                    ```
                    print '5 συν 5 κάνει ' 5 + 5
                    print '5 πλην 5 κάνει ' 5 - 5
                    print '5 επί 5 κάνει ' 5 * 5
                    ```
            7:
                story_text: |
                    Οι `ask`, `print` και `if` λειτουργούν ακριβώς όπως και στο επίπεδο 5 και 6.
                    Όμως, το επίπεδο 7 προσθέτει την εντολή `repeat`. H repeat (επανάληψη) μπορεί να χρησιμοποιηθεί για να εκτελέσουμε μια γραμμή κώδικα πολλές φορές.
                example_code: |-
                    ```
                    repeat 3 times print 'H Hedy είναι διασκεδαστική!'
                    ```
            8:
                story_text: |
                    Οι ask και print λειτουργούν ακόμα όπως τις γνωρίζεις. Όμως, οι if και repeat έχουν αλλάξει!
                    Τώρα μπορείτε να εκτελείς μαζί ομάδες κώδικα, αλλά θα πρέπει να βάλεις εσοχή στον κώδικα.
                    Αυτό σημαίνει να προσθέσεις τέσσερα κενά στην αρχή της γραμμής. Το ίδιο ισχύει όταν θέλεις να δημιουργήσεις ένα μπλοκ μιας γραμμής.
                example_code: |-
                    ```
                    repeat 5 times
                        print 'Γεια σας'
                        print 'Αυτό θα επαναληφθεί 5 φορές'
                    ```
            9:
                story_text: "Σ΄αυτό το επίπεδο όχι μόνον μπορείς να χρησιμοποιήσεις πολλές γραμμές στις εντολές `if` and `repeat`, αλλά μπορέις και να τις τοποθετήσεις μαζί! \nΣτο παρακάτω παράδειγμα βλέπεις μια εντολή  `if` μέσα σε μια εντολή `repeat`. Μπορεί να χρησιμοποιηθεί και αντίστροφα, επιτέπεται επίσης και ένα `if` μέσα σε ένα `if` και ένα `repeat` μέσα σε ένα `repeat`.\nΔοκίμασέ το!\n"
                example_code: |
                    ```
                    repeat 3 times
                        food = ask 'Τι θέλεις;'
                        if food is 'πίτσα'
                            print 'ωραία!'
                        else
                            print 'η πίτσα είναι καλύτερη!'
                    ```
            12:
                story_text: "Μέχρι τώρα η Hedy δενεπέτρεπε δεκαδικούς αριθμούς όπως 1.5, αλλά δεν θα το επιτρέψουμε πλέον. Σημείωσε ότι οι υπολογιστές χρησιμοποιούν το `.` για τους δεκαδικούς αριθμούς.\n\nΑπό αυτό το επίπεδο και μετά πρέπει να χρησιμοποιείς τα εισαγωγικά όταν αποθηκεύεις κείμενο με `=`:\n\nΟι λίστες είναι κείμενα, άρα θέλουν επίσης εισαγωγικά. Πρόσεξε ότι κάθε στοιχείο στη λίστα έχει εισαγωγικά. \nΑυτό σου επιτρέπει να αποθηκέυσεις δυο λέξεις ως ένα στοιχείο, πχ 'Black Widow'.\n\n\nΓια τους αριθμούς, δεν χρησιμοποιούνται εισαγωγικά στο `=`/\n"
                example_code: |
                    ```
                    {print} 'Δύο και μισό συν δύο και μισό είναι...'
                    {print} 2.5 + 2.5
                    ```

                    print 2.5 + 2.5
            13:
                story_text: Τώρα θα μάθουμε τα `and` και `or`! Αν θέλεις να ελέγξεις δύο δηλώσεις, δεν χρειάζεται να χρησιμοποίησεις δύο if αλλά μπορείς να χρησιμοποιήσεις τα `and` και `or`. Αν χρησιμοποιήσεις τo `and`, και οι δύο προτάσεις, αριστερά και δεξιά από το `and` θα πρέπει να είναι αληθείς. Μπορούμε επίσης να χρησιμοποιήσουμε το `or`. Τότε, μόνο μια πρόταση χρειάζεται να είναι αληθής.
            14:
                story_text: "Θα μάθουμε μερικά ακόμα νέα πράγματα! Ίσως να τα γνωρίζεις ήδη από τα μαθηματικά, τα `<` και `>`. \nΤο `<` ελέγχει αν ο πρώτος αριθμός είναι μικρότερος από τον δεύτερο, πχ `age < 12` ελέγχει αν το  `age` είναι μικρότερο από  12.\nΑν θέλεις να ελέγξεις αν ο πρώτος αριθμός είναι μικρότερος ή ίσος από τον δεύτερο, μπορείς να χρησιμοποιήσεις  `<=`, πχ`age <= 11`.\n Το `>` ελέγχει αν ο πρώτος αριθμός είναι μεγαλύτερος από τον δεύτερο, πχ `points > 10` ελέγχει αν `points` είναι μεγαλύτερο  από 10.\nΑν θέλεις να ελέγξεις αν ο πρώτος αριθμός είναι μεγαλύτερος ή ίσος από τον δεύτερο, μπορείς να χρησιμοποιήσεις`>=`, πχ `points >= 11`.\nΧρησιμοποιείς αυτές τις συγκρίσεις μέσα σε ένα  `{if}`, ως εξής."
            15:
                story_text: "Θα μάθουμε ένα νέο βρόχο, το βρόχο `while`! Συνεχίζουμε το βρόχο για όσο η πρόταση είναι αληθής/ορθή! \nΜην ξεχάσεις να αλλάξεις την τιμή στον βρόχο.\n\nΈτσι στο παράδειγμα του κώδικα, συνεχίζουμε ώσπου να δοθεί μια σωστή απάντηση. \nΑν δε δοθεί ποτέ η σωστή απάντηση, ο βρόχος δε θα σταματήσει ποτέ!\n"
                example_code: |
                    ```
                    answer = 0
                    while answer != 25
                        answer = ask 'Πόσο κάνει 5 φορές το 5;'
                    print 'Δόθηκε η σωστή απάντηση'
            16:
                story_text: "Θα κάνουμε λίστες με τον τρόπο που ακολουθεί η Python, με αγκύλες γύρω από τις λίστες! Επίσης διατηρούμε τα εισαγωγικά γύρω από κάθε στοιχείο 'οπως μάθαμε σε προηγούμενα επίπεδα. \nΜπορείς επίσης να χρησιμοποιήσεις τις αγκύλες για να υποδείξεις μια θέση μέσα στις λίστες. ."
                example_code: \n```\nfriends = ['Μαρία', 'Κώστας', 'Αλκμήνη']\nlucky_numbers = [15, 18, 6]\n{for} i {in} {range} 1 {to} 3\n    {print} 'ο τυχερός αριθμός του/της' friends[i]\n    {print} 'είναι' lucky_numbers[i]\n```\n"
            17:
                story_text: "Τώρα θα αλλάξουμε λίγο τις εσοχές. Κάθε φορά που χρειαζόμαστε μια εσοχή, χρειαζόμαστε ένα `:` στη γραμμή πριν την εσοχή.\n\nΣ' αυτό το επίπεδο μπορείς επίσηςνα χρησιμοποιήσει ςμια νέα εντολή: `{elif}`. 'Η`{elif}` είναι σύντμηση των `{else} {if}`  και θα το χρειαστείς όταν θέλεις να έχεις 2 (ή περισσότερες!) επιλογές. \nΔοκίμασέ το!."
    dice:
        name: Φτιάξε τα δικά σου ζάρια
        default_save_name: ζάρια
        description: Φτιάξε τα δικά σου ζάρια
        levels:
            3:
                story_text: |
                    Στο επίπεδο 2 μπορούμε να επιλέξουμε από μια λίστα. Με αυτό μπορούμε να αφήσουμε τον υπολογιστή να επιλέξει μια πλευρά του ζαριού.


                    Ρίξε μια ματιά στα (επιτραπέζια) παιχνίδια στο σπίτι σου. Βρίσκεις κάποια (ιδιαίτερα) ζάρια παιχνιδιών; Μπορείς να τα αναδημιουργήσεις εύκολα με κώδικα Hedy. Για παράδειγμα τα ζάρια στο παιχνίδι Earthworms(σκουληκάκια) έχουν τους αριθμούς 1 έως 5 και ένα σκουληκάκι.

                    ![Ζάρια με αριθμούς 1 έως 5 και ένα σκουληκάκι](https://cdn.jsdelivr.net/gh/felienne/hedy@24f19e9ac16c981517e7243120bc714912407eb5/coursedata/img/dobbelsteen.jpeg)
                example_code: "```\nchoices is 1, 2, 3, 4, 5, σκουληκάκι\nprint choices at random\n```\n\nΔοκίμασες να κάνεις μια πρόταση χρησιμοποιώντας τη λέξη choices; \n\nΔηλαδή, `print Επέλεξα από τις choices`. Αν δεν το έχεις κάνει ήδη, πήγαινε να το δοκιμάσεις! \n\nΘα δεις ότι δε δουλεύει σωστά. H Hedy θα πει: Επέλεξα από τις [1, 2, 3, 4, 5, σκουληκάκι]. To Επίπεδο 3 έχει μια λύση για αυτό.\n"
            4:
                story_text: |
                    Στο επίπεδο 3 μπορούμε να φτιάξουμε προτάσεις με την τιμή του ζαριού μέσα στην πρόταση, φυσικά μέσα σε εισαγωγικά.
                    Αυτήν τη φορά το δείγμα κώδικα δεν είναι πλήρες. Μπορείς να ολοκληρώσεις τον κώδικα;
            5:
                story_text: |
                    Μπορείς και πάλι να δημιουργήσεις ένα ζάρι στο επίπεδο 4 χρησιμοποιώντας την `if`.
                    Συμπλήρωσε το δείγμα κώδικα έτσι ώστε ο κώδικας να λέει "Μπορείς να σταματήσεις να ρίχνεις" όταν ρίξεις ένα σκουληκάκι.

                    Ίσως όμως να θέλεις να αναδημιουργήσεις ένα ζάρι από ένα τελείως διαφορετικό παιχνίδι. Και αυτό γίνεται! Έπειτα, δημιούργησε τη δική σου αντίδραση. Πχ. 'ναι' για το 6 και 'κρίμα' για οτιδήποτε άλλο.
                example_code: |
                    ```
                    choices is 1, 2, 3, 4, 5, σκουληκάκι
                    throw is _
                    print 'έχεις ρίξει' _
                    if _ is earthworm print 'Μπορείς να σταματήσεις να ρίχνεις.' _ print 'Πρέπει να το ακούσεις πάλι!'
                    ```
            6:
                story_text: |
                    Μπορείς επίσης να φτιάξεις ένα ζάρι με σκουληκάκι στο επίπεδο 5, όμως τώρα μπορείς να υπολογίσεις πόσοι πόντοι έχουν εμφανιστεί.

                    Ίσως να ξέρεις πως το σκουληκάκι μετράει για 5 πόντους στο Earthworms(σκουληκάκια). Τώρα, μετά από κάθε ρίψη μπορείς να υπολογίζεις αμέσως πόσους πόντους έχεις ρίξει συνολικά.

                    Αυτός είναι ο κώδικας για να υπολογίσεις του πόντους για ένα ζάρι:
                example_code: |
                    ```
                    choices is 1, 2, 3, 4, 5, σκουληκάκι
                    points is 0
                    throw is choices at random
                    print 'έριξες' throw
                    if throw is σκουληκάκι points is points + 5 else points is points + throw
                    print 'αυτό είναι' points ' points'
                    ```

                    Μπορείς να αλλάξεις τον κώδικα ώστε να παίρνεις το συνολικό σκορ για 8 ζάρια; Για να το κάνεις αυτό, πρέπει να κάνεις αποκοπή και επικόλληση από μερικές γραμμές κώδικα.


                    Κατάφερες να υπολογίσεις το σκορ για 8 ζάρια; Χρειάστηκε αρκετή αποκοπή και επικόλληση, έτσι; Θα το κάνουμε πιο εύκολο στο επίπεδο 7!
            7:
                story_text: |
                    Μπορείς να φτιάξεις ένα ζάρι και πάλι στο επίπεδο 6. Με την εντολή `repeat` μπορείς έυκολα να ρίξεις μια ολόκληρη χούφτα από ζάρια.
                    Προσπάθησε να συμπληρώσεις το δείγμα κώδικα! Οι παύλες θα πρέπει να περιέχουν πολλαπλές εντολές και χαρακτήρες.

                    Ίσως όμως θέλεις να φτιάξεις ένα τελείως διαφορετικό ζάρι. Φυσικά και μπορείς!
                example_code: |
                    ```
                    choices is 1, 2, 3, 4, 5, σκουληκάκι
                    repeat _ _ print _ _ _
                    ```
    dishes:
        name: Ποιός πρέπει να πλύνει τα πιάτα
        default_save_name: πιάτα
        description: Χρησιμοποίησε τον υπολογιστή για να δεις ποιός πρέπει να πλύνει τα πιάτα (Ξεκίνα από το επίπεδο 2)
        levels:
            3:
                story_text: |
                    Διαφωνείτε πάντα στο σπίτι για το ποιός πρέπει να πλύνει τα πιάτα ή να αλλάξει την άμμο της γάτας;

                    Τότε μπορείς να αφήσεις τον υπολογιστή να αποφασίσει πολύ δίκαια. Μπορείς να το προγραμματίσεις στο επίπεδο 2!

                    Πρώτα φτιάξε μια λίστα με τα μέλη της οικογένειάς σου. Ύστερα επίλεξε 'τυχαία' από τη λίστα.
                example_code: "```\npeople is μαμά, μπαμπάς, Ελένη, Σοφία\nprint people at random\n```\n\nΔοκίμασες να κάνεις μια πρόταση χρησιμοποιώντας τη λέξη people; \n\nΔηλαδή, `print Επέλεξα από αυτούς τους people`. Αν δεν το έχεις κάνει ήδη, πήγαινε να το δοκιμάσεις! \n\nΘα δεις ότι δε δουλεύει σωστά. H Hedy θα εμφανίσει: Επέλεξα από αυτούς τους [μαμά, μπαμπάς, Ελένη, Σοφία]. Αυτό μπορείς να το λύσεις στο επίπεδο 3.\n"
            4:
                story_text: |
                    Με εισαγωγικά μπορείς να κάνεις τον προγραμματισμό του πλυσίματος πιάτων πιο όμορφο.
                    Αυτήν τη φορά το δείγμα του κώδικα δεν είναι πλήρες.

                    Μπορείς να ολοκληρώσεις τον κώδικα εισάγοντας τις σωστές εντολές ή χαρακτήρες στις τελίτσες;
                    Κάθε τρεις τελίτσες πρέπει να αντικατασταθούν με μία εντολή.

                    Συμβουλή: Μην ξεχάσεις τα εισαγωγικά!
                example_code: |
                    ```
                    people is μαμά, μπαμπάς, Ελένη, Σοφία
                    print _ τα πιάτα πλένονται από _
                    print people at _
                    ```
            5:
                story_text: |
                    Με το `if` τώρα μπορείς να διασκεδάσεις λίγο παραπάνω με τις επιλογές στο πρόγραμμα. Μπορείς να κάνεις το πρόγραμμα να απαντά στην επιλογή που έκανε ο υπολογιστής.

                    Μπορείς να ολοκληρώσεις τον κώδικα έτσι ώστε να εμφανίζει 'κριμα!' όταν είναι σειρά σου αλλιώς 'ναι!';
                    Μην ξεχάσεις τα εισαγωγικά!
                example_code: |
                    ```
                    people is μαμά, μπαμπάς, Ελένη, Σοφία
                    dishwasher is people at random
                    if dishwasher is Σοφία print _ τί κρίμα που πρέπει να πλύνω τα πιάτα _ else print 'ευτυχώς δεν έχει πιάτα επειδή ο' _ 'πλένει ήδη'
                    ```
            6:
                story_text: |
                    Πόσο συχνά θα πλένει ο καθένας τα πιάτα; Είναι δίκαιο αυτό; Μπορείς να το υπολογίσεις στο επίπεδο 6.

                    Τώρα μπορείς να αντιγράψεις τις γραμμές 3 έως 4 κάποιες φορές (πχ. 7 φορές για όλην την εβδομάδα) για να υπολογίσεις για όλην την εβδομάδα.
                    Θα κάνεις τον κώδικα για όλην την εβδομάδα;

                    Τώρα θα πρέπει να κάνεις πολλή αντιγραφή και επικόλληση, έτσι; Αυτό θα το διορθώσουμε στο επίπεδο 7.
                    Αυτό το επίπεδο είναι το τέλος της περιπέτειας του πλυσίματος! Όμως υπάρχουν πολλές ακόμα περιπέτειες να ακολουθήσεις σε άλλα επίπεδα, όπως το κομπιουτεράκι, μια διαδραστική ιστορία και ένα πιο περίπλοκο παιχνίδι.
                example_code_2: |-
                    ```
                    people is μαμά, μπαμπάς, Ελένη, Σοφία
                    eleni_washes is 0
                    dishwasher is people at random
                    print 'Αυτός που θα πλυνει τα πιάτα' dishwasher
                    if dishwasher is Ελένη eleni_washes is eleni_washes + 1
                    print 'Η Ελένη θα πλύνει τα πιάτα ' eleni_washes 'φορές αυτήν την εβδομάδα'
                    ```
            7:
                story_text: |
                    Με την `repeat` μπορείς να επαναλάβεις κομμάτια κώδικα. Μπορείς να το χρησιμοποιήσεις αυτό για να υπολογίσεις ποιος θα πλένει τα πιάτα για όλην την εβδομάδα.
                example_code: |-
                    ```
                    people is μαμά, μπαμπάς, Ελένη, Σοφία
                    repeat _ _ print 'αυτό που θα πλύνει τα πιάτα είναι' _
                    ```
    restaurant:
        name: Εστιατόριο
        default_save_name: Εστιατόριο
        description: Δημιούργησε το δικό σου εικονικό εστιατόριο
        levels:
            1:
                story_text: "Στο επίπεδο 1 μπορείς να δημιουργήσεις το δικό σου εικονικό εστιατόριο και να πάρεις τις παραγγελίες των πελατών σου.\n  \n"
                story_text_2: |
                    ### Exercise
                    Can you think of more lines to add to your restaurant code? For example, can you {ask} the guests what they'd like to drink, tell them the price, or wish them a pleasant meal?
                example_code_2: "```\nprint Καλωσήλθες στο εστιατόριο της Hedy\nask Tί θα ήθελες να παραγγείλεις;\necho Ώστε θα ήθελες να παραγγείλεις\nprint Ευχαριστούμε για την παραγγελία σου!\nprint Ετοιμάζεται!\n```\n  \nΜπορείς να σκεφτείς άλλη μια γραμμή για να προσθέσεις στον κώδικα του εστιατορίου σου; Για παράδειγμα, μπορείς να ρωτήσεις τους πελάτες τί θα ήθελαν να πιούν, να τους πεις την τιμή, ή να τους ευχηθείς ένα καλό γεύμα;\n"
            2:
                story_text: |
                    Στο επίπεδο 2 μπορείς να επεκτείνεις το εστιατόριό σου χρησιμοποιώντας μεταβλητές. Στο επίπεδο 1, η Hedy μπορούσε μόνο να εμφανίσει την παραγγελία μια φορά και να θυμηθεί μόνο το τελευταίο αντικείμενο που παραγγέλθηκε.
                    Τώρα μπορείς να χρησιμοποιήσεις μεταβλητές και η Hedy μπορεί να θυμάται και το φαγητό αλλά και τα ποτά!
                example_code: |
                    ```
                    print Καλωσήλθατε στο εστιατόριο της Hedy!
                    print Σήμερα σερβίρουμε πίτσα ή λαζάνια.
                    food is ask Τί θα θέλατε να φάτε;
                    print Καλή επιλογή! Αυτό το φαγητό είναι το αγαπημένο μου!
                    topping is ask Θα θέλατε κρέας ή λαχανικά μαζί με αυτό;
                    print food with topping ετοιμάζεται!
                    drinks is ask Τί θα θέλατε να πιείς με αυτό;
                    print Σας ευχαριστώ για την παραγγελία.
                    print Το φαγητό και τα ποτά σας θα είναι έτοιμα αμέσως!
                    ```
            3:
                story_text: |
                    Δυσκολεύεσαι να αποφασίσεις τί θέλεις να φάς για δείπνο. Μπορείς να αφήσεις τη Hedy να επιλέξει για σένα!
                    Απλά πρόσθεσε λίστες από τα αγαπημένα (ή λιγότερα αγαπημένα) γεύματα σου και η Hedy μπορεί να επιλέξει το δείπνο.
                    Μπορείς επίσης να το διασκεδάσεις λίγο, αφήνοντας την Hedy να επιλέξει και την τιμή για το δείπνο σου! Τί θα πάρεις;
                example_code: |-
                    ```
                    print Καλωσήλθατε στο Τυχαίο Εστιατόριο της Hedy!
                    print Το μόνο εστιατόριο που θα επιλέξει τυχαία το γεύμα σας και την τιμή του!
                    starters is σαλάτα, σούπα, καρπάτσιο
                    mains is πίτσα, λαχανάκια Βρυξελλών, σπαγγέτι
                    desserts is μπράουνι, παγωτό, γαλλικά τυριά
                    drinks is κόλα, μπύρα, νερό
                    prices is 1 ευρώ, 10 ευρώ, 100 ευρώ
                    print Θα ξεκινήσετε με: starters at random
                    print Έπειτα θα σερβίρουμε: mains at random
                    print Και ως επιδόρπιο: desserts at random
                    print Θα έχετε ένα drinks at random για να πιείτε
                    print Το κόστος θα είναι: prices at random
                    print Ευχαριστούμε και καλή όρεξη!
                    ```
    rock:
        name: Πέτρα, ψαλίδι, χαρτί
        default_save_name: Πέτρα
        description: Φτιάξε το δικό σου παιχνίδι Πέτρα, ψαλίδι, χαρτί
        levels:
            1:
                story_text: |
                    Στο επίπεδο 1 μπορείς να ξεκινήσεις με ένα παιχνίδι Πέτρα, ψαλίδι, χαρτί.

                    Με την `ask` μπορείς να κάνεις μια επιλογή, και με την `echo` μπορείς να επαναλάβεις αυτήν την επιλογή.
                example_code: "```\nprint τί επιλέγεις;\nask επίλεξε ανάμεσα σε πέτρα, ψαλίδι ή χαρτί\necho ώστε η επιλογή σου είναι: \n```\n\nΗ απλή επανάληψη είναι φυσικά κάπως βαρετή επειδή ο υπολογιστής δεν επιλέγει τίποτα. Θα φτιάξουμε κάτι τέτοιο αργότερα.\n"
            2:
                story_text: |
                    In this level you can practise using the variables, so that you can make the rock, paper, scissors game in the next level!
            3:
                story_text: "Στο επίπεδο 2 μπορούμε να εισάγουμε λίστες και να επιλέξουμε πράγματα από αυτές. \n\nΑρχικά θα φτιάξεις μια λίστα με την `is`. Ύστερα μπορείς να αφήσεις τον υπολογιστή να επιλέξει κάτι από τη λίστα με την `at random` (τυχαία).\n\nΓια παράδειγμα, μπορείς να αφήσεις τον υπολογιστή να επιλέξει ανάμεσα σε πέτρα, ψαλίδι και χαρτί.\n"
                example_code: |
                    ```
                    choices is πέτρα, ψαλίδι, χαρτί
                    print choices at random
                    ```

                    Μπορείς να χρησιμοποιήσεις την `ask` και πάλι στο επίπεδο 2. Μπορείς να εμφανίσεις την επιλογή σου και την επιλογή από τον υπολογιστή;
                    Προσοχή όμως, η `ask` τώρα λειτουργεί διαφορετικά απ'ότι στο επίπεδο 1. Θα πρέπει να υπάρχει ένα όνομα πριν από αυτή.
            5:
                story_text: |
                    Στο επίπεδο 4 μπορούμε να αποφασίσουμε ποιός θα κερδίσει. Για αυτό θα χρειαστούμε τον νέο κώδικα `if`.

                    Αποθήκευσε την επιλογή σου με το όνομα της επιλογής σου και την επιλογή του υπολογιστή ως computer choices`.
                    Έπειτα, μπορείς να χρησιμοποιήσεις την `if` για να δεις αν αυτές είναι ίδιες ή διαφορετικές.
                    Θα τελειώσεις τον κώδικα;
                example_code: |
                    ```
                    options is πέτρα, ψαλίδι, χαρτί
                    computer_choice is _
                    choice is ask 'Τί επιλέγεις;'
                    print 'εσύ επέλεξες ' _
                    print 'ο υπολογιστής επέλεξε ' _
                    if _ is _ print 'ισοπαλία!' else print 'όχι ισοπαλία'
                    ```

                    Πρώτα, συμπλήρωσε το σωστό κώδικα στις τελίτσες για να δεις αν είναι ισοπαλία.
    songs:
        name: Τραγούδα ένα τραγούδι!
        default_save_name: τραγούδι
        description: Εμφάνισε ένα τραγούδι
        levels:
            6:
                story_text: |
                    Τα τραγούδια συχνά περιλαμβάνουν αρκετή επανάληψη. Κάποιες φορές η επανάληψη βασίζεται στο μέτρημα.
                    Για παράδειγμα, στο γνωστό τραγούδι 'Μπουκάλια Μπύρας'. Μπορείς να προγραμματίσεις αυτό το τραγούδι με λίγα μαθηματικά.
                example_code: |
                    ```
                    verse is 99
                    print verse ' μπουκάλια μπύρας στον τοίχο'
                    print verse ' μπουκάλια μπύρας'
                    print 'Κατέβασε ένα, και δώσε το τριγύρω'
                    verse is verse - 1
                    print verse ' μπουκάλια μπύρας στον τοίχο'
                    ```

                    Μπορείς τώρα να επαναλάβεις τις γραμμές 2 έως 9 όσες φορές θέλεις αντιγράφοντας τις γραμμές.

                    # Κοιτώντας μπροστά
                    Στο επίπεδο 5 μάθαμε να επαναλαμβάνουμε 1 γραμμή με τη `repeat`, έτσι:

                    * repeat 3 times print 'Μωρό Καρχαρίας Τουτουρουτουτου'

                    Όμως όπως θα δείτε σε αυτό το μάθημα, κάποιες φορές θέλεις να επαναλάβεις αρκετές γραμμές μαζί. Αυτό μπορεί να γίνει με αποκοπή και επικόλληση, όμως αυτό απαιτεί αρκετή δουλειά. Στο επίπεδο 7 θα μάθες πώς να το κάνεις αυτό εύκολα.

            7:
                story_text: |
                    Τα τραγούδια συχνά περιλαμβάνουν αρκετή επανάληψη. Για παράδειγμα... το Μωρό Καρχαρίας! Αν το τραγουδήσεις, τραγουδάς διαρκώς το ίδιο πράγμα:

                    Μωρό Καρχαρίας τουτουρουτουτου <br>
                    Μωρό Καρχαρίας τουτουρουτουτου <br>
                    Μωρό Καρχαρίας τουτουρουτουτου <br>
                    Μωρό Καρχαρίας

                    Μπορείς να κάνεις το τραγούδι αυτό πολύ πιο σύντομο με ένα `repeat`! Μπορείς να ολοκληρώσεις τον κώδικα;

                    Ύστερα από το Μωρό Καρχαρίας μπορείς φυσικά να προγραμματ΄ και άλλα τραγούδια. Υπάρχουν πολλά τραγούδια με επανάληψη.
                example_code: |-
                    ```
                    repeat _ _ print 'Μωρό Καρχαρίας τουτουρουτουτου'
                    print 'Μωρό Καρχαρίας'
                    ```
