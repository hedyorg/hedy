adventures:
    story:
        name: A történet
        default_save_name: Történet
        description: Készíts egy interaktív történetet
        levels:
            1:
                story_text: |
                    Az 1. szinten elkészíthetsz egy történetet egy másik főszereplővel, amelyet te magad adsz meg.

                    Az első sorba írt `{ask}` bekéri a történet főszereplőjének a nevét.

                    Az első sor után kezdd a `{print}` utasítással, ha a mondatot ki kell íratni.
                    Akkor használd az `{echo}` parancsot, ha azt szeretnéd, hogy főszereplő neve a mondat végén legyen.
                example_code: |
                    ```
                    {ask} A történet főszereplője
                    {print} A főszereplő most az erdőben fog sétálni
                    {echo} Kicsit fél, szegény
                    {print} Őrült zajokat hall mindenütt
                    {print} Fél, hogy ez egy kísértet-járta erdő
                    ```
                story_text_2: |
                    Tudsz saját történetet írni Hedy-ben a `{print}` , `{ask}` és `{echo}` használatával?
            2:
                story_text: |+
                    A 2. szinten szórakoztatóbbá teheted a történetedet. Fő karaktered neve mostantól
                    bárhol lehet a mondatban.

                    Ehhez egy kicsit fel kell javítanod a kódodat. Most először el kell nevezned a főszereplődet. Olyan nevet válassz, amely nem tartalmaz ékezetes betűt.

                    Ezt a nevet bárhol elhelyezheted a mondatban.

                example_code: |
                    ```
                    nev is ask Mi a neve a főszereplőnek?
                    print nev most futni fog az erdőben
                    print nev kissé fél
                    print Őrült zajokat hall mindenütt
                    print nev fél hogy ez egy kísértetjárta erdő
                    ```
                story_text_2: |
                    ### Exercise
                    Now it's time to add variables to your own story that you've made in the previous level.
                    Go to 'My programs', look for your level 1 story adventure and copy the code. Paste the code in your input screen in this level.

                    This code won't work in this level, because you have not used variables yet.
                    Change the `{ask}` commands and `{echo}` commands in your code to the correct form that you've learned in this level.

                    **Extra** Add a sleep command to your code to build up tension in your story.
            3:
                story_text: |
                    In level 3 you can make your story more fun. Hozzáadhatsz valami véletlenszerűt is a történetéhez. Bármilyen szörnyet, állatot vagy más akadályt.
                example_code: |
                    ```
                    allatok is bagoly, sündisznó, tatu
                    print Most hallja a allatok at random hangját
                    ```
                story_text_2: |
                    The command `{add}` can also come in handy in your story. For example
                story_text_3: |
                    This is an example of the `{remove}` command in your story
            5:
                story_text: |
                    Amit a 4. szinten megtehetsz, az még szórakoztatóbbá varázsolja történetedet. A 4.
                    szinten a történethez különböző végződéseket programozhatsz.
                    Gondolj például a történet két különböző végére:
                    - A hercegnő sétál az erdőn
                    - Összefut egy szörnyeteggel
                    - Boldog befejezés: Előveszi a kardját, és a szörny gyorsan elszalad
                    - Rossz befejezés: A szörny megeszi a hercegnőt
                    Biztosíthatod azt is, hogy egy név újra beírható legyen. Ez ugyanúgy működik, mint a 3.
                    szinten. Kombinálhatod ezt egy `if`-fel, és akkor már készítettél is egy egész programot!
                example_code: |-
                    ```
                    nev is ask 'Ki jár az erdőben?'
                    print nev ' sétál az erdőn'
                    print nev ' találkozik egy szörnnyel'
                    vege is ask ' Egy jó vagy rossz véget szeretnél?'
                    if vege is jó print nev ' előveszi a kardot és a szörny gyorsan elszalad' else print 'A szörny megeszi ' nev '-t'
                    ```
            7:
                story_text: |-
                    A történetben valaki bizonyos szavakat többször is elmond. Például, ha valaki segítséget kér vagy elénekel egy dalt.
                    Az ilyen ismétlést beírhatod a 6. szintbe tartozó történetbe a 'repeat' paranccsal.
                example_code: |
                    ```
                    print 'A herceg folyamatosan segítséget kért'
                    repeat 5 times print 'Segítség!'
                    print 'Miért nem segít nekem senki?'
                    ```
    calculator:
        name: Számológép
        default_save_name: Számológép
        description: Készíts számológépet
        levels:
            6:
                story_text: |-
                    Most, hogy tudsz számolni, létrehozhatsz egy programot is a matematikai számítások gyakorlásához. A számításokat magad is elkészítheted, például:
                    Azt is engedélyezheted, hogy a számítógép véletlenszerű számításokat végezzen véletlenszámok használatával.

                    Így válassz ki pár táblázatot a gyakorláshoz, és ettől mindig más eredményt kapsz
                example_code: |-
                    ```
                    jo_valasz = 11 * 27
                    valasz = ask 'Mennyi 11 és 27 szorzata?'
                    if valasz is jo_valasz print 'nagyszerű!'
                    else print 'Nem jó! Ennyi: ' jo_valasz
                    ```
                story_text_2: |
                    You can also let the computer do random calculations on its own using {random}.
                example_code_2: |-
                    ```
                    tablazat = 4, 5, 6, 8
                    szamok = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                    tabla = tablazat at random
                    szam = szamok at random
                    jo_valasz = tabla * szam
                    valasz = ask 'Mennyi ' tabla ' és ' szam ' szorzata?'
                    if valasz is jo_valasz print 'rendben'
                    else print 'hiba! ennyi: ' jo_valasz
                    ```
                story_text_3: |
                    You can also let the computer do random calculations on its own using {random}.
                example_code_3: |
                    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                    number_1 = _
                    number_2 = _
                    correct_answer = number_1 * number_2
                    given_answer = 'What is ' number_1 ' times ' number_2 '?'
                    {if} _
                    {else} _
            9:
                story_text: "A 6. szinten megtanultad a számológép készítését, a 7. szinten kibővítheted ezt a kódot, és egy kis matematikai játékot készíthetsz belőle. Mint ez...\n"
                example_code: |-
                    ```
                    pontszam = 0
                    repeat 10 times
                        szamok = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                        szam1 = szamok at random
                        szam2 = szamok at random
                        helyesvalasz = szam1 * szam2
                        print 'Mennyi ' szam1 ' * ' szam2 '?'
                        valasz = ask 'Gépeld ide a válaszodat...'
                        print 'A válaszod: ' valasz
                        if valasz is helyesvalasz
                            pontszam = pontszam + 1
                    print 'Szép munka! A pontszámod... ' pontszam ' a 10-ből!'
                    ```
    default:
        name: Bevezető
        description: Szint magyarázat
        levels:
            1:
                story_text: "Az első szinten a `{print}`, `{ask}` és `{echo}` parancsokat használhatod.\nÍrd a kódodat a programozási ablakba, vagy nyomd meg a gombot a példa programok mellett, hogy bemásold!\nPróbáld ki a kódot a zöld 'Kód futtatása' gomb megnyomásával a programozási ablak alatt!\n\nSzöveget írhatsz a képernyőre a `{print}` paranccsal.     \n"
            3:
                story_text: |
                    A 3. szinten készíthetsz listát is. Kérheted a számítógépet, hogy véletlenszerűen válasszon valamit a listából. Ezt a `{at} {random}` paranccsal teheted meg.
            4:
                story_text: |
                    A 4. szinten a `{ask}` és a `{print}` máshogy működik.
                    Amit ki akarsz íratni, idézőjelbe kell tenned.
                    Ez hasznos, mert most már mindent kiírathatsz, amit csak akarsz, azokat a szavakat is, amiket arra használtál, hogy eltárolj valamit az `{is}` paranccsal.
                    A legtöbb programozási nyelv idézőjelet használ a kiíratáshoz, így egy kicsit közelebb kerülünk az igazi programozáshoz!
                example_code: |
                    ```
                    {print} "Mostantól idézőjeleket kell használni!"
                    válasz {is} {ask} "Miket kell mostantól használni?"
                    {print} válasz " kell használni."
                    ```
            5:
                story_text: |
                    Az 5. szinten újdonság következik, a `{if}`! A `{if}` paranccsal két lehetőség közül választhatsz.
                    Ez a kód kiírja, hogy klassz, ha a Hedy nevet adod meg névként, és fújt, ha valami mást írsz be.
                    A `{ask}` és `{print}` ugyanúgy működnek, mint a 4. szinten.
                example_code: |
                    ```
                    név {is} {ask} "Hogy hívnak?"
                    {if} név {is} Hedy {print} "klassz" {else} {print} "fúj!"
                    ```
            6:
                story_text: |
                    Ezen a szinten új dolgot tanulunk: számolni.

                    Az összeadás könnyű, ugyanúgy írod, mint a matekban: `5 + 5`. A kivonás is jól működik, így írjuk: `5 - 5`.

                    A szorzás egy kicsit különbözik, ugyanis nincs szorzásjel a billentyűzeten. Nézd meg, tényleg nincs!
                    Ezért használjuk a csillagot: `5 * 5`. Olvasd ezt "5-ször 5"-nek, így könnyen megjegyzed.
                example_code: |
                    ```
                    {print} "5 plusz 5 egyenlő " 5 + 5
                    {print} "5 mínusz 5 egyenlő " 5 - 5
                    {print} "5-ször 5 egyenlő " 5 * 5
                    ```
            7:
                story_text: |
                    A 7. szinten bemutatkozik az `{repeat}` parancs. Ezzel egy sort többször végrehajthatsz.
                example_code: |
                    ```
                    {repeat} 3 {times} {print} "A Hedy szórakoztató!"
                    ```
            8:
                story_text: |
                    A `{ask}` és a `{print}` még mindig úgy működik, ahogyan ismered. De a `{if}`, `{else}` és az `{repeat}` utasítások megváltoztak!
                    Most különböző utasítások egy csoportját futtathatod egyszerre, de behúzással tagolnod kell a kódot.
                    Ez azt jelenti, hogy négy szóközt kell tennünk a sor elejére. Ez akkor is érvényes, ha csak egy soros blokkot akarsz létrehozni.
                example_code: |
                    Így működik mostantól az `{repeat}` parancs:
                    ```
                    {repeat} 5 {times}
                        {print} "Sziasztok"
                        {print} "Ez 5-ször ismétlődik"
                    ```
                    Így működik mostantól a `{if}` és az `{else}` parancs:

                    ```
                    név {is} {ask} "Hogy hívnak?"
                    {if} név {is} Hedy
                        {print} "Szia Hedy!"
                        {print} "Játszhatsz a számítógéppel."
                    {else}
                        {print} "BEHATOLÓ!"
                        {print} "Nem használhatod ezt a gépet!"
                    ```

                        {print} "Sziasztok"
                        {print} "Ez 5-ször lett kiírva"
            9:
                story_text: |
                    Ezen a szinten már nemcsak több soros `{if}` és `{repeat}` parancsokat használhatsz, hanem egymásba is teheted őket.
                    A példában egy `{if}` van egy `{repeat}` parancson belül. Fordítva is lehet csinálni, és még `{if}` is lehet `{if}` `{if}` parancsba ágyazva, vagy `{repeat}` `{repeat}`-be.
                    Próbáld ki!
                example_code: |
                    ```
                    {repeat} 3 {times}
                        étel = {ask} "Mit kérsz?"
                        {if} étel {is} pizza
                            {print} "fincsi!"
                        {else}
                            {print} "a pizza finomabb"
                    ```

                        étel = {ask} "Mit kérsz?"
                        {if} étel {is} pizza
                            {print} "fincsi!"
                        {else}
                            {print} "a pizza finomabb"
            10:
                story_text: |-
                    Ezen a szinten új parancsot mutatunk be, a `{for}`-t. A `{for}` segítségével egy lista minden elemét használhatod.
                    A `{for}` is létrehoz egy blokkot, pont úgy, ahogy az `{repeat}` és `{if}`, ezért az összes sort a blokkban szóközökkel kell kezdeni.
                example_code: |
                    ```
                    állatok {is} kutya, cica, gömbhal
                    {for} állat {in} állatok
                      {print} 'Szép ' állat
                    ```
            12:
                story_text: |-
                    **Tizedes törtek**
                    Egészen eddig a Hedy nem kezelte a tört számokat, mint az 1,5. Figyelj, hogy a számítógépek `.` használnak, így: 1.5
                example_code: |
                    ```
                    {print} 'Két és fél plusz két fél egyenlő...'
                    {print} 2.5 + 2.5
                    ```

                    {print} 2.5 + 2.5
            13:
                story_text: Most megtanuljuk az `{and}` és `{or}` kifejezések használatát! Ha két állítást szeretnél ellenőrizni, akkor nem kell kettő {if} parancsot használnod, használhatod az `{and}` és `{or}` parancsokat. Ha az `{and}` parancsot használod, akkor az `{and}` bal és jobb oldalán mindkét állításnak igaznak kell lennie. `{or}` esetén csak egy állításnak kell helyesnek lennie.
                example_code: |
                    ```
                    név = {ask} "Hogy hívnak?"
                    kor = {ask} "Hány éves vagy?"
                    {if} név {is} "Hedy" {and} kor {is} 2
                        {print} "Te vagy az igazi Hedy!"
                    ```
            14:
                story_text: |
                    További új elemeket fogunk megtanulni! Lehet, hogy már a matematikából ismered ezeket a jeleket, a `<` és a `>`.
                    A `<` ellenőrzi, hogy az első szám kisebb-e, mint a második, például kor `<` 12 megmondja, hogy a kor kisebb-e, mint 12.
                    Ha arra vagy kíváncsi, hogy az első szám kisebb vagy egyenlő-e a másodikkal, a `<=` jelet használd, például kor `<=` 11.
                    A `>` ellenőrzi, hogy az első szám nagyobb-e, mint a második, például pontszám `>` 10 megmondja, hogy a pontszám nagyobb-e, mint 10.
                    Ha arra vagy kíváncsi, hogy az első szám nagyobb vagy egyenlő-e a másodikkal, a `>=` jelet használd, például pontszám `<=` 11.
                    Ezeket az összehasonlításokat `{if}` parancsok után használhatod, így:
                example_code: |
                    ```
                    kor = {ask} "Hány éves vagy?"
                    {if} kor > 12
                        {print} "Idősebb vagy nálam!"
                    ```
            15:
                story_text: |-
                    Tanulni fogunk egy új ciklust, az `{while}` ciklust! Addig folytatjuk a ciklust, amíg az állítás igaz!
                    Szóval ne felejtsd el módosítani a ciklusban szereplő értéket!

                    A példakódban addig megyünk, amíg meg nem kapjuk a helyes választ.
                    Ha soha nem kapjuk meg a megoldást, akkor a ciklus soha nem ér véget!
                example_code: |
                    ```
                    válasz = 0
                    {while} válasz != 25
                        válasz = {ask} "Mennyi 5-ször 5?"
                    {print} "Ez a helyes válasz"
                    ```

                        válasz = {ask} "Mennyi 5-ször 5?"
                    {print} "Ez a helyes válasz"
            16:
                story_text: |-
                    Listákat fogunk készíteni Python módra, szögletes zárójelekkel! Megtartjuk az idézőjeleket az elemek körül, ahogy az előző szinteken tanultuk, és az egész listát szögletes zárójelek közé foglaljuk.
                    A szögletes zárójeleket arra is használhatod, hogy kiválaszd a lista elemét egy adott helyen.
                example_code: |
                    ```
                    barátok = ["Aladár", "Blöki", "MZ/X"]
                    szerencsés_számok = [15, 18, 6]
                    {for} i {in} {range} 1 {to} 3
                        {print} barátok[i] " szerencsés száma"
                        {print} "egyenlő " szerencsés_számok[i]
                    ```
            17:
                story_text: |-
                    Most egy kicsit meg fogjuk változtatni a behúzást. Minden alkalommal, amikor behúzást használunk, az előző sor végére`:` jelet teszünk.

                    Ezen a szinten egy új parancsot is használhatsz: `{elif}`. Az `{elif}` az `{else} {if}` rövidítése, és szükséged lesz rá, ha 3 (vagy több!) alternatívát szeretnél használni.
                    Próbáld ki!
            18:
                story_text: Elértünk az igazi Python kódhoz! Ez azt jelenti, hogy zárójeleket kell használnunk a {print} és {range} esetében.
    dice:
        name: Készítsd el a saját kockádat
        default_save_name: Kocka
        description: Készítsd el a saját kockádat
        levels:
            3:
                story_text: |-
                    A 2. szinten választhatunk egy listából. Ezzel hagyhatjuk, hogy a számítógép válassza ki
                    a kocka egyik oldalát.
                    Vess egy pillantást azokra a játékokra, amelyek otthon vannak a szekrényedben.
                    Vannak (speciális) kockával játszott játékok? Ezzel a kóddal másolhatod is.
                    Például a Giliszta játék kockája a 1–5-ig számokkal és egy gilisztával.
                    ! [Giliszta játék kockája a 1–5-ig számokkal és egy gilisztával]
                    Véletlenül megpróbáltál olyan mondatot megfogalmazni, amely tartalmazza a
                    dobásokat?
                    Például. `print Választottam a dobasok közül`. Próbáld ki, ha még nem tetted meg.
                    Ez nem működik megfelelően! Aztán megkapod: Az [1, 2, 3, 4, 5, földigiliszta] közül
                    választottam. Ezt meg tudod majd oldani a 3. szinten.
                example_code: |-
                    ```
                    dobasok is 1, 2, 3, 4, 5, giliszta
                    print dobasok at random
                    ```
            4:
                story_text: |-
                    A 3. szinten mondatokat készíthetünk a változó értékével, természetesen idézőjelekkel.
                    Ezúttal a minta kód nem egészen teljes. Be tudod fejezni a kódot?
            5:
                story_text: |
                    Ismét készíthetsz egy kockát a 4. szinten az `if` használatával.
                    Töltsd ki a mintakódot úgy, hogy a kód azt mondja: "Megállíthatod a dobást", miután
                    földigilisztát dobtál.
                    De lehet, hogy újra létre akarsz hozni egy kockát egy teljesen más játékból. Ez is
                    rendben van! Ezután állítsd be a saját reakcióját. Pl. „Igen” 6-ra és „kár” valami másra.
                example_code: |-
                    ```
                    dobasok is 1, 2, 3, 4, 5, giliszta
                    dobas _
                    print 'Te' _ 'dobtál'
                    if _ is giliszta print 'Megállhatsz.' _ print 'Dobj újra!'
                    ```
            6:
                story_text: |-
                    Azt is megteheted, hogy újra egy giliszta kockát csinálsz a 6. szinten, de most kiszámíthatod azt is, hogy hány pontot dobtál.

                    Lehet, hogy tudod, hogy a giliszta 5 pontot számít a játékban. Most egy dobás után azonnal kiszámíthatod, hány pontot dobott.

                    Ez az a kód, amely kiszámítja a pontokat egy dobáshoz:

                    Át tudod alakítani a kódot, hogy megkapd a 8 kockadobás összpontszámát? Ehhez ki kell vágnod és be kell illesztened a kód egyes sorait.


                    Sikerült kiszámolni a 8 kocka pontszámát? Ehhez sok vágás és beillesztés kellett, igaz? Ezt megkönnyítjük a 7. szinten!
                example_code: |-
                    ```
                    dobasok = 1, 2, 3, 4, 5, giliszta
                    pontok = 0
                    dobas = dobasok at random
                    print 'a dobásod' dobas
                    if dobas is giliszta pontok = pontok + 5 else pontok = pontok + dobas
                    print 'Pontok:' pontok
                    ```
                example_code_2: |
                    Did you manage to calculate the score for 8 dice? That required a lot of cutting and pasting, right? We are going to make that easier in level 7!
            7:
                story_text: |-
                    Az 5. szinten ismét készíthetsz kockát . A `repeat` kóddal könnyedén dobhatsz egy
                    csomó dobókockát.
                    Próbáld meg befejezni a mintakódot! A kötőjeleknek több parancsot és karaktert
                    kell tartalmazniuk.
                    De talán teljesen más kockát akarsz készíteni. Természetesen lehet!
                example_code: |-
                    ```
                    dobások is 1, 2, 3, 4, 5, giliszta
                    repeat _ _ print _ _
                    ```
            10:
                story_text: |
                    Is everybody taking too long throwing the dice? In this level you can let Hedy throw all the dice at once!
                example_code: |
                    ```
                    players = Ann, John, Jesse
                    choices = 1, 2, 3, 4, 5, 6
                    {for} player {in} players
                        {print} player ' throws ' choices {at} {random}
                        {sleep}
                    ```
    dishes:
        name: Ki mosogat?
        default_save_name: mosogat
        description: Használd a számítógépet, hogy lásd, ki mosogat (Kezdd a 2. szinten)
        levels:
            3:
                story_text: |-
                    Otthon általában nem értesz egyet abban, hogy kinek kell ma mosogatnia vagy kicserélnie az alomdobozt?

                    Ezután hagyhatod, hogy a számítógép nagyon tisztességesen válasszon. Ezt beprogramozhatod a 2. szinten!

                    Először állítsd össze a családja tagjainak listáját. Ezután válaszd az 'at random' lehetőséget a listából.


                    Véletlenül megpróbáltál olyan mondatot alkotni, amely az emberek szót tartalmazta?

                    Pl. `print Ezek közül az emberek közül választottam`. Próbáld ki, ha még nem tetted meg.

                    Ez nem működik megfelelően! Aztán megkapod: [apu, anya, Edit, Gizi] közül választottam. Ezt meg tudod majd oldani a 3. szinten.
                example_code: |-
                    ```
                    emberek is anya, apa, Edit, Gizi
                    print emberek at random
                    ```
            4:
                story_text: |
                    Az idézőjelek segítségével szebbé teheted a mosogatás tervezését.
                    Ezúttal a minta kód nem egészen teljes.
                    Ki tudod egészíteni a kódot a helyes parancsok vagy karakterek pontokra történő beírásával?
                    Minden üres helyet egy paranccsal kell kicserélni.
                    Tipp: Ne felejtsd el az idézőjeleket.
                example_code: |
                    ```
                    emberek is anya, apa, Edit, Gizi
                    print _ ő mosogat: _
                    print emberek at _
                    ```
            5:
                story_text: |
                    Az `if` segítségével most szórakoztatóbbá teheted a választást a programban.
                    Megkérheted a programot, hogy válaszoljon a számítógép választására.
                    Befejezheted a kódot úgy, hogy „túl rosszul” írja ki, amikor rajtad a sor, és egyébként
                    „igen!”?
                    Ne felejtsd el az idézeteket!
                example_code: |-
                    ```
                    emberek is anya, apa, Edit, Gizi
                    mosogato is emberek at random
                    if mosogato is Gizi print _ sajnos mosogatnom kell _ else print 'szerencsére nem én,
                    mert' _ 'már mosogat'
                    ```
            6:
                story_text: |-
                    Ki milyen gyakran mosogat? Ez igazságos? Ezt megszámolhatod a 5. szinten.

                    Most néhányszor átmásolhatod a 3–5-ös sorokat (pl. az egész hétre 7-szer), hogy ismét egy egész hétre számoljon.
                    Elkészíted az egész hét kódját?

                    Most sokat kell másolnod és beillesztened, igaz? Ezt a 7. szinten javítjuk.
                    Ezen a szinten a vége a mosogató kalandnak! De még mindig sok kaland van más szinteken, például egy számológéppel, egy interaktív történettel és egy bonyolultabb játékkal.
                example_code: |
                    ```
                    emberek = anya, apa, Edit, Gizi
                    edit_mosogat = 0
                    mosogato = emberek at random
                    print 'A mosogató' mosogato
                    if mosogato is Edit edit_mosogat = edit_mosogat + 1
                    print 'Edit ezen a héten' edit_mosogat 'alkalommal mosogatott'
                    ```
            7:
                story_text: |-
                    Az `repeat` segítségével megismételheted a kódrészleteket. Ennek segítségével
                    kiszámíthatod, hogy kik fogj mosogatni az egész héten.
                example_code: |-
                    ```
                    emberek is anya, apa, Edit, Gizi
                    repeat _ _ print 'a mosogató:' _
                    ```
    fortune:
        name: Jósnő
        default_save_name: Jósnő
        description: Hadd jósolja meg Hedy a jövőt
        levels:
            1:
                story_text: |
                    Voltál már fesztiválon, és egy jósnő megjósolta a jövődet? Vagy játszottál már varázslatos nyolc labdával?
                    Akkor valószínűleg tudod, hogy nem igazán tudják megjósolni a jövődet, de ettől még szórakoztató játszani!

                    A következő szinteken megtanulhatod, hogyan kell saját jósnőt létrehozni!
                    Az 1. szinten könnyen kezdheted, ha hagyod, hogy Hedy jósnőként mutatkozzon be, és hagyja, hogy visszhangozza a játékosok válaszait.
                    Mint ez:
                example_code: |
                    ```
                    print Szia, Hedy, a jósnő vagyok!
                    ask Ki vagy te?
                    print Hadd nézzek bele a kristálygömbömbe
                    print Látom... Látom...
                    echo A neved
                    ```
                    Hedy most csak a nevedet mondja meg. Ki tudod bővíteni a kódot, hogy Hedy több dolgot meg tudjon jósolni rólad?

                    Nyilvánvaló, hogy Hedy még nem túl jó jósnő, hiszen csak meg tudja ismételni a játékosok által adott válaszokat!
                    Vess egy pillantást a 2. szintre, hogy fejleszd a jósnődet.
                story_text_2: |
                    ### Exercise
                    Hedy now only tells you your name. Can you expand the code so that Hedy can predict more things about you?
                    Obviously, Hedy isn't a very good fortune teller yet, as she can only repeat the answers that were given by the players!
                    Take a look in level 2 to improve your fortune teller.
            3:
                story_text: |
                    Az 1. szinten megalkottad első jóslásgépedet, de Hedy nem tudott igazán megjósolni semmit, csak visszhangot.
                    A 2. szinten használhatsz egy változót és az `at random`  parancsot, hogy valóban engedd, hogy Hedy válaszoljon Neked. Nézd meg például ezt a kódot:

                    Most Hedy csak igennel, nemmel vagy talán válaszolhat. Adhatsz Hedynek több válaszlehetőséget, például „határozottan” vagy „kérdezz újra”
                example_code: |-
                    Ebben a példában a játékos igen-nem kérdést tehet fel Hedynek, és Hedy véletlenszerű választ ad.
                    ```
                    print Szia Hedy a jósnő vagyok!
                    kerdes is ask Mit akarsz tudni?
                    print Ez az amit tudni akarsz: kerdes
                    valasz is igen, nem, talan
                    print A kristálygömböm azt mondja... valasz at random
                    ```
                story_text_2: |
                    ### Exercises
                    Now, Hedy can only answer yes, no or maybe. Can you give Hedy more answer options, like 'definitely' or '{ask} again'.
            5:
                story_text: |-
                    A 4. szinten megtanulod (titokban) az esélyeket a magad javára billenteni a jósnő használata során!
                    Az `if` és `else` használatával bebiztosíthatod, hogy mindig jó szerencsét kapj, míg mások nem.
                    Tekintsd meg ezt a példát, hogy megtudd, hogyan.


                    Cseréld le Hedyt a saját nevedre az utolsó sorban, és Hedy mindig azt jósolja, hogy te nyersz a lottón, mások nem!
                    Természetesen ez gyanakvást kelthet a többi játékossal szemben ... Ennek elkerülése érdekében gondoskodhatsz arról, hogy Hedy minden alkalommal más válaszokat adjon a kód futtatásakor.
                    De természetesen neked továbbra is pozitív választ ad, a többi játékosnak pedig negatív választ.

                    Ezeb az elven különféle programokat lehet készíteni, csak légy kreatív! Például létrehozhatsz egy olyan gépet, amely megjósolja, hogy kedvenc sportcsapatod legyőzi az összes versenytársat!
                    Vagy elkészítheted Hófehérke varázslatos tükrét a falon, hogy elmondd mindenkinek, hogy te vagy a legbecsületesebb!
                    Hagyd, hogy a fantáziád végezze a munkádat!
                example_code: |
                    ```
                    print 'Szia, Hedy, a jósnő vagyok'
                    print 'Meg tudom jósolni, nyersz-e a lottón holnap!'
                    szemely is ask 'Ki vagy te?'
                    if szemely is Hedy print 'Bizonyosan nyerni fogsz!' else print 'Balszerencse! Valaki más nyer!'
                    ```
            6:
                story_text: |-
                    A 5. szinten jövendőmondóként használhatod a matematikát előrejelzéseidben. Ez lehetővé teszi (buta) képletek kitalálását a jövő kiszámításához.
                    Például kiszámíthatod, hogy milyen gazdag leszel, vagy hány gyermeked lesz, ha felnősz.
                example_code: |
                    ```
                    print 'Hedy, a jósnő vagyok!'
                    print 'Meg tudom jósolni, hány gyermeked lesz, ha felnősz!'
                    kor is ask 'Hány éves vagy?'
                    testver is ask 'Hány testvéred van?'
                    magassag is ask 'Hány cm magas vagy?'
                    gyerekek is magassag / kor
                    gyerekek is gyerekek - testver
                    print 'Neked ...'
                    print gyerekek ' gyereked lesz!'
                    ```

                    Ha az előző példa nem volt elég buta a számodra, akkor nézd meg ezt!

                    ```
                    print 'Hedy vagyok a buta jósnő!'
                    print 'Meg tudom jósolni, milyen okos vagy!'
                    foci is ask '1-10-es skálás mennyire szereted a focit?'
                    banan is ask 'Hány banánt ettél a héten?'
                    higienia is ask 'Hányszor mostad meg a kezed ma?'
                    eredmeny is banan + higienia
                    eredmeny is eredmeny * foci
                    print 'Te ' eredmeny ' százalék okos vagy.'
                    ```
            7:
                story_text: |-
                    Az 6. szinten a `repeat` paranccsal beállíthatod, hogy a gép egyszerre több jóslatot mondjon.

                    Amint láthatod, a kérdések ebben a példában nincsenek kiíratva. Ennek az az oka, hogy a `kérdés` változót háromszor módosult.
                    Valahányszor a játékos kitölti az új választ, Hedy felülírja az előzőt, így a játékos első válaszát elfelejti.
                    Ez azt jelenti, hogy így nem tudja kiíratni az összes kérdést.

                    Ha 1 helyett 3 különböző változót használsz (például `kerdes1`,` kerdes2` és `kerdes3`), megoldhatod a problémát, és kiírathatod a kérdéseket.
                    Ez azt jelenti, hogy a válaszoknál csak az "repeat" utasítást kell használnod, és az összes kérdést külön kell feltenned és ki kell íratnod.
                    Meg tudod csinálni?

                    A 7. szinten az ismétlés parancs elrendezése megváltozik, ami lehetővé teszi több sor ismétlését egyszerre.
                example_code: |
                    ```
                    print 'Hedy, a jósnő vagyok!'
                    print 'Feltehetsz 3 kérdést!'
                    repeat 3 times kerdes is ask 'Mit akarsz tudni?'
                    valasz is igen, nem, talan
                    repeat 3 times print 'A kristálygömböm azt mondja... ' valasz at random
                    ```
            8:
                story_text: |-
                    Az 5. szinten megtanultad, hogyan kell használni az ismétlést, hogy a jósnő 3 kérdésre válaszoljon egymás után, de problémánk adódott a kérdések kiíratásával.
                    A 7. szinten ez a probléma megoldódott az ismétlés parancs új módjának köszönhetően.
                    A következő példában a jósnő 3 kérdést tehet fel, és kiírathatja őket!
                example_code: |
                    ```
                    print 'Hedy a jósnő vagyok!'
                    print 'Feltehetsz 3 kérdést.'
                    valasz is igen, nem, talán
                    repeat 3 times
                        kerdes is ask 'Mit akarsz tudni?'
                        print kerdes
                        print 'A kristálygömböm azt mondja...' valasz at random
                    ```
    haunted:
        name: Kísértetház
        default_save_name: Kísértetház
        description: menekülés a kísértetjárta házból
        levels:
            1:
                story_text: |-
                    Ebben a kalandban egy olyan játék létrehozásán dolgozol, amelyben a megfelelő ajtó kiválasztásával menekülnöd kell egy kísértetjárta házból.
                    Ha a megfelelő ajtót választod, túléled, de ha nem, egy rettenetes szörnyeteg ...

                    Az 1. szinten elkezdjük a kísértetjárta ház játékunkat egy ijesztő történet kitalálásával, és megkérdezzük a játékost, hogy milyen szörnyet látnak a kísértetjárta házban.
                example_code: |
                    ```
                    print Hogyan kerültem ide?
                    print Emlékszem, a barátom azt mondta, menjek be a régi kastélyba ...
                    print és hirtelen minden elsötétült.
                    print De hogy kerületem a padlóra...?
                    print és fejem úgy fáj, mintha egy baseball ütővel ütötték volna meg!
                    print Mi ez a hang?
                    print Ó, nem! Úgy érzem, nem vagyok egyedül ebben a házban!
                    print El kell mennem innen!
                    print Három ajtó van előttem ...
                    ask Melyik ajtót válasszam?
                    echo Az ajtó, amit választok
                    print ...?
                    ```
                    Be tudod fejezni az ijesztő történetet? Vagy kitalálsz egy saját kísértetáz történetet?
            3:
                story_text: |-
                    Az 1. szinten bemutatkoztál a kísértetház játékodnak, de ahogy észrevetted, a történetnek mindig rettenetes vége lesz.
                    A 2. szinten interaktívabbá teheted a történetet a játék kimenetelének megváltoztatásával; néha megesznek, néha megmenekülsz!
                    Hadd döntsön Hedy véletlenszerűen!


                    Ez a történet meglehetősen egyszerű, talán egy kicsit érdekesebbé teheted egy izgalmasabb történet hozzáadásával.
                    Továbbá nagyon korlátozott eredményeket érhetsz el, csak 3 lehetőség van arra, hogy mi van az ajtók mögött. Talán még több szörnyetegre gondolhatsz, amelyet felvehetsz a listába!

                    Végezetül szeretnénk egy kihívást küldeni Neked,  hogy változtasd meg ezt a játékot olyan játékműsorrá (mint amilyenek a tévében vannak), ahol a játékosok ajtót vagy bőröndöt választanak, és valamelyik nagy díjat tartalmaz!
                    Meg tudod csinálni?
            4:
                story_text: |-
                    A 3. szinten megtanulod használni az idézőjeleket a játékaidban.
                    Át tudod alakítani a kisértetház játékot úgy, hogy megfeleljen a 3. szintnek?
            5:
                story_text: |-
                    Eddig a szintig a kísértetjárta ház játék mindig arra kérte a játékost, hogy válasszon egy ajtót, de ahogy észrevettétek, nem igazán kellett helyesen válaszolniuk.
                    Abban az esetben, ha a játékos teljesen véletlenszerű választ adott, a játék továbbra is működne, és a játékos akár nyerhet is (annak ellenére, hogy nem választott ajtót).
                    A 4. szinten csak akkor nyerheti meg a játékot, ha ugyanazt az ajtót választja, amelyet Hedy véletlenszerűen választott ki.
                example_code: |
                    ```
                    print 'Szabadulj ki a kísértetházból!'
                    print 'Három ajtó van előtted...'
                    ajtok is 1,2,3
                    szornyek is verfarkas, mumia, vampir, zombi
                    valasztottajto is ask 'Melyik ajtót választod?'
                    print 'Az ajtó, amit választottál...' valasztottajto
                    helyesajto is ajtok at random
                    if valasztottajto is helyesajto print 'Nagyszerű! Kiszabadultál!'
                    else print 'Jaj ne! Megevett a ...' szornyek at random
                    ```
            11:
                story_text: A 8. szinten megváltoztattuk az ismétlés parancsot, és hozzáadtunk egy sort a kísértetjárta házunkhoz, amely megmondja a játékosnak, hogy melyik szobában vannak.
                example_code: |
                    ```
                    print 'Szabadulj ki a kísértetházból'
                    jatekos is elo
                    ajtok is 1, 2, 3
                    szornyek is  vampir, zombi, oriaspok
                    for i in range 1 to 3
                        if jatekos is elo
                            helyesajto is ajtok at random
                            print 'Három ajtó van előtted...'
                            valasztottajto is ask 'Melyik ajtót választod?'
                            if valasztottajto is helyesajto
                                print 'Itt nincs szörny!'
                            else
                                print 'Megevett a(z) ' szornyek at random
                                jatekos is halott
                        else
                            print 'GAME OVER'
                    if jatekos is elo
                        print 'Nagyszerű! Túlélted!'
                    ```
    restaurant:
        name: Étterem
        default_save_name: Étterem
        description: Készíts virtuális éttermet
        levels:
            1:
                story_text: |-
                    Az 1. szinten elkészítheted saját virtuális éttermedet és fogadhatod vendégei megrendeléseit.

                    Tudnál még egy sort felvenni az éttermi kódodba? Megkérdezheted például a vendégeket, hogy mit szeretnének inni, megmondod-e nekik az árat, vagy kívánsz-e nekik jó étvágyat?
                story_text_2: |
                    ### Exercise
                    Can you think of more lines to add to your restaurant code? For example, can you {ask} the guests what they'd like to drink, tell them the price, or wish them a pleasant meal?
                example_code_2: |
                    ```
                    print Üdvözlünk a Hedy étteremben
                    ask Mit rendelsz?
                    echo Szóval ezt szeretnéd megrendelni
                    print Köszönjük a rendelésedet!
                    print Már úton van!
                    ```
            2:
                story_text: |
                    A 2. szinten változók segítségével bővítheted éttermedet. Az 1. szinten Hedy csak egyszer tudta visszhangozni a sorrendet, és csak az utolsó dologra emlékezett, amit rendeltek.
                    Most már használhatsz változókat, és Hedy emlékszik mind az ételekre, mind az italokra!
                example_code: |-
                    ```
                    print Üdvözlünk a Hedy étteremben!
                    print Ma pizzát vagy lasagnat szolgálunk fel.
                    etel is ask Mit szeretnél enni?
                    print Jó választás! A etel a kedvencem!
                    feltet is ask 'Szeretnél rá húst vagy zöldséget?'
                    print etel rajta feltet úton van!
                    ital is ask 'Mit szeretnél inni?'
                    print Köszönjük a rendelésedet.
                    print A etel és ital mindjárt itt lesz!
                    ```
            3:
                story_text: |-
                    Nehezen tudod eldönteni, mit szeretnél vacsorázni? Engedheted, hogy Hedy válasszon neked!
                    Egyszerűen add hozzá kedvenc (vagy legkevésbé kedvenc) ételeidnek listáját, és Hedy véletlenszerűen választhatja ki a vacsorádat.
                    Szórakozhatsz egy kicsit, ha hagyod, hogy Hedy megválassza a vacsora árát is! Mit fogsz kapni?
                example_code: |
                    ```
                    print Üdvözöljük a Hedy's Random étteremben!
                    print Az egyetlen étterem amely véletlenszerűen kiválasztja az étkezést és annak árát az Ön számára!
                    eloetelek is saláta, leves, sajt
                    foetel is pizza, kelbimbó, spagetti
                    desszertek is brownie, fagylalt, francia sajtok
                    ital is kóla, sör, víz
                    arak is 1000 forint, 2000 forint, 3000 forint
                    print A következővel indul: eloetelek at random
                    print Ezután kiszolgáljuk: foetel at random
                    print És desszertként: desszertek at random
                    print Igyon egy italt
                    print Ez lesz: arak at random
                    print Köszönöm és élvezze az étkezést!
                    ```
            4:
                example_code: |
                    ```
                    _ Add the quotation marks to this code _
                    print Üdvözlünk a Hedy Étteremben!
                    print Ma pizzát vagy lasagnat szolgálunk fel.
                    etel is ask Mit szeretnél enni?
                    print Jó választás! A(z)  etel  nekem is kedvencem!
                    feltet is ask 'Szeretnél hús vagy zöldséget rá?
                    print etel  , rajta a(z)  feltet  már úton van!
                    ital is ask Mit szeretnél inni hozzá?
                    print Köszönjük a rendelésedet.
                    print 'A(z)  etel  és a(z)  ital  mindjárt itt lesz!
                    ```
            5:
                story_text: |-
                    A 4. szinten az if parancs lehetővé teszi, hogy kérdéseket tegyél fel ügyfeleidnek, és különböző módon felelj a válaszaikra.
                    Az alábbi példában láthatod, hogy megkérdezheted az ügyfeledet, hogy szeretné-e hallani a különlegességeket, és Hedy ennek megfelelően válaszolhat.
                example_code: |
                    ```
                    print 'Üdvözlünk a Hedy Étteremben!'
                    kulonleges is ask 'Szeretnél hallani ma a különlegességeinkről?'
                    if kulonleges is igen print 'Mai különlegességünk piri piri csirke és rizs.' else print 'Nem probléma.'
                    etel is ask 'Mit szeretnél enni?'
                    print 'Egy ' etel', mindjárt jön!'
                    ital is ask 'Mit szeretnél inni hozzá?'
                    if ital is kóla print 'Sajnálom a kóla kifogyott!' else print 'Jó választás!!'
                    mas is ask 'Szeretnél valami mást?'
                    print 'Hadd ismételjem el a rendelésedet...'
                    print 'Egy ' etel
                    if ital is kóla print 'és...' else print 'Egy ' ital
                    if mas is nem print 'Ez minden!' else print 'Egy  ' mas
                    print 'Köszönjük a rendelésedet, jó étvágyat !'
                    ```

                    Tudnál még több kérdést feltenni az ügyfeleknek, amikor rendelnek, és különböző  módon felelni a válaszaikra az if paranccsal?
            6:
                story_text: |-
                    A 6. szinten matematikai számításokkal kiszámíthatod az ügyfelek megrendelésének teljes árát, ami reálisabbá teheti a virtuális éttermet.

                    Készíthetsz egyszerű éttermi kódot, például.
                example_code: |
                    ```
                    print 'Üdvözlünk a Hedy Étteremben'
                    print 'Ez a menünk:'
                    print 'Fő ételeink: pizza, lasagne vagy spagetti'
                    foetel is ask 'Melyik főételt szeretnéd?'
                    ar is 0
                    if foetel is pizza ar is 1000
                    if foetel is lasagne ar is 1200
                    if foetel is spagetti ar is 800
                    print 'Ezt rendelted: ' foetel
                    print 'Ez ' ar ' forint lesz, kérem'
                    print 'Köszönöm, jó étvágyat!'
                    ```

                    De még sok mindent hozzáadhatsz a virtuális éttermedhez, például több tanfolyamot.

                    Ebben a példában három tanfolyam létezik, amelyek több kódot és további kiegészítéseket igényelnek az ár kiszámításakor.

                    Hozzáadhatsz még sok mindent a virtuális éttermedhez, például:
                    - kérdezd meg, hány ember jön, és szorozd meg az árat ezzel az értékkel
                    - felveszel egy másik ételt?
                    - kedvezményt adsz az embereknek, amikor (titkos) kuponkódot adnak meg?
                    - adsz hozzá gyermekmenüt?
                    - gondolsz más szórakoztató dolgokra?
            7:
                story_text: |-
                    Az 6. szinten megtanultad, hogyan használhatod az ismétlés parancsot egy kódsor megismétlésére bizonyos számú alkalommal.
                    Ezt használhatod éttermedben, hogy megkérdezz több embert, hogy mit szeretnének enni. Mint ez:


                    Az 5. szinten több embert is megkérdezhetsz, hogy mit szeretnének enni, de nem lehet minden egyes rendelést külön kiíratni, mert csak egy kódsort ismételhetsz meg.
                    A 7. szinten megtanulhatod, hogyan kell több sor kódot egyszerre megismételni, ami lehetővé teszi több rendelés kérését és kiíratását is!
                example_code: |-
                    ```
                    print 'Üdvözlünk a Hedy étteremben!'
                    emberek is ask 'Hány ember jön ma?'
                    repeat emberek times food is ask 'Mit szeretnél ennit?'
                    print 'Köszönjük megrendelésedet! Mindjárt jön!'
                    ```
            9:
                story_text: |-
                    A 7. szinten több sor kód megismétlésével bonyolultabbá teheted virtuális éttermedet. Mint ez:

                    Természetesen ez a kód bővíthető a menü további elemeivel, italokkal és/vagy több fogással, így nyugodtan adj hozzá annyi lehetőséget, amennyit csak akarsz!
                example_code: |-
                    ```
                    print 'Üdvözlünk a Hedy étteremben!'
                    emberek is ask 'Hány ember jön ma??'
                    print 'Nagyszerű!'
                    print 'A mai menü pizza vagy saláta'
                    ar is 0
                    repeat emberek times
                        etel is ask 'Mit szeretnél rendelni?'
                        print etel
                        if etel is pizza
                            ar is ar + 1000
                        else
                            ar is ar + 800
                    print 'Köszönjük rendelésedet!'
                    print 'Ez ' ar ' forint lesz'
                    print 'Köszönöm, jó étvágyat!!'
                    ```
            11:
                story_text: Az "for i in 1 in 5" tartományban használhatjuk a több vásárló megrendeléseinek rendezett kiíratására.
                example_code: |
                    ```
                    print 'Üdvözlünk a Hedynél!'
                    emberek is ask 'Hány ember számára rendelsz?'
                    for i in range 1 to emberek
                        print 'Rendelésszám ' i
                        etel is ask 'Mit szeretnél enni?'
                        print etel
                        if etel is sültkrumpli
                            szosz is ask 'Milyen szószt szeretnél hozzá?'
                            print szosz
                        ital is ask 'Mit szeretnél inni?'
                        print ital
                    ar is 400 * emberek
                    print 'Ez ' ar ' forint lesz, kérem'
                    ```
    rock:
        name: Kő, papír, olló
        default_save_name: Kő
        description: Készíts saját kő, papír, olló játékot
        levels:
            1:
                story_text: |
                    Az 1. szinten kezdhetsz egy kő, papír, olló játékkal.

                    A `ask` utasítással választhatsz, és az` echo'-val megismételheted ezt a választást.

                    Az ismétlés természetesen kissé unalmas, mert a számítógép nem választ semmit. Ezt később mi magunk is elkészítjük.
                example_code: |-
                    ```
                    print Mit választottál?
                    ask Válassz kő, papír és olló közül
                    echo ez volt a választásod:
                    ```
            3:
                story_text: |
                    A 2. szinten listákat írhatunk be, és választhatunk belőlük dolgokat.
                    Először készíts egy listát az `is` segítségével. Ezután hagyhatod, hogy a számítógép a `at
                    random` segítségével válasszon ki valamit a listából.
                    Például megengedheted, hogy a számítógép kő, papír és olló közül válogasson.

                    Újra használhatod a `ask'-t a 2. szinten. Kiírathatod számítógép a választását?
                    Vigyázz, a `ask` most másképp működik, mint az 1. szinten. Előtte el kell nevezni.

                    Véletlenül megpróbáltál olyan mondatot megfogalmazni, amely tartalmazza a valasztas
                    változót?
                    Például. ```print Az enyém: valasztas```. Próbáld ki, ha még nem tetted meg.
                    Ez nem működik megfelelően! Aztán megkapod: a [kő, papír, olló] közül választottam.
                    Ezt meg tudod majd oldani a 3. szinten.
                example_code: |-
                    ```
                    valasztas is kő, papír, olló
                    print valasztas at random
                    ```
            5:
                story_text: |-
                    A 4. szinten meghatározhatjuk, hogy ki nyert.
                    Ehhez szükséged van az új `if` kódra.

                    Mentsd el a a számítógép választását egy tetszőleges névvel.
                    Ezután használhatod az `if' utasítást, hogy lásd, azonosak-e vagy különböznek-e.
                    Befejezed a kódot?

                    Először töltsd ki a helyes kódot a pontok helyén, és nézd meg, hogy döntetlen-e.
                example_code: |-
                    ```
                    lehetoseg is kő, papír, olló
                    szamitogepe is _
                    valaszt is ask Mit választasz?
                    print 'ezt választottad: ' _
                    print 'a számítógép választása: ' _
                    if _ is _ print 'döntetlen!' else print 'nem döntetlen'
                    if valaszt is kő and szamitogepe is papír print 'számítógép nyert'
                    ```
    songs:
        name: Énekelj egy dalt!
        default_save_name: Dal
        description: Dal kiíratása
        levels:
            6:
                story_text: |-
                    A dalok gyakran sok ismétlést tartalmaznak. Néha az ismétlés alapja a számlálás is.
                    Például a jól ismert dalban „üveg sör”. Programozhatod azt a dalt egy kis matekkal.

                    Most megismételheted a 2–9. Sort, ahányszor csak akarod, a sorok másolásával.

                    # Előretekintve
                    Az 5. szinten megtanultunk 1 sort megismételni az `repeat` szóval, így:

                    * repeat 3 times print 'Baby Shark Tutududududu'

                    De ahogyan ebben a leckében látni fogod, néha több sort is meg akarsz együtt ismételni. Ezt meg lehet tenni vágással és beillesztéssel, de ez sok munka. A 7. szinten megtanulod, hogyan kell ezt könnyebben megtenni.
                example_code: |-
                    ```
                    verssor = 99
                    print verssor ' üveg sör a falon'
                    print verssor ' üveg sör'
                    print 'Vegyél egyet, add tovább'
                    verssor = verssor - 1
                    print verssor ' üveg sör a falon'
                    ```
            7:
                story_text: |
                    A dalok gyakran sok ismétlést tartalmaznak. Például... Baby Shark! Ha elénekled, ugyanazt énekled folyamatosan:

                    Baby Shark tututudutudu <br>
                    Baby Shark tututudutudu <br>
                    Baby Shark tututudutudu <br>
                    Baby Shark

                    ezt a dalt sokkal rövidebbé teheted egy `repeat` utasítással! Be tudod fejezni a kódot?

                    A Baby Shark után természetesen más dalokat is programozhat. Sok dal van ismétléssel.
            8:
                story_text: "A 6. szinten a \"Üveg sör\" dalt programoztad. Egy verset alkottál, majd 99 -szer kellett lemásolnod a verssorokat. A 7. szinten 99 alkalommal ismételheted meg a dalt, csak egy egyszerű sor hozzáadásával!\n"
                example_code: |
                    ```
                    verssor = 99
                    print verssor ' üveg sör a falon'
                    print verssor ' üveg sör'
                    print 'Vegyél egyet, add tovább'
                    verssor = verssor - 1
                    print verssor 'üveg sör a falon'
                    ```
    turtle:
        name: Teknős
        default_save_name: teknős
        description: Készíts saját rajzot
        levels:
            1:
                story_text: |
                    Az 1. szinten Hedy segítségével rajzolhatsz is. A fordulatok és vonalak kombinálásával négyzetet vagy lépcsőt készíthetsz!

                    Az "előre" segítségével húzhatsz egy vonalat előre. A mögötte lévő szám határozza meg, hogy a teknős mennyit fog gyalogolni. "jobbra fordul" negyed fordulatot forgat az óramutató járásával megegyező irányba, "balra fordul" az óramutató járásával ellentétes irányba fordul
                story_text_2: |
                    ### Exercise
                    Ez egy kis lépcső kezdete. El tudod érni az 5 lépést?
            2:
                story_text: |-
                    Az 1. szinten a teknős csak balra vagy jobbra tudott fordulni. Ez egy kicsit unalmas!
                    A 2. szinten minden irányba tudja mutatni az orrát.

                    Használd a 90-et a negyed fordulathoz. Ezeket fokoknak hívjuk. A teljes fordulat 360 fok.
                    Tudsz ábrát készíteni ezzel a kóddal? Talán egy háromszög vagy egy kör?
                example_code: |
                    ```
                    print Ábrák rajzolása
                    angle is 90
                    turn angle
                    forward 25
                    turn angle
                    forward 25
                    ```
                story_text_2: |
                    Also, in level 1 the turtle could only turn left or right. That is a bit boring!
                    In level 2 he can point his nose in all directions.

                    Use 90 to turn a quarter. We call this degrees. A full turn is 360 degrees.
                    Can you make a figure with this code? Maybe a triangle or a circle?
                example_code_2: |
                    ```
                    {print} Drawing figures
                    angle {is} 90
                    {turn} angle
                    {forward} 25
                    {turn} angle
                    {forward} 25
                    ```
            3:
                story_text: |
                    Iin level 3 you can use use `random` with the drawing turtle. A random choice makes the turtle walk a different path each time.
                    Use `at random` to choose a value from a list. You can copy and paste lines 2 and 3 so create a longer random path.
                example_code: |
                    ```
                    angles is 10, 50, 90, 150, 250
                    turn angles at random
                    forward 25
                    ```
            4:
                story_text: "A 3. szinten idézőjeleket kell használni a \"print\" és az \"ask\" szöveggel. A teknős használata közben is\n"
                example_code: |
                    ```
                    print 'Teknős verseny'
                    irany is ask 'Hány fokot forduljon?'
                    turn irany
                    tavolsag is ask 'Milyen messze menjen?'
                    forward tavolsag
                    ```
            5:
                story_text: "A 4. szinten választást hozhatsz létre az `if` utasítással. Például választhatsz különböző típusú alakzatok között.\n"
                example_code: |
                    ```
                    print 'Ábrák rajzolása'
                    alakzat is ask 'Négyzetet vagy háromszöget akarsz rajzolni?'
                    if alakzat is háromszög szog is 120 else szog is 90
                    turn szog
                    forward 25
                    turn szog
                    forward 25
                    turn szog
                    forward 25
                    turn szog
                    forward 25
                    ```
                example_code_2: |
                    ```
                    direction {is} {ask} 'Do you want to go left, right, or straight ahead?'
                    if direction is left turn _
                    if direction is right turn _
                    forward 100
                    ```
            6:
                story_text: |-
                    Az 5. szinten számítások segítségével különböző alakzatokat rajzolhatsz.
                    Lehet, hogy az iskolában már tanultad, hogy a teljes kör fordulata 360 fokos. Ha nem, most már tudod!
                    Ezért is használsz 90 fokot egy négyzethez. 360 osztva 4 -gyel 90.
                    Most, hogy tudunk matematikázni Hedyvel, megrajzolhatjuk az összes kívánt alakzatot!
                example_code: |
                    ```
                    szogek is ask 'Hány szöget akarsz?'
                    szog is 360 / szogek
                    forward 50
                    turn szog
                    forward 50
                    turn szog
                    forward 50
                    turn szog
                    forward 50
                    turn szog
                    forward 50
                    turn szog
                    forward 50
                    turn szog
                    ```
            8:
                story_text: |
                    Most, hogy több sort megismételhetünk, könnyebben készíthetünk alakzatokat.
                    Csak egyszer kell beállítani a szöget, majd ezt a változót használni a `repeat` utasítással.


                    Továbbá javíthatjuk azt a programot, amely különböző alakzatokat rajzol.
                    Kitalálod, mennyit kell itt fordulnia a teknősnek? Fejezd be a kódot, és rajzolhatsz tetszőleges sokszöget!
                example_code: |-
                    ```
                    szog is 90
                    repeat 10 times
                        turn szog
                        forward 50
                    ```
                example_code_2: "```\nszogek = {ask} 'How many angles should I draw?'\nszog = 360 / szogek \n{repeat} szogek {times}\n    {turn} _\n    {forward} _\n```\n"
