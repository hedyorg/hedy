levels:
    1:
        intro: "### 打印和输入\n在本课结束时，您可以：\n* 编写打印文本的代码\n* 创建带有输入的故事"
        exercises:
        -   type: 文本
            contents: "### 练习\n计算机不会自己做某事。你必须始终给计算机一个任务。这样的任务称为命令。要打印出代码，我们使用命令“print”。\n\n### 打印文本\n在屏幕上，你刚刚看到了“print”命令。\n“print”命令会打印一个单词，如果它在引号之间。例如“print hello”。\n#### 练习 1：预测输出"
        -   type: 输出
            code: 打印 Hello everybody
            answer: Hello everybody
            lines: '1'
        -   answer: goedemorgen
            lines: '1'
            type: 输出
            code: 打印 goedemorgen
        -   type: 文本
            contents: "#### 练习 2：错误？\n有时错误会潜入您的代码中。这没什么大不了的，但 Hedy 无法正确读取您的代码。\n您认为以下哪些程序是错误的？"
        -   type: MC-code
            options:
            -   正确
            -   警告
            answer: 警告
            code: 打印 Hello everybody!
        -   type: MC-code
            options:
            -   正确
            -   警告
            code: 打印 print
            answer: 正确
        -   type: 文本
            contents: "### 要求输入\n\n只有文本有点无聊。您还可以在 Hedy 中要求输入。输入是您提供给计算机的文本。\n计算机会记住该文本，并可以在以后显示给您。\n此代码显示问题“你叫什么名字？”\n\n```hedy\n问你叫什么名字？\n```\n\n### 显示输入\n\nask 命令保存答案，但尚未显示。为此，您需要 `echo` 命令。`echo` 将在句子末尾显示答案。\n像这样：\n\n```hedy\n问你叫什么名字？\necho so your name is:\n```\n\n如果有人叫 Olivia 使用此代码，则输出将是：\n\n```\nso your name is: Olivia\n```\n\n请注意，计算机将准确打印您输入的文本。因此，使用冒号和大写或小写字母！\n\n#### 练习 3：预测输出\n\n预测这些程序的输出。假设已经填写了你自己的名字。"
        -   type: 输出
            code: "ask 你叫什么名字？\necho 所以你的名字是："
            lines: '2'
            answer: 所以你的名字是：**name**
        -   type: 输出
            code: "ask 你叫什么名字？\necho 很高兴认识你，"
            lines: '2'
            answer: 很高兴认识你，**name**
        -   type: 文本
            contents: "#### 练习 4：编程词汇\n\n每节课我们都会学习新词汇，包括本课。你知道这些术语是什么意思吗？用你自己的话来解释一下。"
        -   type: 定义
            lines: '1'
            answer: 您要交给计算机的任务，例如 print.
            word: 指令
        -   type: 定义
            word: 输入
            lines: '1'
            answer: 当 Hedy 展示询问屏幕时你在电脑里输入的内容
        -   type: 定义
            word: 输出
            answer: 按下“运行代码”按钮后，Hedy 在右侧屏幕上显示的内容。
            lines: '1'
        -   type: 文本
            contents: "#### 练习 5：命令\n\n到目前为止，我们已经学习了 3 个命令：`print`、`ask` 和 `echo`。它们有什么作用？用你自己的话解释一下。"
        -   type: 定义
            word: '`print` 命令'
            answer: 在屏幕上显示文本。
            lines: '1'
        -   type: 定义
            word: '`ask` 命令'
            answer: 要求用户输入。
            lines: '1'
        -   lines: '1'
            answer: 重复用户的输入。
            word: '`echo` 命令'
            type: 定义
    2:
        exercises:
        -   type: 文本
            code: "名字是 Mo\n打印名字"
            contents: "### 使用变量\n\n您刚刚在屏幕上看到了 `is` 命令。\n`is` 命令将某些内容保存在计算机内存中并为其命名。我们称之为变量。\n变量中保存的内容称为变量的值。"
        -   type: 文本
            contents: '#### 练习 1：标记正确的代码片段'
        -   type: circle
            answer: 在所有行上
            goal: 变量
            code: "名字是 Hedy\n打印 你好 名字\n年龄是 17\n打印 你的年龄是 岁"
        -   type: circle
            answer: 行1和3
            code: "名字 is Hedy\nprint 你好 名字\n年龄 is 17\nprint你的年龄是 岁"
            goal: 变量**被设置**的地方
        -   type: circle
            goal: 变量**被使用的**地方
            code: "名字is Hedy\npirint 你好 名字\n年龄is 17\nprint 你的年龄是 岁"
            answer: 行2和4
        -   type: 文本
            contents: "#### 练习 2：预测输出\n提示：您是否很难预测输出？请按照以下步骤操作：\n\n1. 标记设置变量的位置\n2. 标记使用变量的位置\n3. 在这两个位置之间画一条线\n4. 在使用变量的位置写入值（“is”后面的内容）。"
        -   type: 输出
            code: "名字是 Mo\n打印 干得好名字！"
            answer: 干得好 Mo!
            lines: '1'
        -   type: 输出
            answer: 干得好 Mo！
            lines: '1'
            code: "名字是 Mo\n打印 干得好，Mo！"
        -   answer: 早上好 Layla!
            type: 输出
            code: "first_name is Layla\nprint 早上好 first_name！"
            lines: '1'
        -   type: 文本
            contents: "#### 练习 3：错误？\n仔细阅读程序。哪些是正确的？"
        -   type: MC-code
            options:
            -   正确
            -   错误
            answer: 正确
            code: "姓氏is Johnson\n打印 早上好 姓氏！"
        -   type: MC-code
            options:
            -   正确
            -   错误
            answer: 不正确。名称未设置。
            code: "名字 is\nprint 早上好，名字！"
        -   options:
            -   正确
            -   错误
            code: "名字is Johnson\nprint 早上好，先生，名字！\nprint 你好，先生，名字！"
            answer: 正确。你可以多次使用一个变量。
            type: MC-code
        -   type: 文本
            code: name is ask What is your name?
            contents: "### 请求输入\n\n仅保存文本并不是很有用。在第 1 级中，我们已看到代码“ask”。\n\n从现在开始，您可以将“ask”与“is”组合在一起，如下所示："
        -   type: 文本
            contents: "### 显示输入\n有了变量，我们就不再需要 `echo` 了。只需使用 `print` 即可显示答案。"
            code: "name is ask What is your name?\nprint so you are called: name"
        -   type: 文本
            contents: "如果某个名叫 Olivia 的人使用此代码，则输出将是：“所以你叫：Olivia”\n#### 练习 4：预测输出\n预测这些程序的输出。假装使用了你自己的名字。"
        -   type: 输出
            answer: '所以你被称为: **name**'
            code: "name is ask 你叫什么名字？\nprint 所以你被称为: name"
            lines: '1'
        -   answer: 所以你今天感觉 **mood**
            lines: '1'
            code: "mood is ask 你今天过得怎么样？\nprint 所以你今天 mood 很好"
            type: 输出
        -   type: 文本
            contents: "#### 练习 5：编程单词\n我们在这一级别学习了一些新单词！用你自己的话解释它们。"
        -   type: 定义
            word: 变量
            answer: 您赋予某事物的名称，例如姓氏或年龄。
            lines: '1'
        -   type: 定义
            word: 值
            answer: 变量中保存了什么，例如 Andrew 或 12。
            lines: '1'
        -   type: 定义
            word: 配置
            lines: '1'
            answer: 你可以使用‘is’命令设置变量
        -   type: 定义
            lines: '1'
            word: 交互
            answer: 用户可以提供输入的程序。
        -   type: 文本
            contents: "#### 练习 6：命令\n我们一起学习了新命令：`is` 和 `is ask`。它们做什么？用你自己的话解释一下。"
        -   type: 定义
            answer: 将值（在 `is` 之后）保存到变量中（在 `is` 之前）
            lines: '1'
            word: '`is` 命令'
        -   type: 定义
            lines: '1'
            word: '`is ask` 命令'
            answer: 要求用户输入并将其保存在变量中。
        intro: "### 变量\n在本课结束时，您可以：\n* 将某些内容保存在变量中\n* 使用变量创建故事或绘图"
    3:
        exercises:
        -   type: 文本
            code: "friends is Mo, Layla, Danny\n打印 今天我将拜访 friends at random"
            contents: "### 变量\n您刚刚看到了`is`命令与列表一起使用。\n就像常规变量一样，我们使用`is`来保存某些内容。"
        -   type: 文本
            contents: '#### 练习 1：标记正确的代码片段'
        -   code: "today is monday\nclasses is 1HC, 1HB, 1HA\nrooms is 011, 304, 305, 501"
            answer: classes 和 rooms
            type: circle
            goal: lists
        -   code: "classes is 1HC, 1HB, 1HA\nprint today classes at random gets a day off!"
            type: circle
            goal: 使用列表中的文本的地方
            answer: 第 2 行结束
        -   type: 文本
            contents: "#### 练习 2：预测输出\n很难吗？再次使用这些步骤来预测变量的输出。\n1. 标记设置变量的位置\n2. 标记使用变量的位置\n3. 在这两个位置之间画一条线\n4. 当使用 `at` `random` 时，从列表中随机选择一个项目。"
        -   type: 输出
            answer: 今天**选一位老师**来教你！
            code: "teachers is Hermans, Merbis, Bagci, Senkal\nprint 今天有老师 teachers at random 来教你!"
            lines: '1'
        -   answer: 今天的老师是 Hermans.
            lines: '1'
            type: 输出
            code: "teachers is Hermans, Merbis, Bagci, Senkal\nprint 今天的老师是 Hermans."
        -   type: 输出
            lines: '1'
            answer: 今天 weather 多好啊！
            code: "weather is sunny, rainy, cloudy, stormy\nprint 今天 weather 真可爱!"
        -   type: 文本
            contents: "#### 练习 3：错误？\n仔细阅读程序。哪些是正确的？"
        -   type: MC-code
            options:
            -   正确
            -   错误
            code: "rocks is pebbles, stones, boulders\nprint 我爱 ! It rocks!"
            answer: 不正确。您无法打印列表
        -   type: MC-code
            options:
            -   正确
            -   错误
            code: "teachers is Hermans\n打印 今天将是 teachers at random"
            answer: 不正确。教师不是列表
        -   type: MC-code
            options:
            -   正确
            -   错误
            answer: 正确，计算机并不关心变量名是否有意义。
            code: "teachers is sunny, rainy, cloudy, stormy\nprint 今天将是 teachers at random"
        -   type: 文本
            contents: "## 冒险\n现在是开始这些冒险的好时机：\n简介\n随机\n骰子\n石头、剪刀、布\n音乐\n算命师\n餐厅\n鬼屋\n菜肴"
        -   type: 文本
            contents: "### 调整列表\n\n到目前为止，我们总是在程序开始时设置列表。"
            code: "answers is yes, no, maybe\nprint 答案是 answers at random"
        -   type: 文本
            contents: "但有时您希望用户将项目添加到列表中。\n您可以使用`add to`命令来实现这一点。您还可以使用`remove from`命令从列表中删除项目。"
            code: "animals is 🐿, 🦔, 🦇, 🦉\nanimal is ask 发出什么样的声音?\nadd animal to animals\nprint It was... animals at random"
        -   type: 文本
            contents: '#### 练习 4：正确还是不正确？'
        -   type: MC-code
            options:
            -   正确
            -   错误
            code: "letters is a,b,c,d\nremove a to letters"
            answer: 错误. 应该是 `remove from`, 不是 `remove to`.
        -   type: MC-code
            options:
            -   正确
            -   错误
            code: "food is pizza, fries, tacos\nremove burger from food"
            answer: 正确，你可以删除不在列表中的内容。但这样做没有意义
        -   type: MC-code
            options:
            -   正确
            -   错误
            code: "food is pizza, fries, tacos\nadd pizza to food"
            answer: 正确，你可以将某项内容放入列表中两次或多次。
        -   type: 文本
            contents: "#### 练习 5：编写代码\n仔细查看输出并为其编写匹配的代码。\n**确保您的代码至少包含一个随机选择，因此不要只使用打印！**"
        -   type: 输入
            answer: "numbers is 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nprint 欢迎来到宾果之夜!\nprint 3 个幸运数字:\nprint numbers at random 和 print numbers at random 以及 print numbers at random"
            output: "欢迎来到宾果之夜!\n3 个幸运数字:\n5 和 3 以及 10"
        -   type: 输入
            answer: "movies is Avengers, Barbie, Inside Out\nprint 我们今晚要看电影.\nprint 我们选择: movies at random"
            output: "我们今晚要看电影.\n我们选择: Inside Out"
        -   type: 文本
            contents: "#### 练习 6：编程词汇\n我们又学了一些新的编程词汇！用你自己的话解释一下。"
        -   type: define
            word: list
            lines: '1'
            answer: 存储多个值的变量
        -   type: define
            word: random
            answer: 由计算机挑选。
            lines: '1'
        -   lines: '1'
            answer: 放置什么到列表
            word: add
            type: define
        -   type: 文本
            contents: "#### 练习 7：命令\n`is` 命令在此级别已发生改变，我们学习了一些新命令。\n它们起什么作用？用你自己的话解释一下。"
        -   answer: 将值（is 之前）保存在变量或列表中（is 之后）
            lines: '1'
            type: define
            word: '`is` 命令（注意：`is` 现在可以做多件事！）'
        -   lines: '1'
            type: define
            word: '`add to` 指令 '
            answer: '将项目添加到列表中。如下所示: add item to list'
        -   lines: '1'
            word: '`remove from` 指令 '
            type: define
            answer: '从列表中删除一项。如下所示: remove item from list'
        -   type: define
            lines: '1'
            answer: 从列表中随机挑选一个项目。
            word: '`at random` 指令 '
        -   type: 文本
            contents: '#### 你的看法是什么？'
        -   lines: '1'
            text: 您最喜欢这一级别的哪项练习？
            type: 提问
        -   type: 提问
            text: 你喜欢这些练习的哪些方面？
            lines: '5'
        -   type: 提问
            lines: '1'
            text: 在这个级别中，您最不喜欢哪项练习？
        -   lines: '5'
            text: 您不喜欢这项练习的哪些方面？
            type: 提问
        intro: "### 列表和随机性\n在本课结束时，您可以：\n* 将多个项目保存在一个变量中，这称为列表。\n* 创建一个故事，其中会发生随机的事情。\n* 创建一个将绘制随机事物的绘图。"
    4:
        exercises:
        -   type: 文本
            contents: "### 引号\n\n我们已经学会了使用引号，当文本需要在屏幕上按字面意思显示时。\n我们在`print` 和 `ask`中使用引号。"
            code: "朋友is ask '你叫什么名字？'\nprint '太棒了！我会和朋友一起去商场'"
        -   type: 文本
            contents: "#### 练习 1：完成代码。\n分两步完成此练习：\n1. 在代码中正确放置引号。\n2. 你做到了吗？然后预测此代码的输出。"
        -   type: 输出
            code: "print 大家好!\nprint 欢迎来 Hedy"
            answer: "大家好!\n欢迎来 Hedy"
            lines: '2'
        -   type: 文本
            contents: 不要忘记完成这个练习的两个步骤。将引号放在左侧，将代码放在右侧。
        -   answer: Todays lesson is by Hermans in room 305!
            lines: '1'
            type: 输出
            code: "name is Hermans\nclassroom is 305\nprint 今天的课程由 name 在 classroom 室讲授!"
        -   code: "teachers is Hermans, Merbis, Bagci, Senkal\nprint 今天老师 teachers at random is teaching."
            type: 输出
            answer: 今天老师Hermans
            lines: '1'
        -   type: 输出
            code: "rocks 是鹅卵石、石头、巨石\n打印 我爱编程！它棒极了！"
            lines: '1'
            answer: 我爱编程! 它棒极了!
        -   lines: '1'
            answer: 今天天气很好!
            type: 输出
            code: "print 今天天气很好y!\nname is Bozo"
        -   type: 文本
            contents: "#### 练习 2：错误？\n仔细阅读程序。哪些是正确的？"
        -   type: MC-code
            options:
            -   正确
            -   错误
            answer: 不正确。使用单引号时不能使用撇号。
            code: print‘明天I'll要去动物园’
        -   type: MC-code
            options:
            -   正确
            -   错误
            answer: 不正确。句子末尾需要加引号。
            code: 打印'我在动物园看到了一只羊驼
        -   type: MC-code
            answer: 正确！使用双引号时可以使用撇号。
            code: print "I think I'll feed the llama"
            options:
            -   正确
            -   错误
        -   type: MC-code
            options:
            -   正确
            -   错误
            code: "print '羊驼只是在街上徘徊'\nprint '如此的冒险'"
            answer: 正确！您不需要在每个句子中使用相同的引号，但我们建议这样做
        -   type: 文本
            contents: "#### Ask\n记得在 `ask` 后面也使用引号！\n\n#### 练习 3：错误？\n仔细阅读程序！哪些是正确的？"
        -   type: MC-code
            options:
            -   正确
            -   错误
            answer: 不正确。请记住在 ask 中使用变量！
            code: 问'你看到那两只兔子吗？'
        -   type: MC-code
            options:
            -   正确
            -   错误
            code: naam is ask 'What is your name
            answer: 不正确。您需要一对引号。
        -   type: MC-code
            options:
            -   正确
            -   错误
            code: owner is ask "这是杰克的水豚还是露西的水豚？"
            answer: 正确.
        -   options:
            -   正确
            -   错误
            code: "owner is ask \"Is that Jack's capybara or Lucy's?\"\nprint 'It is owner'"
            answer: 不正确。将打印单词所有者，而不是变量的值
            type: MC-code
        -   type: 文本
            contents: "#### 练习 4：编写代码\n查看输出并编写合适的代码。"
        -   type: 输入
            answer: "print“欢迎来到宾果之夜”\nprint“第一个数字来了……！”"
            output: "欢迎来到宾果之夜\n第一个数字来了……!"
        -   type: 输入
            answer: "打印“我们今晚要去看电影”\nfilm is ask“你要看什么类型的电影？”"
            output: "我们今晚要去看电影\n你要看什么类型的电影?"
        -   type: 文本
            contents: "#### 练习 5：编程词汇\n我们学习了一些新的编程词汇！用你自己的话解释它们。"
        -   lines: '1'
            answer: 用于打印或询问某事的撇号.
            type: define
            word: 引号
        -   type: define
            word: 在 Hedy 中如何使用引号？
            answer: 当你想将文本逐字打印到屏幕上时，可以使用引号
            lines: '1'
        -   type: 文本
            contents: "#### 练习 6：命令\n我们还在第 4 级学习了一些新命令。"
        -   type: define
            word: '`clear` 指令'
            answer: 清空屏幕
            lines: '1'
        -   type: define
            lines: '1'
            word: '`color` 指令'
            answer: 改变乌龟的颜色
        -   type: 文本
            contents: '#### 你怎么认为？'
        -   type: 提问
            lines: '1'
            text: 您最喜欢这个级别的哪项练习？
        -   type: 提问
            text: 你喜欢它什么地方？
            lines: '5'
        -   type: 提问
            text: 这个级别您最不喜欢哪项练习？
            lines: '1'
        -   lines: '5'
            type: 提问
            text: 您不喜欢它什么地方？
        intro: "## 引号\n在本课结束时，您可以：\n* 了解为什么编程中需要引号。\n* 将引号放在正确的位置。\n* 理解有关错误使用引号的错误消息。"
    5:
        intro: "## if else\n在本课结束时，您可以：\n* 让计算机对不同的输入做出反应。"
